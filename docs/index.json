{
  "articles/upgrade-3.0.html": {
    "href": "articles/upgrade-3.0.html",
    "title": "Upgrade from 2.x to 3.0 | FTP Server documentation",
    "keywords": "Overview File system changes Authorization/authentication as per RFC 2228 Account directories queryable Membership provider changes Connection Connection data changes Data connections Connection checks Idle check Connection check FTP middleware FTP request middleware FTP command execution middleware Server commands CloseConnectionServerCommand SendResponseServerCommand FTP command execution FtpContext Command handlers (and attributes) Command extensions (and attributes) FEAT support Internals FTP command collection changes Changelog What's new? What's changed? What's fixed? A look into the future Overview After the upgrade 3.0, you'll see that the IFtpServer.Start and IFtpServer.Stop functions are deprecated. Please query the IFtpServerHost instead and use the StartAsync and StopAsync functions instead. You will notice breaking changes in the following areas: File system Membership provider Command handlers (and attributes) Command extensions (and attributes) FEAT support Connection FTP command collection File system changes There are two important changes: IFileSystemClassFactory.Create now requires an IAccountInformation parameter The IUnixFileSystemEntry doesn't contain the FileSystem property anymore. Authorization/authentication as per RFC 2228 The authorization/authentication stack is new and implemented as specified in the RFC 2228 . This results in additional interfaces/extension points, like IAuthorizationMechanism IAuthenticationMechanism There is also a new extension point for actions to be called when the user is fully authorized: IAuthorizationAction . You can develop your own action, but you should only use an IAuthorizationAction.Level below 1000. The values from 1000 (incl.) to 2000 (incl.) are reserved by the FTP server and are used to initialize the FTP connection data. Account directories queryable A new interface has been introduced to get the root and home directories for a given user. Type name Description SingleRootWithoutHomeAccountDirectoryQuery Provides a single root for all users. RootPerUserAccountDirectoryQuery Gives every user its own root directory. Useful, when - for example - the file system root was set to /home . PamAccountDirectoryQuery Uses home directory information from PAM. The home directory can be configured to be the root instead. Membership provider changes The membership provider is now asynchronous which means that the ValidateUser function was renamed to ValidateUserAsync . Everything else is the same. Connection The IFtpConnection API was heavily overhauled to use a feature collection, where the features can be queried through the Features property. Using the WriteAsync function is obsolete. The FTP command handlers should use the CommandContext s ServerCommandWriter if they need to send out-of-band responses. Obsolete property Target feature Encoding IEncodingFeature OriginalStream ISecureConnectionFeature SocketStream ISecureConnectionFeature IsSecure ISecureConnectionFeature Obsolete method New home WriteAsync FtpCommandHandler.CommandContext.ResponseWriter or FtpCommandHandlerExtension.CommandContext.ResponseWriter Connection data changes The whole FtpConnectionData class is marked as obsolete. The connection datas IsAnonymous property is obsolete. An anonymous user is now detected by testing if the FtpConnectionData.User implements IAnonymousFtpUser . Most of the properties of IFtpConnection.Data were moved to a corresponding feature. Obsolete property Target feature NlstEncoding IEncodingFeature User IAuthorizationInformationFeature FileSystem IFileSystemFeature Path IFileSystemFeature CurrentDirectory IFileSystemFeature Language ILocalizationFeature Catalog ILocalizationFeature TransferMode ITransferConfigurationFeature PortAddress Removed TransferTypeCommandUsed Removed RestartPosition IRestCommandFeature RenameFrom IRenameCommandFeature ActiveMlstFacts IMlstFactsFeature PassiveSocketClient Removed BackgroundCommandHandler IBackgroundTaskLifetimeFeature CreateEncryptedStream ISecureConnectionFeature There's no direct replacement for the UserData property, but you can use the feature collection too. Data connections We're now using two factories to create data connections: ActiveDataConnectionFeatureFactory for active data connections ( PORT / EPRT commands) PassiveDataConnectionFeatureFactory for passive data connections ( PASV / EPSV commands) This factories create a IFtpDataConnectionFeature which is used to create IFtpDataConnection implementations. This allows us to abstract away the differences between active and passive data connections. The function IFtpConnection.CreateResponseSocket was replaced by DataConnectionServerCommand server command. The passed AsyncDataConnectionDelegate gets an IFtpDataConnection implementation and may return a response. This function also takes care of SSL/TLS encryption as it wraps the IFtpDataConnection implementation returned by the IFtpDataConnectionFeature into a new IFtpDataConnection implementation with the help of the SecureDataConnectionWrapper . The extension method SendResponseAsync on the IFtpConnection was replaced by the DataConnectionServerCommand server command and takes care of closing the IFtpDataConnection . Connection checks The FTP server allows to check if a connection is still active. It ensures that the server doesn't get filled with dead connections, where the server didn't recognize that the client is gone (e.g. client crash, aborted TCP connection, etc...). This was made possible by using the following two implementations for IFtpConnectionCheck : FtpConnectionEstablishedCheck checks if the TCP connection is still established FtpConnectionIdleCheck checks if the connection is idle for too long This checks are enabled by default and can be disabled and reenabled by the following extension methods for the IFtpServerBuilder : DisableChecks disables all checks (the default ones and the ones manually enabled before) EnableDefaultChecks enables all default checks (see above) EnableIdleCheck enables the check for an idle connection EnableConnectionCheck enables the check for an establised TCP connection DisableIdleCheck enables the check for an idle connection DisableConnectionCheck disables the check for an establised TCP connection The checks above are enabled by default. Idle check The idle check determines if the connection was idle for too long. The default timeout is 5 minutes, configured through FtpConnectionOptions.InactivityTimeout . Connection check This determines if the TCP connection is still established by sending an empty data packet to the client. FTP middleware There are two types of middlewares: FTP request middleware (between FTP command collection and dispatch) FTP command execution middleware (between FTP command dispatch and execution) FTP request middleware This middleware allows interception and modification of the received FTP commands. You must implement and register the IFtpMiddleware interface as service in your dependency injection container. FTP command execution middleware The difference between this and the former middleware is, that the FTP command handler for the FTP command is already selected and you can only intercept the FTP commands or do something special. You must implement and register the IFtpCommandMiddleware interface as service in your dependency injection container. An example is the FsIdChanger in the TestFtpServer project. This middleware sets - for every authenticated user - the UID/GID for file system access. Server commands We're now supporting custom FTP server commands. Those commands must implement IServerCommand and must have a corresponding handler ( IServerCommandHandler<TCommand> ). CloseConnectionServerCommand This command closes the FTP connection. SendResponseServerCommand This command sends a response to the client. FTP command execution Massive changes were done to the FTP command execution. The center of this changes is the new FtpContext which provides a new way to access all necessary information like the FTP connection, the command information and a channel to send server commands (which replaces IFtpConnection.WriteAsync ). FtpContext The new FtpContext is the FTP servers equivalent of ASP.NET Core's HttpContext and provides access to all information required to execute the FTP commands. Command handlers (and attributes) The command handlers were overhauled in the following areas: Lazy initialization Removed commands from DI container You can still add your FTP command handlers to the DI container, but those may (most likely) be ignored from version 4.0 and up. Implement your own IFtpCommandHandlerScanner or reuse AssemblyFtpCommandHandlerScanner New IFtpCommandHandlerScanner which scans for types that may implement FTP command handlers New IFtpCommandHandlerProvider which returns information for all found FTP command handler types Attributes for command information FtpCommandHandlerAttribute which gives the FTP command handler a name and defines if it needs a successful login or if it's abortable Simplified constructor due to CommandContext (type FtpCommandHandlerContext ) property injection Activated (read: instantiated with property injection) by command name using the IFtpCommandActivator service Command extensions (and attributes) The command extensions cannot be returned by IFtpCommandHandler.GetExtensions() anymore. The extensions were moved to their own file and the default extensions are automatically registered as service. Lazy initialization Removed command extensions from DI container You can still add your FTP command handler extensions to the DI container, but those may (most likely) be ignored from version 4.0 and up. Implement your own IFtpCommandHandlerExtensionScanner or reuse AssemblyFtpCommandHandlerExtensionScanner New IFtpCommandHandlerExtensionScanner which scans for types that may implement FTP command handler extensions New IFtpCommandHandlerExtensionProvider which returns information for all found FTP command handler extension types Attributes for command extension information FtpCommandHandlerExtensionAttribute which gives the FTP command handler extension a name and defines the command it extends and if it needs a successful login Simplified constructor due to CommandContext (type FtpCommandHandlerContext ) property injection Automatic indirect activation (read: instantiation with property injection) for the command it belongs to through the IFtpCommandActivator service FEAT support There are two new attributes to get the string to be returned by a FEAT command: FtpFeatureTextAttribute contains the feature text itself FtpFeatureFunctionAttribute contains the name of the static function to be called to get the feature text Internals FTP command collection changes We're now using ReadOnlySpan for both TelnetInputParser and FtpCommandCollector . Changelog What's new? In-memory file system Unix file system Passive data connection port range (contribution from 40three GmbH) New IFtpServerHost interface New IFtpService interface which allows easy integration into ASP.NET Core New IAccountInformation interface New IAnonymousFtpUser interface New RFC 2228 compliant authentication/authorization Root and home directories for an account can be queried New IFtpMiddleware interface for custom request middleware New IFtpCommandMiddleware interface for custom command execution middleware New FTP connection checks What's changed? Google drive upload without background uploader The IFtpCommandHandler.GetExtensions() is now deprecated as all extensions that were previously returned here have their own implementation now BREAKING: Usage of ReadOnlySpan in the FTP command collector BREAKING: IFileSystemClassFactory.Create takes an IAccountInformation BREAKING: The IMembershipProvider is now asynchronous BREAKING: FtpConnectionData.IsAnonymous is obsolete, the anonymous user is now of type IAnonymousFtpUser BREAKING: Moved PromiscuousPasv into PasvCommandOptions BREAKING: Removed property PortAddress , TransferTypeCommandUsed , and PassiveSocketClient from FtpConnectionData , because we're using a new IFtpDataConnection abstraction What's fixed? AUTH TLS fails gracefully when no SSL certificate is configured SITE BLST works again Fixed deadlock in MultiBindingTcpListener Thread safe increment/decrement for connection counter (fixes #68 ) The . directory will be returned again (fixes #56 ) A look into the future The 4.x version will drop support for .NET Standard 1.3 and - most likely - .NET 4.6.1 as the FTP Server will be reimplemented as ConnectionHandler which will result into the following improvements: Easy hosting in an ASP.NET Core application Using the ASP.NET Core connection state management"
  },
  "api/FubarDev.FtpServer.TelnetInputParser-1.html": {
    "href": "api/FubarDev.FtpServer.TelnetInputParser-1.html",
    "title": "Class TelnetInputParser<T> | FTP Server documentation",
    "keywords": "Class TelnetInputParser<T> Filters the TELNET commands usually sent before an ABOR command. Inheritance Object TelnetInputParser<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public abstract class TelnetInputParser<T> Type Parameters Name Description T The return type of a Collect(ReadOnlySpan<Byte>) operation. Methods | Improve this Doc View Source Collect(ReadOnlySpan<Byte>) Collects data and handles the Synch and Interrupt Process TELNET commands. Declaration public IReadOnlyList<T> Collect(ReadOnlySpan<byte> data) Parameters Type Name Description ReadOnlySpan < Byte > data The data buffer. Returns Type Description IReadOnlyList <T> The list of items found inside the collected data. | Improve this Doc View Source DataReceived(ReadOnlySpan<Byte>) Collects all non-TELNET data. Declaration protected abstract IEnumerable<T> DataReceived(ReadOnlySpan<byte> data) Parameters Type Name Description ReadOnlySpan < Byte > data The data buffer. Returns Type Description IEnumerable <T> The collected items. | Improve this Doc View Source InterruptProcess() Handles the Interrupt Process command. Declaration protected virtual IEnumerable<T> InterruptProcess() Returns Type Description IEnumerable <T> The collected items. | Improve this Doc View Source Synch() Handles the Synch command. Declaration protected virtual IEnumerable<T> Synch() Returns Type Description IEnumerable <T> The collected items."
  },
  "api/FubarDev.FtpServer.MultiBindingTcpListener.html": {
    "href": "api/FubarDev.FtpServer.MultiBindingTcpListener.html",
    "title": "Class MultiBindingTcpListener | FTP Server documentation",
    "keywords": "Class MultiBindingTcpListener Allows binding to a host name, which in turn may resolve to multiple IP addresses. Inheritance Object MultiBindingTcpListener Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class MultiBindingTcpListener Constructors | Improve this Doc View Source MultiBindingTcpListener(Nullable<String>, Int32, Nullable<ILogger>) Initializes a new instance of the MultiBindingTcpListener class. Declaration public MultiBindingTcpListener(string? address, int port, ILogger? logger = default(ILogger? )) Parameters Type Name Description Nullable < String > address The address/host name to bind to. Int32 port The listener port. Nullable < ILogger > logger The logger. Properties | Improve this Doc View Source Port Gets the port this listener is bound to. Declaration public int Port { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source StartAccepting() Start the asynchronous acception for all listeners. Declaration public void StartAccepting() | Improve this Doc View Source StartAsync() Start all listeners. Declaration public Task StartAsync() Returns Type Description Task the task. | Improve this Doc View Source Stop() Stops all listeners. Declaration public void Stop() | Improve this Doc View Source WaitAnyTcpClientAsync(CancellationToken) Wait for any client on all listeners. Declaration public Task<TcpClient> WaitAnyTcpClientAsync(CancellationToken token) Parameters Type Name Description CancellationToken token Cancellation token. Returns Type Description Task < TcpClient > The new TCP client."
  },
  "api/FubarDev.FtpServer.Localization.html": {
    "href": "api/FubarDev.FtpServer.Localization.html",
    "title": "Namespace FubarDev.FtpServer.Localization | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Localization Classes DefaultFtpCatalogLoader The default implementation of the IFtpCatalogLoader . DefaultFtpServerMessages The default implementation of IFtpServerMessages . Interfaces IFtpCatalogLoader Loads the catalog for a given language. IFtpServerMessages Interface to get the default messages."
  },
  "api/FubarDev.FtpServer.CommandHandlers.NoOpCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.NoOpCommandHandler.html",
    "title": "Class NoOpCommandHandler | FTP Server documentation",
    "keywords": "Class NoOpCommandHandler Implements the NOOP command. Inheritance Object FtpCommandHandler NoOpCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"NOOP\", false, true)] public class NoOpCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.RmdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.RmdCommandHandler.html",
    "title": "Class RmdCommandHandler | FTP Server documentation",
    "keywords": "Class RmdCommandHandler Implements the RMD command. Inheritance Object FtpCommandHandler RmdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"RMD\", false, true)] public class RmdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandExtensions.FtpCommandHandlerExtension.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.FtpCommandHandlerExtension.html",
    "title": "Class FtpCommandHandlerExtension | FTP Server documentation",
    "keywords": "Class FtpCommandHandlerExtension The base class for FTP command extensions. Inheritance Object FtpCommandHandlerExtension OptsMlstCommandExtension OptsUtf8CommandExtension SiteBlstCommandExtension SiteUtimeCommandExtension Implements IFtpCommandHandlerExtension IFtpCommandBase Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Commands.dll Syntax public abstract class FtpCommandHandlerExtension : IFtpCommandHandlerExtension, IFtpCommandBase Constructors | Improve this Doc View Source FtpCommandHandlerExtension() Initializes a new instance of the FtpCommandHandlerExtension class. Declaration protected FtpCommandHandlerExtension() | Improve this Doc View Source FtpCommandHandlerExtension(String, String, String[]) Initializes a new instance of the FtpCommandHandlerExtension class. Declaration [Obsolete(\"Use the FtpCommandHandlerExtensionAttribute together with an additional IFtpCommandHandlerExtensionScanner.\")] protected FtpCommandHandlerExtension(string extensionFor, string name, params string[] alternativeNames) Parameters Type Name Description String extensionFor The name of the command this extension is for. String name The command name. String [] alternativeNames Alternative names. Properties | Improve this Doc View Source CommandContext Gets or sets the FTP command context. Declaration public FtpCommandHandlerContext CommandContext { get; set; } Property Value Type Description FtpCommandHandlerContext | Improve this Doc View Source Connection Gets the connection this command was created for. Declaration protected IFtpConnection Connection { get; } Property Value Type Description IFtpConnection | Improve this Doc View Source Data Gets the connection data. Declaration [Obsolete(\"Query the information using the Features property instead.\")] protected FtpConnectionData Data { get; } Property Value Type Description FtpConnectionData | Improve this Doc View Source ExtensionFor Declaration public string ExtensionFor { get; } Property Value Type Description String | Improve this Doc View Source FtpContext Gets the connection this command was created for. Declaration protected FtpContext FtpContext { get; } Property Value Type Description FtpContext | Improve this Doc View Source IsLoginRequired Declaration [Obsolete(\"Use the FtpCommandHandlerExtension attribute instead.\")] public virtual bool? IsLoginRequired { get; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Names Declaration public IReadOnlyCollection<string> Names { get; } Property Value Type Description IReadOnlyCollection < String > Methods | Improve this Doc View Source InitializeConnectionData() Declaration public abstract void InitializeConnectionData() | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public abstract Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> | Improve this Doc View Source T(String) Translates a message using the current catalog of the active connection. Declaration protected string T(string message) Parameters Type Name Description String message The message to translate. Returns Type Description String The translated message. | Improve this Doc View Source T(String, Object[]) Translates a message using the current catalog of the active connection. Declaration [StringFormatMethod(\"message\")] protected string T(string message, params object[] args) Parameters Type Name Description String message The message to translate. Object [] args The format arguments. Returns Type Description String The translated message. Implements IFtpCommandHandlerExtension IFtpCommandBase"
  },
  "api/FubarDev.FtpServer.CommandExtensions.SiteUtimeCommandExtension.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.SiteUtimeCommandExtension.html",
    "title": "Class SiteUtimeCommandExtension | FTP Server documentation",
    "keywords": "Class SiteUtimeCommandExtension The implementation of the SITE UTIME command. Inheritance Object FtpCommandHandlerExtension SiteUtimeCommandExtension Implements IFtpCommandHandlerExtension IFtpCommandBase Inherited Members FtpCommandHandlerExtension.Names FtpCommandHandlerExtension.IsLoginRequired FtpCommandHandlerExtension.ExtensionFor FtpCommandHandlerExtension.CommandContext FtpCommandHandlerExtension.FtpContext FtpCommandHandlerExtension.Connection FtpCommandHandlerExtension.Data FtpCommandHandlerExtension.T(String) FtpCommandHandlerExtension.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandlerExtension(\"UTIME\", \"SITE\")] public class SiteUtimeCommandExtension : FtpCommandHandlerExtension, IFtpCommandHandlerExtension, IFtpCommandBase Remarks This doesn't exist as RFC. Instead, it's only documented on the ProFTPd site . This extension is hidden, according to https://ghisler.ch/board/viewtopic.php?t=24952 . Methods | Improve this Doc View Source InitializeConnectionData() Declaration public override void InitializeConnectionData() Overrides FtpCommandHandlerExtension.InitializeConnectionData() | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandlerExtension.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtension IFtpCommandBase"
  },
  "api/FubarDev.FtpServer.CommandHandlers.FtpCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.FtpCommandHandler.html",
    "title": "Class FtpCommandHandler | FTP Server documentation",
    "keywords": "Class FtpCommandHandler The base class for all FTP command handlers. Inheritance Object FtpCommandHandler AborCommandHandler AcctCommandHandler AdatCommandHandler AlloCommandHandler AppeCommandHandler AuthCommandHandler CdUpCommandHandler CwdCommandHandler DeleCommandHandler FeatCommandHandler HelpCommandHandler HostCommandHandler LangCommandHandler ListCommandHandler MdtmCommandHandler MfctCommandHandler MffCommandHandler MfmtCommandHandler MkdCommandHandler MlstCommandHandler ModeCommandHandler NoOpCommandHandler OptsCommandHandler PassCommandHandler PasvCommandHandler PbszCommandHandler PortCommandHandler ProtCommandHandler PwdCommandHandler QuitCommandHandler ReinCommandHandler RestCommandHandler RetrCommandHandler RmdCommandHandler RnfrCommandHandler RntoCommandHandler SiteCommandHandler SizeCommandHandler StatCommandHandler StorCommandHandler StruCommandHandler SystCommandHandler TypeCommandHandler UserCommandHandler XcwdCommandHandler XmkdCommandHandler XrmdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax public abstract class FtpCommandHandler : IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source FtpCommandHandler() Initializes a new instance of the FtpCommandHandler class. Declaration protected FtpCommandHandler() | Improve this Doc View Source FtpCommandHandler(String, String[]) Initializes a new instance of the FtpCommandHandler class. Declaration [Obsolete(\"The mapping from name to command handler is created by using the FtpCommandHandlerAttribute.\")] protected FtpCommandHandler(string name, params string[] alternativeNames) Parameters Type Name Description String name The command name. String [] alternativeNames Alternative names. Properties | Improve this Doc View Source CommandContext Gets or sets the FTP command context. Declaration public FtpCommandHandlerContext CommandContext { get; set; } Property Value Type Description FtpCommandHandlerContext | Improve this Doc View Source Connection Gets the connection this command was created for. Declaration protected IFtpConnection Connection { get; } Property Value Type Description IFtpConnection | Improve this Doc View Source Data Gets the connection data. Declaration [Obsolete(\"Query the information using the Features property instead.\")] protected FtpConnectionData Data { get; } Property Value Type Description FtpConnectionData | Improve this Doc View Source FtpContext Gets the connection this command was created for. Declaration protected FtpContext FtpContext { get; } Property Value Type Description FtpContext | Improve this Doc View Source IsAbortable Declaration [Obsolete(\"Information about an FTP command handler can be queried through the IFtpCommandHandlerProvider service.\")] public virtual bool IsAbortable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLoginRequired Declaration [Obsolete(\"Information about an FTP command handler can be queried through the IFtpCommandHandlerProvider service.\")] public virtual bool IsLoginRequired { get; } Property Value Type Description Boolean | Improve this Doc View Source Names Declaration [Obsolete(\"The mapping from name to command handler is created by using the FtpCommandHandlerAttribute.\")] public IReadOnlyCollection<string> Names { get; } Property Value Type Description IReadOnlyCollection < String > | Improve this Doc View Source ServerMessages Gets the server messages to be returned. Declaration protected IFtpServerMessages ServerMessages { get; } Property Value Type Description IFtpServerMessages Methods | Improve this Doc View Source GetExtensions() Declaration public virtual IEnumerable<IFtpCommandHandlerExtension> GetExtensions() Returns Type Description IEnumerable < IFtpCommandHandlerExtension > | Improve this Doc View Source GetSupportedFeatures(IFtpConnection) Declaration [Obsolete(\"FTP command handlers (and other types) are now annotated with attributes implementing IFeatureInfo.\")] public virtual IEnumerable<IFeatureInfo> GetSupportedFeatures(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection Returns Type Description IEnumerable < IFeatureInfo > | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public abstract Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> | Improve this Doc View Source T(String) Translates a message using the current catalog of the active connection. Declaration protected string T(string message) Parameters Type Name Description String message The message to translate. Returns Type Description String The translated message. | Improve this Doc View Source T(String, Nullable<Object>[]) Translates a message using the current catalog of the active connection. Declaration [StringFormatMethod(\"message\")] protected string T(string message, params object? [] args) Parameters Type Name Description String message The message to translate. Nullable < Object >[] args The format arguments. Returns Type Description String The translated message. Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.PassCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.PassCommandHandler.html",
    "title": "Class PassCommandHandler | FTP Server documentation",
    "keywords": "Class PassCommandHandler Implements the PASS command. Inheritance Object FtpCommandHandler PassCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PASS\", false, false)] public class PassCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.StruCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.StruCommandHandler.html",
    "title": "Class StruCommandHandler | FTP Server documentation",
    "keywords": "Class StruCommandHandler Implements the STRU command. Inheritance Object FtpCommandHandler StruCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"STRU\", false, true)] public class StruCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry.html",
    "title": "Interface IUnixDirectoryEntry | FTP Server documentation",
    "keywords": "Interface IUnixDirectoryEntry A unix directory entry. Inherited Members IUnixFileSystemEntry.Name IUnixFileSystemEntry.Permissions IUnixFileSystemEntry.LastWriteTime IUnixFileSystemEntry.CreatedTime IUnixFileSystemEntry.NumberOfLinks IUnixOwner.Owner IUnixOwner.Group Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixDirectoryEntry : IUnixFileSystemEntry, IUnixOwner Properties | Improve this Doc View Source IsDeletable Gets a value indicating whether this directory can be deleted. Declaration bool IsDeletable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRoot Gets a value indicating whether this is the root directory. Declaration bool IsRoot { get; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.RootPerUserAccountDirectoryQuery.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.RootPerUserAccountDirectoryQuery.html",
    "title": "Class RootPerUserAccountDirectoryQuery | FTP Server documentation",
    "keywords": "Class RootPerUserAccountDirectoryQuery A single root directory per user. Inheritance Object RootPerUserAccountDirectoryQuery Implements IAccountDirectoryQuery Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Directories.RootPerUser Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class RootPerUserAccountDirectoryQuery : IAccountDirectoryQuery Constructors | Improve this Doc View Source RootPerUserAccountDirectoryQuery(IOptions<RootPerUserAccountDirectoryQueryOptions>, Nullable<ILogger<RootPerUserAccountDirectoryQuery>>) Initializes a new instance of the RootPerUserAccountDirectoryQuery class. Declaration public RootPerUserAccountDirectoryQuery(IOptions<RootPerUserAccountDirectoryQueryOptions> options, ILogger<RootPerUserAccountDirectoryQuery>? logger = default(ILogger<RootPerUserAccountDirectoryQuery>? )) Parameters Type Name Description IOptions < RootPerUserAccountDirectoryQueryOptions > options The options. Nullable < ILogger < RootPerUserAccountDirectoryQuery >> logger The logger. Methods | Improve this Doc View Source GetDirectories(IAccountInformation) Declaration public IAccountDirectories GetDirectories(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description IAccountDirectories Implements IAccountDirectoryQuery"
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.NoTopLevelDomainValidation.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.NoTopLevelDomainValidation.html",
    "title": "Class NoTopLevelDomainValidation | FTP Server documentation",
    "keywords": "Class NoTopLevelDomainValidation Allows a server address for anonymous authentication without top level domain. Inheritance Object NoTopLevelDomainValidation Implements IAnonymousPasswordValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Anonymous Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class NoTopLevelDomainValidation : IAnonymousPasswordValidator Remarks In other words: No dot required after @ . Methods | Improve this Doc View Source IsValid(String) Declaration public bool IsValid(string password) Parameters Type Name Description String password Returns Type Description Boolean Implements IAnonymousPasswordValidator"
  },
  "api/FubarDev.FtpServer.Authentication.TlsAuthenticationMechanism.html": {
    "href": "api/FubarDev.FtpServer.Authentication.TlsAuthenticationMechanism.html",
    "title": "Class TlsAuthenticationMechanism | FTP Server documentation",
    "keywords": "Class TlsAuthenticationMechanism Implementation for the AUTH TLS command. Inheritance Object AuthenticationMechanism TlsAuthenticationMechanism Implements IAuthenticationMechanism IFeatureHost Inherited Members AuthenticationMechanism.Connection AuthenticationMechanism.T(String) AuthenticationMechanism.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authentication Assembly : FubarDev.FtpServer.dll Syntax [FtpFeatureFunction(\"CreateAuthTlsFeatureString\")] public class TlsAuthenticationMechanism : AuthenticationMechanism, IAuthenticationMechanism, IFeatureHost Constructors | Improve this Doc View Source TlsAuthenticationMechanism(IFtpConnection, ISslStreamWrapperFactory) Initializes a new instance of the TlsAuthenticationMechanism class. Declaration public TlsAuthenticationMechanism(IFtpConnection connection, ISslStreamWrapperFactory sslStreamWrapperFactory) Parameters Type Name Description IFtpConnection connection The required FTP connection. ISslStreamWrapperFactory sslStreamWrapperFactory The SslStream wrapper factory. Methods | Improve this Doc View Source CanHandle(String) Declaration public override bool CanHandle(string methodIdentifier) Parameters Type Name Description String methodIdentifier Returns Type Description Boolean Overrides AuthenticationMechanism.CanHandle(String) | Improve this Doc View Source CreateAuthTlsFeatureString(IFtpConnection) Build a string to be returned by the FEAT command handler. Declaration public static IEnumerable<string> CreateAuthTlsFeatureString(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The FTP connection. Returns Type Description IEnumerable < String > The string(s) to be returned. | Improve this Doc View Source GetSupportedFeatures(IFtpConnection) Gets a collection of features supported by this command handler. Declaration [Obsolete(\"FTP command handlers (and other types) are now annotated with attributes implementing IFeatureInfo.\")] public IEnumerable<IFeatureInfo> GetSupportedFeatures(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The FTP connection. Returns Type Description IEnumerable < IFeatureInfo > A list of features supported by this command handler. | Improve this Doc View Source HandleAdatAsync(Byte[], CancellationToken) Declaration public override Task<IFtpResponse> HandleAdatAsync(byte[] data, CancellationToken cancellationToken) Parameters Type Name Description Byte [] data CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthenticationMechanism.HandleAdatAsync(Byte[], CancellationToken) | Improve this Doc View Source HandleAuthAsync(String, CancellationToken) Declaration public override Task<IFtpResponse> HandleAuthAsync(string methodIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String methodIdentifier CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthenticationMechanism.HandleAuthAsync(String, CancellationToken) | Improve this Doc View Source HandlePbszAsync(Int64, CancellationToken) Declaration public override Task<IFtpResponse> HandlePbszAsync(long size, CancellationToken cancellationToken) Parameters Type Name Description Int64 size CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthenticationMechanism.HandlePbszAsync(Int64, CancellationToken) | Improve this Doc View Source HandleProtAsync(String, CancellationToken) Declaration public override Task<IFtpResponse> HandleProtAsync(string protCode, CancellationToken cancellationToken) Parameters Type Name Description String protCode CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthenticationMechanism.HandleProtAsync(String, CancellationToken) | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides AuthenticationMechanism.Reset() Implements IAuthenticationMechanism IFeatureHost"
  },
  "api/FubarDev.FtpServer.FtpFeatureFunctionAttribute.html": {
    "href": "api/FubarDev.FtpServer.FtpFeatureFunctionAttribute.html",
    "title": "Class FtpFeatureFunctionAttribute | FTP Server documentation",
    "keywords": "Class FtpFeatureFunctionAttribute Selects a function to be used to create the FEAT text. Inheritance Object Attribute FtpFeatureFunctionAttribute Implements IFeatureInfo Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class FtpFeatureFunctionAttribute : Attribute, IFeatureInfo Remarks The function must be accessible with GetDeclaredMethod(String) and must have the following signature: static string functionName(IFtpConnection) . Constructors | Improve this Doc View Source FtpFeatureFunctionAttribute(String) Initializes a new instance of the FtpFeatureFunctionAttribute class. Declaration public FtpFeatureFunctionAttribute(string functionName) Parameters Type Name Description String functionName The name of the function to be executed. Properties | Improve this Doc View Source Names Declaration [Obsolete(\"Features don't have names. Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public ISet<string> Names { get; } Property Value Type Description ISet < String > | Improve this Doc View Source RequiresAuthentication Declaration [Obsolete(\"This requirement is automatically determined through the FTP command handler.\")] public bool RequiresAuthentication { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildInfo(IFtpConnection) Declaration [Obsolete(\"Use BuildInfo(object, IFtpConnection) instead.\")] public string BuildInfo(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection Returns Type Description String | Improve this Doc View Source BuildInfo(Type, IFtpConnection) Declaration public IEnumerable<string> BuildInfo(Type reference, IFtpConnection connection) Parameters Type Name Description Type reference IFtpConnection connection Returns Type Description IEnumerable < String > Implements IFeatureInfo"
  },
  "api/FubarDev.FtpServer.FtpFeatureTextAttribute.html": {
    "href": "api/FubarDev.FtpServer.FtpFeatureTextAttribute.html",
    "title": "Class FtpFeatureTextAttribute | FTP Server documentation",
    "keywords": "Class FtpFeatureTextAttribute Defines a text to be sent by the FEAT command. Inheritance Object Attribute FtpFeatureTextAttribute Implements IFeatureInfo Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class FtpFeatureTextAttribute : Attribute, IFeatureInfo Constructors | Improve this Doc View Source FtpFeatureTextAttribute(String) Initializes a new instance of the FtpFeatureTextAttribute class. Declaration public FtpFeatureTextAttribute(string featureText) Parameters Type Name Description String featureText The text sent by the FEAT command. Properties | Improve this Doc View Source Names Declaration [Obsolete(\"Features don't have names. Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public ISet<string> Names { get; } Property Value Type Description ISet < String > | Improve this Doc View Source RequiresAuthentication Declaration [Obsolete(\"This requirement is automatically determined through the FTP command handler.\")] public bool RequiresAuthentication { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildInfo(IFtpConnection) Declaration [Obsolete(\"Use BuildInfo(object, IFtpConnection) instead.\")] public string BuildInfo(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection Returns Type Description String | Improve this Doc View Source BuildInfo(Type, IFtpConnection) Declaration public IEnumerable<string> BuildInfo(Type reference, IFtpConnection connection) Parameters Type Name Description Type reference IFtpConnection connection Returns Type Description IEnumerable < String > Implements IFeatureInfo"
  },
  "api/FubarDev.FtpServer.FtpResponseTextBlock.html": {
    "href": "api/FubarDev.FtpServer.FtpResponseTextBlock.html",
    "title": "Class FtpResponseTextBlock | FTP Server documentation",
    "keywords": "Class FtpResponseTextBlock An implementation of IFtpResponse that is usable for the FTP servers banner message. Inheritance Object FtpResponseTextBlock Implements IFtpResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpResponseTextBlock : IFtpResponse Constructors | Improve this Doc View Source FtpResponseTextBlock(Int32, IEnumerable<String>) Initializes a new instance of the FtpResponseTextBlock class. Declaration public FtpResponseTextBlock(int code, IEnumerable<string> lines) Parameters Type Name Description Int32 code The FTP response code. IEnumerable < String > lines The text to be sent to the client. Properties | Improve this Doc View Source AfterWriteAction Declaration [Obsolete(\"Use a custom server command.\")] public FtpResponseAfterWriteAsyncDelegate? AfterWriteAction { get; } Property Value Type Description Nullable < FtpResponseAfterWriteAsyncDelegate > | Improve this Doc View Source Code Declaration public int Code { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetNextLineAsync(Nullable<Object>, CancellationToken) Declaration public Task<FtpResponseLine> GetNextLineAsync(object? token, CancellationToken cancellationToken) Parameters Type Name Description Nullable < Object > token CancellationToken cancellationToken Returns Type Description Task < FtpResponseLine > | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IFtpResponse"
  },
  "api/FubarDev.FtpServer.IFtpLoginStateMachine.html": {
    "href": "api/FubarDev.FtpServer.IFtpLoginStateMachine.html",
    "title": "Interface IFtpLoginStateMachine | FTP Server documentation",
    "keywords": "Interface IFtpLoginStateMachine Interface for a FTP login state machine. Inherited Members IFtpStateMachine<SecurityStatus>.Status IFtpStateMachine<SecurityStatus>.Reset() IFtpStateMachine<SecurityStatus>.ExecuteAsync(FtpCommand, CancellationToken) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpLoginStateMachine : IFtpStateMachine<SecurityStatus> Properties | Improve this Doc View Source SelectedAuthenticationMechanism Gets the selected authentication mechanism. Declaration IAuthenticationMechanism? SelectedAuthenticationMechanism { get; } Property Value Type Description Nullable < IAuthenticationMechanism > | Improve this Doc View Source SelectedAuthorizationMechanism Gets the selected authorization mechanism. Declaration IAuthorizationMechanism? SelectedAuthorizationMechanism { get; } Property Value Type Description Nullable < IAuthorizationMechanism > Methods | Improve this Doc View Source Activate(IAuthenticationMechanism) Activate this authentication mechanism. Declaration void Activate(IAuthenticationMechanism authenticationMechanism) Parameters Type Name Description IAuthenticationMechanism authenticationMechanism The authentication mechanism to activate."
  },
  "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider.html",
    "title": "Class UnixFileSystemProvider | FTP Server documentation",
    "keywords": "Class UnixFileSystemProvider A file system provider that uses the Posix API. Inheritance Object UnixFileSystemProvider Implements IFileSystemClassFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.Unix Assembly : FubarDev.FtpServer.FileSystem.Unix.dll Syntax public class UnixFileSystemProvider : IFileSystemClassFactory Constructors | Improve this Doc View Source UnixFileSystemProvider(IOptions<UnixFileSystemOptions>, IAccountDirectoryQuery, Nullable<ILogger<UnixFileSystemProvider>>) Initializes a new instance of the UnixFileSystemProvider class. Declaration public UnixFileSystemProvider(IOptions<UnixFileSystemOptions> options, IAccountDirectoryQuery accountDirectoryQuery, ILogger<UnixFileSystemProvider>? logger = default(ILogger<UnixFileSystemProvider>? )) Parameters Type Name Description IOptions < UnixFileSystemOptions > options The file system options. IAccountDirectoryQuery accountDirectoryQuery Interface to query account directories. Nullable < ILogger < UnixFileSystemProvider >> logger The logger for this file system. Methods | Improve this Doc View Source Create(IAccountInformation) Declaration public Task<IUnixFileSystem> Create(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description Task < IUnixFileSystem > Implements IFileSystemClassFactory"
  },
  "api/FubarDev.FtpServer.Commands.DefaultFeatureInfoProvider.html": {
    "href": "api/FubarDev.FtpServer.Commands.DefaultFeatureInfoProvider.html",
    "title": "Class DefaultFeatureInfoProvider | FTP Server documentation",
    "keywords": "Class DefaultFeatureInfoProvider Default implementation of IFeatureInfoProvider . Inheritance Object DefaultFeatureInfoProvider Implements IFeatureInfoProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class DefaultFeatureInfoProvider : IFeatureInfoProvider Constructors | Improve this Doc View Source DefaultFeatureInfoProvider(IFtpCommandHandlerProvider, IFtpCommandHandlerExtensionProvider, IFtpHostSelector) Initializes a new instance of the DefaultFeatureInfoProvider class. Declaration public DefaultFeatureInfoProvider(IFtpCommandHandlerProvider commandHandlerProvider, IFtpCommandHandlerExtensionProvider extensionProvider, IFtpHostSelector hostSelector) Parameters Type Name Description IFtpCommandHandlerProvider commandHandlerProvider Provider for the FTP command handlers. IFtpCommandHandlerExtensionProvider extensionProvider Provider for the FTP command handler extensions. IFtpHostSelector hostSelector The FTP host selector. Methods | Improve this Doc View Source GetFeatureInfoItems() Declaration public IEnumerable<FoundFeatureInfo> GetFeatureInfoItems() Returns Type Description IEnumerable < FoundFeatureInfo > Implements IFeatureInfoProvider"
  },
  "api/FubarDev.FtpServer.CommandHandlers.RestCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.RestCommandHandler.html",
    "title": "Class RestCommandHandler | FTP Server documentation",
    "keywords": "Class RestCommandHandler Implements the REST command. Inheritance Object FtpCommandHandler RestCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"REST\", false, true)] [FtpFeatureText(\"REST STREAM\")] public class RestCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.Generic.GenericAccessMode.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Generic.GenericAccessMode.html",
    "title": "Class GenericAccessMode | FTP Server documentation",
    "keywords": "Class GenericAccessMode Generic implementation of the IAccessMode interface. Inheritance Object GenericAccessMode Implements IAccessMode Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.Generic Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class GenericAccessMode : IAccessMode Constructors | Improve this Doc View Source GenericAccessMode(Boolean, Boolean, Boolean) Initializes a new instance of the GenericAccessMode class. Declaration public GenericAccessMode(bool read, bool write, bool execute) Parameters Type Name Description Boolean read Determines whether reading is allowed. Boolean write Determines whether writing is allowed. Boolean execute Determines whether execution is allowed. Properties | Improve this Doc View Source Execute Declaration public bool Execute { get; } Property Value Type Description Boolean | Improve this Doc View Source Read Declaration public bool Read { get; } Property Value Type Description Boolean | Improve this Doc View Source Write Declaration public bool Write { get; } Property Value Type Description Boolean Implements IAccessMode"
  },
  "api/FubarDev.FtpServer.FileSystem.Generic.GenericUnixPermissions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Generic.GenericUnixPermissions.html",
    "title": "Class GenericUnixPermissions | FTP Server documentation",
    "keywords": "Class GenericUnixPermissions Generic implementation of IUnixPermissions . Inheritance Object GenericUnixPermissions Implements IUnixPermissions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.Generic Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class GenericUnixPermissions : IUnixPermissions Constructors | Improve this Doc View Source GenericUnixPermissions(IAccessMode, IAccessMode, IAccessMode) Initializes a new instance of the GenericUnixPermissions class. Declaration public GenericUnixPermissions(IAccessMode user, IAccessMode group, IAccessMode other) Parameters Type Name Description IAccessMode user The user permissions. IAccessMode group The group permissions. IAccessMode other The other permissions. Properties | Improve this Doc View Source Group Declaration public IAccessMode Group { get; } Property Value Type Description IAccessMode | Improve this Doc View Source Other Declaration public IAccessMode Other { get; } Property Value Type Description IAccessMode | Improve this Doc View Source User Declaration public IAccessMode User { get; } Property Value Type Description IAccessMode Implements IUnixPermissions Extension Methods PermissionsExtensions.GetAccessModeFor(IUnixPermissions, IUnixOwner, IFtpUser) PermissionsExtensions.GetAccessModeFor(IUnixPermissions, IUnixOwner, ClaimsPrincipal)"
  },
  "api/FubarDev.FtpServer.CommandExtensions.FtpCommandHandlerExtensionAttribute.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.FtpCommandHandlerExtensionAttribute.html",
    "title": "Class FtpCommandHandlerExtensionAttribute | FTP Server documentation",
    "keywords": "Class FtpCommandHandlerExtensionAttribute Marks a class as being an FTP command handler extension. Inheritance Object Attribute FtpCommandHandlerExtensionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class FtpCommandHandlerExtensionAttribute : Attribute Remarks The class must implement IFtpCommandHandlerExtension . Constructors | Improve this Doc View Source FtpCommandHandlerExtensionAttribute(String, String) Initializes a new instance of the FtpCommandHandlerExtensionAttribute class. Declaration public FtpCommandHandlerExtensionAttribute(string name, string extensionOf) Parameters Type Name Description String name The name of the FTP command this handler accepts. String extensionOf The na of the FTP command this extension belongs to. | Improve this Doc View Source FtpCommandHandlerExtensionAttribute(String, String, Boolean) Initializes a new instance of the FtpCommandHandlerExtensionAttribute class. Declaration public FtpCommandHandlerExtensionAttribute(string name, string extensionOf, bool isLoginRequired) Parameters Type Name Description String name The name of the FTP command this handler accepts. String extensionOf The na of the FTP command this extension belongs to. Boolean isLoginRequired Indicates whether this command is abortable. Properties | Improve this Doc View Source ExtensionOf Gets the name of the FTP command this extension belongs to. Declaration public string ExtensionOf { get; } Property Value Type Description String | Improve this Doc View Source IsLoginRequired Gets a value indicating whether a login is required to execute this command. Declaration public bool? IsLoginRequired { get; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Name Gets the name of the FTP command extension. Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AcctCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AcctCommandHandler.html",
    "title": "Class AcctCommandHandler | FTP Server documentation",
    "keywords": "Class AcctCommandHandler Implements the ACCT command. Inheritance Object FtpCommandHandler AcctCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"ACCT\", false, false)] public class AcctCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.HostCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.HostCommandHandler.html",
    "title": "Class HostCommandHandler | FTP Server documentation",
    "keywords": "Class HostCommandHandler Implementation of the HOST command. Inheritance Object FtpCommandHandler HostCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"HOST\", false, false)] [FtpFeatureText(\"HOST\")] public class HostCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Commands.IFeatureInfoProvider.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFeatureInfoProvider.html",
    "title": "Interface IFeatureInfoProvider | FTP Server documentation",
    "keywords": "Interface IFeatureInfoProvider Provides feature information. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFeatureInfoProvider Methods | Improve this Doc View Source GetFeatureInfoItems() Get all feature information items that can be found in the system. Declaration IEnumerable<FoundFeatureInfo> GetFeatureInfoItems() Returns Type Description IEnumerable < FoundFeatureInfo > The feature information items."
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.IBackgroundTransferWorker.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.IBackgroundTransferWorker.html",
    "title": "Interface IBackgroundTransferWorker | FTP Server documentation",
    "keywords": "Interface IBackgroundTransferWorker A background transfer worker. Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IBackgroundTransferWorker Methods | Improve this Doc View Source EnqueueAsync(IBackgroundTransfer, CancellationToken) Enqueue an entry for a background transfer (e.g. upload). Declaration Task EnqueueAsync(IBackgroundTransfer backgroundTransfer, CancellationToken cancellationToken) Parameters Type Name Description IBackgroundTransfer backgroundTransfer The background transfer to enqueue. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source GetStates() Get the status of all pending and active background transfers. Declaration IReadOnlyCollection<BackgroundTransferInfo> GetStates() Returns Type Description IReadOnlyCollection < BackgroundTransferInfo > The status of all background transfers."
  },
  "api/FubarDev.FtpServer.Authentication.ISslStreamWrapperFactory.html": {
    "href": "api/FubarDev.FtpServer.Authentication.ISslStreamWrapperFactory.html",
    "title": "Interface ISslStreamWrapperFactory | FTP Server documentation",
    "keywords": "Interface ISslStreamWrapperFactory Interface to wrap an unencrypted stream in an SslStream. Namespace : FubarDev.FtpServer.Authentication Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ISslStreamWrapperFactory Methods | Improve this Doc View Source CloseStreamAsync(Stream, CancellationToken) Close the SslStream gracefully (if possible). Declaration Task CloseStreamAsync(Stream sslStream, CancellationToken cancellationToken) Parameters Type Name Description Stream sslStream The SslStream to close. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source WrapStreamAsync(Stream, Boolean, X509Certificate, CancellationToken) Wraps the unencrypted stream in an SslStream. Declaration Task<Stream> WrapStreamAsync(Stream unencryptedStream, bool keepOpen, X509Certificate certificate, CancellationToken cancellationToken) Parameters Type Name Description Stream unencryptedStream The unencrypted stream. Boolean keepOpen Keep the unencryptedStream open when the SslStream gets disposed. X509Certificate certificate The certificate to be used to authenticate as server. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Stream > The SslStream that wraps the unencryptedStream ."
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome Classes SingleRootWithoutHomeAccountDirectoryQuery All users share the same root and none has a home directory. SingleRootWithoutHomeAccountDirectoryQueryOptions Options for the SingleRootWithoutHomeAccountDirectoryQuery ."
  },
  "api/FubarDev.FtpServer.ServerCommands.TlsEnableServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.TlsEnableServerCommand.html",
    "title": "Class TlsEnableServerCommand | FTP Server documentation",
    "keywords": "Class TlsEnableServerCommand Command to be sent to enable TLS for the control connection. Inheritance Object TlsEnableServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public class TlsEnableServerCommand : IServerCommand Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.ServerCommands.ResumeConnectionServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.ResumeConnectionServerCommand.html",
    "title": "Class ResumeConnectionServerCommand | FTP Server documentation",
    "keywords": "Class ResumeConnectionServerCommand Resumes the connection (only RX). Inheritance Object ResumeConnectionServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public class ResumeConnectionServerCommand : IServerCommand Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.ServerCommands.ReflectionServerCommandExecutor.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.ReflectionServerCommandExecutor.html",
    "title": "Class ReflectionServerCommandExecutor | FTP Server documentation",
    "keywords": "Class ReflectionServerCommandExecutor This IServerCommandExecutor implementation calls the server command handler using reflection. Inheritance Object ReflectionServerCommandExecutor Implements IServerCommandExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public class ReflectionServerCommandExecutor : IServerCommandExecutor Constructors | Improve this Doc View Source ReflectionServerCommandExecutor(IFtpConnectionAccessor) Initializes a new instance of the ReflectionServerCommandExecutor class. Declaration public ReflectionServerCommandExecutor(IFtpConnectionAccessor ftpConnectionAccessor) Parameters Type Name Description IFtpConnectionAccessor ftpConnectionAccessor Accessor to get the FTP connection. Methods | Improve this Doc View Source ExecuteAsync(IServerCommand, CancellationToken) Execute the given server command. Declaration public Task ExecuteAsync(IServerCommand serverCommand, CancellationToken cancellationToken) Parameters Type Name Description IServerCommand serverCommand The server command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. Implements IServerCommandExecutor"
  },
  "api/FubarDev.FtpServer.Localization.DefaultFtpCatalogLoader.html": {
    "href": "api/FubarDev.FtpServer.Localization.DefaultFtpCatalogLoader.html",
    "title": "Class DefaultFtpCatalogLoader | FTP Server documentation",
    "keywords": "Class DefaultFtpCatalogLoader The default implementation of the IFtpCatalogLoader . Inheritance Object DefaultFtpCatalogLoader Implements IFtpCatalogLoader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Localization Assembly : FubarDev.FtpServer.dll Syntax public class DefaultFtpCatalogLoader : IFtpCatalogLoader Properties | Improve this Doc View Source DefaultCatalog Gets the catalog for the DefaultLanguage . Declaration public ICatalog DefaultCatalog { get; } Property Value Type Description NGettext.ICatalog | Improve this Doc View Source DefaultLanguage Gets the default language. Declaration public CultureInfo DefaultLanguage { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source GetSupportedLanguages() Gets all supported languages. Declaration public IReadOnlyCollection<string> GetSupportedLanguages() Returns Type Description IReadOnlyCollection < String > The collection of all supported languages. | Improve this Doc View Source LoadAsync(CultureInfo, CancellationToken) Loads the catalog for a given language . Declaration public Task<ICatalog> LoadAsync(CultureInfo language, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CultureInfo language The language to load the catalog for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < NGettext.ICatalog > The loaded catalog. Implements IFtpCatalogLoader"
  },
  "api/FubarDev.FtpServer.IFtpMiddleware.html": {
    "href": "api/FubarDev.FtpServer.IFtpMiddleware.html",
    "title": "Interface IFtpMiddleware | FTP Server documentation",
    "keywords": "Interface IFtpMiddleware FTP middleware. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpMiddleware Methods | Improve this Doc View Source InvokeAsync(FtpContext, FtpRequestDelegate) Function that gets invoked for the middleware. Declaration Task InvokeAsync(FtpContext context, FtpRequestDelegate next) Parameters Type Name Description FtpContext context The context for the current FTP command. FtpRequestDelegate next The next middleware. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.FileSystem.S3.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.S3.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.S3 | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.S3 Classes S3FileSystem The S3-based file system implementation. S3FileSystemOptions Options for the S3 file system."
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveOptions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveOptions.html",
    "title": "Class GoogleDriveOptions | FTP Server documentation",
    "keywords": "Class GoogleDriveOptions Options for the Google Drive-based file system. Inheritance Object GoogleDriveOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.GoogleDrive Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public class GoogleDriveOptions Properties | Improve this Doc View Source UseBackgroundUpload Gets or sets a value indicating whether a background upload should be used. Declaration public bool UseBackgroundUpload { get; set; } Property Value Type Description Boolean Remarks If this is set to false, then the direct upload is used."
  },
  "api/FubarDev.FtpServer.Features.IMlstFactsFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IMlstFactsFeature.html",
    "title": "Interface IMlstFactsFeature | FTP Server documentation",
    "keywords": "Interface IMlstFactsFeature Active facts sent by MLST and MLSD . Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IMlstFactsFeature Properties | Improve this Doc View Source ActiveMlstFacts Gets the active IFact sent by MLST and MLSD . Declaration ISet<string> ActiveMlstFacts { get; } Property Value Type Description ISet < String >"
  },
  "api/FubarDev.FtpServer.Features.ILocalizationFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.ILocalizationFeature.html",
    "title": "Interface ILocalizationFeature | FTP Server documentation",
    "keywords": "Interface ILocalizationFeature Localization feature. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ILocalizationFeature Properties | Improve this Doc View Source Catalog Gets or sets the catalog to be used by the default FTP server implementation. Declaration ICatalog Catalog { get; set; } Property Value Type Description NGettext.ICatalog | Improve this Doc View Source Language Gets or sets the selected language. Declaration CultureInfo Language { get; set; } Property Value Type Description CultureInfo"
  },
  "api/FubarDev.FtpServer.ConnectionHandlers.IFtpConnectionAdapter.html": {
    "href": "api/FubarDev.FtpServer.ConnectionHandlers.IFtpConnectionAdapter.html",
    "title": "Interface IFtpConnectionAdapter | FTP Server documentation",
    "keywords": "Interface IFtpConnectionAdapter An FTP connection adapter does something with the input and output pipes. Inherited Members IFtpService.StartAsync(CancellationToken) IFtpService.StopAsync(CancellationToken) Namespace : FubarDev.FtpServer.ConnectionHandlers Assembly : FubarDev.FtpServer.dll Syntax public interface IFtpConnectionAdapter : IFtpService Remarks It uses a sender and a receiver service to be able to start/stop the tasks. Properties | Improve this Doc View Source Receiver Gets the pausable receiver for this connection adapter. Declaration IPausableFtpService Receiver { get; } Property Value Type Description IPausableFtpService | Improve this Doc View Source Sender Gets the sender for this connection adapter. Declaration IFtpService Sender { get; } Property Value Type Description IFtpService"
  },
  "api/FubarDev.FtpServer.ConnectionExtensions.html": {
    "href": "api/FubarDev.FtpServer.ConnectionExtensions.html",
    "title": "Class ConnectionExtensions | FTP Server documentation",
    "keywords": "Class ConnectionExtensions Extension methods for IFtpConnection . Inheritance Object ConnectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class ConnectionExtensions Methods | Improve this Doc View Source ExecuteCommand(IFtpConnection, FtpCommand, Func<FtpCommand, CancellationToken, Task<Nullable<IFtpResponse>>>, Nullable<ILogger>, CancellationToken) Executes some code with error handling. Declaration public static Task<IFtpResponse? > ExecuteCommand(this IFtpConnection connection, FtpCommand command, Func<FtpCommand, CancellationToken, Task<IFtpResponse? >> commandAction, ILogger? logger, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection The connection to execute the code for. FtpCommand command The command to execute the code for. Func < FtpCommand , CancellationToken , Task < Nullable < IFtpResponse >>> commandAction The action to be executed. Nullable < ILogger > logger The logger to be used for logging. CancellationToken cancellationToken The cancellation token to signal command abortion. Returns Type Description Task < Nullable < IFtpResponse >> The task with the (optional) response."
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.html",
    "title": "Namespace FubarDev.FtpServer.BackgroundTransfer | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.BackgroundTransfer Classes BackgroundCommandHandler Asynchronous processing of an FTP command. BackgroundTransferInfo Information about a background transfer. TempFileTemporaryData Creates a temporary file to store the data. TemporaryDataFactory Factory to create ITemporaryData objects. Interfaces IBackgroundTransfer Interface for background data transfers. IBackgroundTransferWorker A background transfer worker. ITemporaryData Temporary data holder. ITemporaryDataFactory Factory for temporary data objects. Enums BackgroundTransferStatus The status of a single IBackgroundTransfer . Delegates TemporaryDataFactory.CreateAsyncDelegate The delegate to create temporary data objects."
  },
  "api/FubarDev.FtpServer.Authorization.Actions.html": {
    "href": "api/FubarDev.FtpServer.Authorization.Actions.html",
    "title": "Namespace FubarDev.FtpServer.Authorization.Actions | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Authorization.Actions Classes FillConnectionAccountDataAction Fills the connection data upon successful authorization. FillConnectionFileSystemDataAction Fills the connection data upon successful authorization. SetHomeDirectoryAction Sets the home directory for the connection. SetHomeDirectoryActionOptions Options for the SetHomeDirectoryAction ."
  },
  "api/FubarDev.FtpServer.AccountManagement.MemberValidationResult.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.MemberValidationResult.html",
    "title": "Class MemberValidationResult | FTP Server documentation",
    "keywords": "Class MemberValidationResult Result for a member validation. Inheritance Object MemberValidationResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class MemberValidationResult Constructors | Improve this Doc View Source MemberValidationResult(MemberValidationStatus) Initializes a new instance of the MemberValidationResult class. Declaration public MemberValidationResult(MemberValidationStatus status) Parameters Type Name Description MemberValidationStatus status The error status for the validation. | Improve this Doc View Source MemberValidationResult(MemberValidationStatus, IFtpUser) Initializes a new instance of the MemberValidationResult class. Declaration [Obsolete(\"Use the overload accepting a ClaimsPrincipal.\")] public MemberValidationResult(MemberValidationStatus status, IFtpUser user) Parameters Type Name Description MemberValidationStatus status The success status for the validation. IFtpUser user The validated user. | Improve this Doc View Source MemberValidationResult(MemberValidationStatus, ClaimsPrincipal) Initializes a new instance of the MemberValidationResult class. Declaration public MemberValidationResult(MemberValidationStatus status, ClaimsPrincipal user) Parameters Type Name Description MemberValidationStatus status The success status for the validation. ClaimsPrincipal user The validated user. Properties | Improve this Doc View Source FtpUser Gets the FTP user. Declaration public ClaimsPrincipal FtpUser { get; } Property Value Type Description ClaimsPrincipal | Improve this Doc View Source IsSuccess Gets a value indicating whether the user login succeeded. Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Status Gets the status of the validation. Declaration [Obsolete(\"Use the IsAnonymous extension method for ClaimsPrincipal.\")] public MemberValidationStatus Status { get; } Property Value Type Description MemberValidationStatus | Improve this Doc View Source User Gets the authenticated user. Declaration [Obsolete(\"Use the FtpUser property.\")] public IFtpUser User { get; } Property Value Type Description IFtpUser"
  },
  "api/FubarDev.FtpServer.SimplePasvAddressResolver.html": {
    "href": "api/FubarDev.FtpServer.SimplePasvAddressResolver.html",
    "title": "Class SimplePasvAddressResolver | FTP Server documentation",
    "keywords": "Class SimplePasvAddressResolver The default implementation of the SimplePasvAddressResolver . Inheritance Object SimplePasvAddressResolver Implements IPasvAddressResolver Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class SimplePasvAddressResolver : IPasvAddressResolver Remarks The address family number gets ignored by this resolver. We always use the same address family as the local end point. Constructors | Improve this Doc View Source SimplePasvAddressResolver(IOptions<SimplePasvOptions>) Initializes a new instance of the SimplePasvAddressResolver class. Declaration public SimplePasvAddressResolver(IOptions<SimplePasvOptions> options) Parameters Type Name Description IOptions < SimplePasvOptions > options The options. Methods | Improve this Doc View Source GetOptionsAsync(IFtpConnection, Nullable<AddressFamily>, CancellationToken) Get the PASV / EPSV options. Declaration public Task<PasvListenerOptions> GetOptionsAsync(IFtpConnection connection, AddressFamily? addressFamily, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection The FTP connection. Nullable < AddressFamily > addressFamily The address family for the address to be selected. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < PasvListenerOptions > The task returning the options. Implements IPasvAddressResolver"
  },
  "api/FubarDev.FtpServer.ServerCommands.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.html",
    "title": "Namespace FubarDev.FtpServer.ServerCommands | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ServerCommands Classes CloseConnectionServerCommand Command to close the connection. CloseDataConnectionServerCommand Command to close the data connection. DataConnectionServerCommand Command to be called when data gets send over FTP-DATA. DelegateServerCommandExecutor This IServerCommandExecutor implementation creates a compiled delegate to call the server command handlers. PauseConnectionServerCommand Pauses the connection (only RX). ReflectionServerCommandExecutor This IServerCommandExecutor implementation calls the server command handler using reflection. ResumeConnectionServerCommand Resumes the connection (only RX). SendResponseServerCommand Server command for sending a response to the client. TlsEnableServerCommand Command to be sent to enable TLS for the control connection. Interfaces IServerCommand Base interface for all server commands. IServerCommandExecutor A server command executor. IServerCommandHandler<TCommand> Interface to be implemented by a server command handler. Delegates AsyncDataConnectionDelegate Delegate for sending or receivung data over a data connection."
  },
  "api/FubarDev.FtpServer.Localization.IFtpServerMessages.html": {
    "href": "api/FubarDev.FtpServer.Localization.IFtpServerMessages.html",
    "title": "Interface IFtpServerMessages | FTP Server documentation",
    "keywords": "Interface IFtpServerMessages Interface to get the default messages. Namespace : FubarDev.FtpServer.Localization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpServerMessages Remarks This is incomplete yet, but it supports (at least) the configuration of banner and greeting messages. Methods | Improve this Doc View Source GetBannerMessage() Gets the FTP servers banner message. Declaration IEnumerable<string> GetBannerMessage() Returns Type Description IEnumerable < String > the FTP servers banner message. | Improve this Doc View Source GetDirectoryChangedMessage(Stack<IUnixDirectoryEntry>) Gets the message that the directory could be changed successfully. Declaration IEnumerable<string> GetDirectoryChangedMessage(Stack<IUnixDirectoryEntry> path) Parameters Type Name Description Stack < IUnixDirectoryEntry > path The path the message needs to be created for. Returns Type Description IEnumerable < String > the FTP servers message. | Improve this Doc View Source GetPasswordAuthorizationSuccessfulMessage(IAccountInformation) Gets the message that the password authorization was successfully. Declaration IEnumerable<string> GetPasswordAuthorizationSuccessfulMessage(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation The account information. Returns Type Description IEnumerable < String > the FTP servers message."
  },
  "api/FubarDev.FtpServer.Localization.IFtpCatalogLoader.html": {
    "href": "api/FubarDev.FtpServer.Localization.IFtpCatalogLoader.html",
    "title": "Interface IFtpCatalogLoader | FTP Server documentation",
    "keywords": "Interface IFtpCatalogLoader Loads the catalog for a given language. Namespace : FubarDev.FtpServer.Localization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCatalogLoader Properties | Improve this Doc View Source DefaultCatalog Gets the catalog for the DefaultLanguage . Declaration ICatalog DefaultCatalog { get; } Property Value Type Description NGettext.ICatalog | Improve this Doc View Source DefaultLanguage Gets the default language. Declaration CultureInfo DefaultLanguage { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source GetSupportedLanguages() Gets all supported languages. Declaration IReadOnlyCollection<string> GetSupportedLanguages() Returns Type Description IReadOnlyCollection < String > The collection of all supported languages. | Improve this Doc View Source LoadAsync(CultureInfo, CancellationToken) Loads the catalog for a given language . Declaration Task<ICatalog> LoadAsync(CultureInfo language, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CultureInfo language The language to load the catalog for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < NGettext.ICatalog > The loaded catalog."
  },
  "api/FubarDev.FtpServer.IFtpServerHost.html": {
    "href": "api/FubarDev.FtpServer.IFtpServerHost.html",
    "title": "Interface IFtpServerHost | FTP Server documentation",
    "keywords": "Interface IFtpServerHost Interface for a simple FTP server host. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public interface IFtpServerHost Remarks This services is used to start and stop all IFtpService instances. Methods | Improve this Doc View Source StartAsync(CancellationToken) Must be called to start the FTP server host. Declaration Task StartAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Indicates that the start process has been aborted. Returns Type Description Task The task. Remarks Starts all FTP server services. | Improve this Doc View Source StopAsync(CancellationToken) Must be called for a graceful shutdown of the FTP server host. Declaration Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Indicates that the shutdown process should no longer be graceful. Returns Type Description Task The task. Remarks Stops all FTP server services."
  },
  "api/FubarDev.FtpServer.CommandExtensions.OptsUtf8CommandExtension.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.OptsUtf8CommandExtension.html",
    "title": "Class OptsUtf8CommandExtension | FTP Server documentation",
    "keywords": "Class OptsUtf8CommandExtension The implementation of the OPTS UTF8 command. Inheritance Object FtpCommandHandlerExtension OptsUtf8CommandExtension Implements IFtpCommandHandlerExtension IFtpCommandBase Inherited Members FtpCommandHandlerExtension.Names FtpCommandHandlerExtension.ExtensionFor FtpCommandHandlerExtension.CommandContext FtpCommandHandlerExtension.FtpContext FtpCommandHandlerExtension.Connection FtpCommandHandlerExtension.Data FtpCommandHandlerExtension.T(String) FtpCommandHandlerExtension.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandlerExtension(\"UTF8\", \"OPTS\", false)] [FtpCommandHandlerExtension(\"UTF-8\", \"OPTS\", false)] [FtpFeatureText(\"UTF8\")] public class OptsUtf8CommandExtension : FtpCommandHandlerExtension, IFtpCommandHandlerExtension, IFtpCommandBase Properties | Improve this Doc View Source IsLoginRequired Declaration [Obsolete(\"Use the FtpCommandHandlerExtension attribute instead.\")] public override bool? IsLoginRequired { get; } Property Value Type Description Nullable < Boolean > Overrides FtpCommandHandlerExtension.IsLoginRequired Methods | Improve this Doc View Source InitializeConnectionData() Declaration public override void InitializeConnectionData() Overrides FtpCommandHandlerExtension.InitializeConnectionData() | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandlerExtension.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtension IFtpCommandBase"
  },
  "api/FubarDev.FtpServer.CommandHandlers.TypeCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.TypeCommandHandler.html",
    "title": "Class TypeCommandHandler | FTP Server documentation",
    "keywords": "Class TypeCommandHandler Implements the TYPE command. Inheritance Object FtpCommandHandler TypeCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"TYPE\", false, true)] public class TypeCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry.html",
    "title": "Interface IUnixFileSystemEntry | FTP Server documentation",
    "keywords": "Interface IUnixFileSystemEntry The file system entry information that is shared between a IUnixDirectoryEntry and a IUnixFileEntry . Inherited Members IUnixOwner.Owner IUnixOwner.Group Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixFileSystemEntry : IUnixOwner Properties | Improve this Doc View Source CreatedTime Gets the time of creation. Declaration DateTimeOffset? CreatedTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source LastWriteTime Gets the last write time. Declaration DateTimeOffset? LastWriteTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Name Gets the name of the file system entry. Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source NumberOfLinks Gets the number of links. Declaration long NumberOfLinks { get; } Property Value Type Description Int64 | Improve this Doc View Source Permissions Gets the file entry permissions. Declaration IUnixPermissions Permissions { get; } Property Value Type Description IUnixPermissions"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MfmtCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MfmtCommandHandler.html",
    "title": "Class MfmtCommandHandler | FTP Server documentation",
    "keywords": "Class MfmtCommandHandler Implements the MFMT command. Inheritance Object FtpCommandHandler MfmtCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MFMT\", false, true)] [FtpFeatureText(\"MFMT\")] public class MfmtCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.Error.FileUnavailableException.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.FileUnavailableException.html",
    "title": "Class FileUnavailableException | FTP Server documentation",
    "keywords": "Class FileUnavailableException Requested action not taken. File unavailable (e.g., file not found, no access). Inheritance Object Exception FileSystemException FileUnavailableException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.FileSystem.Error Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FileUnavailableException : FileSystemException, ISerializable Constructors | Improve this Doc View Source FileUnavailableException() Initializes a new instance of the FileUnavailableException class. Declaration public FileUnavailableException() | Improve this Doc View Source FileUnavailableException(String) Initializes a new instance of the FileUnavailableException class. Declaration public FileUnavailableException(string message) Parameters Type Name Description String message The error message. | Improve this Doc View Source FileUnavailableException(String, Exception) Initializes a new instance of the FileUnavailableException class. Declaration public FileUnavailableException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The underlying exception. Properties | Improve this Doc View Source FtpErrorCode Declaration public override int FtpErrorCode { get; } Property Value Type Description Int32 Overrides FileSystemException.FtpErrorCode | Improve this Doc View Source FtpErrorName Declaration public override string FtpErrorName { get; } Property Value Type Description String Overrides FileSystemException.FtpErrorName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FubarDev.FtpServer.FileSystem.Error.StorageExceededException.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.StorageExceededException.html",
    "title": "Class StorageExceededException | FTP Server documentation",
    "keywords": "Class StorageExceededException Requested file action aborted. Exceeded storage allocation (for current directory or dataset). Inheritance Object Exception FileSystemException StorageExceededException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.FileSystem.Error Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class StorageExceededException : FileSystemException, ISerializable Constructors | Improve this Doc View Source StorageExceededException() Initializes a new instance of the StorageExceededException class. Declaration public StorageExceededException() | Improve this Doc View Source StorageExceededException(String) Initializes a new instance of the StorageExceededException class. Declaration public StorageExceededException(string message) Parameters Type Name Description String message The error message. | Improve this Doc View Source StorageExceededException(String, Exception) Initializes a new instance of the StorageExceededException class. Declaration public StorageExceededException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The underlying exception. Properties | Improve this Doc View Source FtpErrorCode Declaration public override int FtpErrorCode { get; } Property Value Type Description Int32 Overrides FileSystemException.FtpErrorCode | Improve this Doc View Source FtpErrorName Declaration public override string FtpErrorName { get; } Property Value Type Description String Overrides FileSystemException.FtpErrorName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FubarDev.FtpServer.CommandHandlers.CdUpCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.CdUpCommandHandler.html",
    "title": "Class CdUpCommandHandler | FTP Server documentation",
    "keywords": "Class CdUpCommandHandler Implements the CDUP command. Inheritance Object FtpCommandHandler CdUpCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"CDUP\", false, true)] [FtpCommandHandler(\"XCUP\", false, true)] public class CdUpCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.XmkdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.XmkdCommandHandler.html",
    "title": "Class XmkdCommandHandler | FTP Server documentation",
    "keywords": "Class XmkdCommandHandler Implements the XMKD command. Inheritance Object FtpCommandHandler XmkdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"XMKD\", false, true)] public class XmkdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.SimpleMailAddressValidation.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.SimpleMailAddressValidation.html",
    "title": "Class SimpleMailAddressValidation | FTP Server documentation",
    "keywords": "Class SimpleMailAddressValidation The password must have the form of a valid email address. Inheritance Object SimpleMailAddressValidation Implements IAnonymousPasswordValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Anonymous Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SimpleMailAddressValidation : IAnonymousPasswordValidator Remarks A @ is required and the host name must contain a dot. Methods | Improve this Doc View Source IsValid(String) Declaration public bool IsValid(string password) Parameters Type Name Description String password Returns Type Description Boolean Implements IAnonymousPasswordValidator"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.GenericFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.GenericFact.html",
    "title": "Class GenericFact | FTP Server documentation",
    "keywords": "Class GenericFact A generic fact to be used when no predefined exists. Inheritance Object GenericFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class GenericFact : IFact Constructors | Improve this Doc View Source GenericFact(String, String) Initializes a new instance of the GenericFact class. Declaration public GenericFact(string name, string value) Parameters Type Name Description String name The fact name. String value The fact value. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveFileSystem.html",
    "title": "Class GoogleDriveFileSystem | FTP Server documentation",
    "keywords": "Class GoogleDriveFileSystem The IUnixFileSystem implementation that uses Google Drive. Inheritance Object GoogleDriveFileSystem Implements IUnixFileSystem IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.GoogleDrive Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public sealed class GoogleDriveFileSystem : IGoogleDriveFileSystem, IUnixFileSystem, IDisposable Constructors | Improve this Doc View Source GoogleDriveFileSystem(DriveService, File, ITemporaryDataFactory, Boolean) Initializes a new instance of the GoogleDriveFileSystem class. Declaration public GoogleDriveFileSystem(DriveService service, File rootFolderInfo, ITemporaryDataFactory temporaryDataFactory, bool useBackgroundUpload) Parameters Type Name Description Google.Apis.Drive.v3.DriveService service The Google.Apis.Drive.v3.DriveService instance to use to access the Google Drive. Google.Apis.Drive.v3.Data.File rootFolderInfo The Google.Apis.Drive.v3.Data.File to use as root folder. ITemporaryDataFactory temporaryDataFactory The factory to create temporary data objects. Boolean useBackgroundUpload Use the Google Drive uploader instead of the background uploader. Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source Service Declaration public DriveService Service { get; } Property Value Type Description Google.Apis.Drive.v3.DriveService | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < DateTimeOffset > modify Nullable < DateTimeOffset > access Nullable < DateTimeOffset > create CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem System.IDisposable"
  },
  "api/FubarDev.FtpServer.CommandExtensions.DefaultFtpCommandHandlerExtensionProvider.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.DefaultFtpCommandHandlerExtensionProvider.html",
    "title": "Class DefaultFtpCommandHandlerExtensionProvider | FTP Server documentation",
    "keywords": "Class DefaultFtpCommandHandlerExtensionProvider Default implementation of IFtpCommandHandlerExtensionProvider . Inheritance Object DefaultFtpCommandHandlerExtensionProvider Implements IFtpCommandHandlerExtensionProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.dll Syntax public class DefaultFtpCommandHandlerExtensionProvider : IFtpCommandHandlerExtensionProvider Constructors | Improve this Doc View Source DefaultFtpCommandHandlerExtensionProvider(IEnumerable<IFtpCommandHandlerExtensionScanner>, Nullable<ILogger<DefaultFtpCommandHandlerExtensionProvider>>) Initializes a new instance of the DefaultFtpCommandHandlerExtensionProvider class. Declaration public DefaultFtpCommandHandlerExtensionProvider(IEnumerable<IFtpCommandHandlerExtensionScanner> scanners, ILogger<DefaultFtpCommandHandlerExtensionProvider>? logger = default(ILogger<DefaultFtpCommandHandlerExtensionProvider>? )) Parameters Type Name Description IEnumerable < IFtpCommandHandlerExtensionScanner > scanners The scanners to search for FTP command handlers. Nullable < ILogger < DefaultFtpCommandHandlerExtensionProvider >> logger The logger. Properties | Improve this Doc View Source CommandHandlerExtensions Gets the information for all command handler extensions. Declaration public IEnumerable<IFtpCommandHandlerExtensionInformation> CommandHandlerExtensions { get; } Property Value Type Description IEnumerable < IFtpCommandHandlerExtensionInformation > Implements IFtpCommandHandlerExtensionProvider"
  },
  "api/FubarDev.FtpServer.AccountManagement.MemberValidationStatus.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.MemberValidationStatus.html",
    "title": "Enum MemberValidationStatus | FTP Server documentation",
    "keywords": "Enum MemberValidationStatus Validation result for a IMembershipProvider . Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum MemberValidationStatus Fields Name Description Anonymous Anonymous user. AuthenticatedUser User authenticated successfully. InvalidAnonymousEmail Email address validation for anonymous login failed. InvalidLogin User name or password invalid."
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.TlsEnableServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.TlsEnableServerCommandHandler.html",
    "title": "Class TlsEnableServerCommandHandler | FTP Server documentation",
    "keywords": "Class TlsEnableServerCommandHandler Handler for the TlsEnableServerCommand . Inheritance Object TlsEnableServerCommandHandler Implements IServerCommandHandler < TlsEnableServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class TlsEnableServerCommandHandler : IServerCommandHandler<TlsEnableServerCommand> Constructors | Improve this Doc View Source TlsEnableServerCommandHandler(IFtpConnectionAccessor, IOptions<AuthTlsOptions>, Nullable<ILogger<TlsEnableServerCommandHandler>>) Initializes a new instance of the TlsEnableServerCommandHandler class. Declaration public TlsEnableServerCommandHandler(IFtpConnectionAccessor connectionAccessor, IOptions<AuthTlsOptions> options, ILogger<TlsEnableServerCommandHandler>? logger = default(ILogger<TlsEnableServerCommandHandler>? )) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. IOptions < AuthTlsOptions > options Options for the AUTH TLS command. Nullable < ILogger < TlsEnableServerCommandHandler >> logger The logger. Methods | Improve this Doc View Source ExecuteAsync(TlsEnableServerCommand, CancellationToken) Declaration public Task ExecuteAsync(TlsEnableServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description TlsEnableServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.SendResponseServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.SendResponseServerCommandHandler.html",
    "title": "Class SendResponseServerCommandHandler | FTP Server documentation",
    "keywords": "Class SendResponseServerCommandHandler Command handler for the SendResponseServerCommand . Inheritance Object SendResponseServerCommandHandler Implements IServerCommandHandler < SendResponseServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class SendResponseServerCommandHandler : IServerCommandHandler<SendResponseServerCommand> Constructors | Improve this Doc View Source SendResponseServerCommandHandler(IFtpConnectionAccessor, Nullable<ILogger<SendResponseServerCommandHandler>>) Initializes a new instance of the SendResponseServerCommandHandler class. Declaration public SendResponseServerCommandHandler(IFtpConnectionAccessor connectionAccessor, ILogger<SendResponseServerCommandHandler>? logger = default(ILogger<SendResponseServerCommandHandler>? )) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Nullable < ILogger < SendResponseServerCommandHandler >> logger The logger. Methods | Improve this Doc View Source ExecuteAsync(SendResponseServerCommand, CancellationToken) Declaration public Task ExecuteAsync(SendResponseServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description SendResponseServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.IListFormatter.html": {
    "href": "api/FubarDev.FtpServer.IListFormatter.html",
    "title": "Interface IListFormatter | FTP Server documentation",
    "keywords": "Interface IListFormatter Interface that provides the text to output for the LIST and NLST commands. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IListFormatter Methods | Improve this Doc View Source Format(IUnixFileSystemEntry, Nullable<String>) Gets the output line to write for the given IUnixFileSystemEntry . Declaration string Format(IUnixFileSystemEntry entry, string? entryName = default(string? )) Parameters Type Name Description IUnixFileSystemEntry entry The entry to create the output line for. Nullable < String > entryName The name of the entry (can be null if the original entry name should be used). Returns Type Description String The text to write to the client."
  },
  "api/FubarDev.FtpServer.FtpStateMachine-1.Transition.html": {
    "href": "api/FubarDev.FtpServer.FtpStateMachine-1.Transition.html",
    "title": "Class FtpStateMachine<TStatus>.Transition | FTP Server documentation",
    "keywords": "Class FtpStateMachine<TStatus>.Transition A class representing a transition. Inheritance Object FtpStateMachine<TStatus>.Transition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax protected class Transition Constructors | Improve this Doc View Source Transition(TStatus, TStatus, String, SecurityActionResult) Initializes a new instance of the FtpStateMachine<TStatus>.Transition class. Declaration public Transition(TStatus source, TStatus target, string command, SecurityActionResult resultCode) Parameters Type Name Description TStatus source The source status. TStatus target The target status. String command The trigger command. SecurityActionResult resultCode The expected FTP code. | Improve this Doc View Source Transition(TStatus, TStatus, String, Func<Int32, Boolean>) Initializes a new instance of the FtpStateMachine<TStatus>.Transition class. Declaration public Transition(TStatus source, TStatus target, string command, Func<int, bool> isCodeMatch) Parameters Type Name Description TStatus source The source status. TStatus target The target status. String command The trigger command. Func < Int32 , Boolean > isCodeMatch A function to test if the code triggers this transition. | Improve this Doc View Source Transition(TStatus, TStatus, String, Int32) Initializes a new instance of the FtpStateMachine<TStatus>.Transition class. Declaration public Transition(TStatus source, TStatus target, string command, int hundredsRange) Parameters Type Name Description TStatus source The source status. TStatus target The target status. String command The trigger command. Int32 hundredsRange The hundreds range. Remarks The hundredsRange is multiplied by 100 to get the FTP code range. Properties | Improve this Doc View Source Source Gets the source status. Declaration public TStatus Source { get; } Property Value Type Description TStatus | Improve this Doc View Source Target Gets the target status. Declaration public TStatus Target { get; } Property Value Type Description TStatus Methods | Improve this Doc View Source IsMatch(String) Returns true when this transition might be triggered by the given command . Declaration public bool IsMatch(string command) Parameters Type Name Description String command The command to test for. Returns Type Description Boolean true when this transition might be triggered by the given command . | Improve this Doc View Source IsMatch(String, Int32) Returns true when this transition will be triggered by the given command and code . Declaration public bool IsMatch(string command, int code) Parameters Type Name Description String command The command to test for. Int32 code The code to test for. Returns Type Description Boolean true when this transition will be triggered by the given command and code ."
  },
  "api/FubarDev.FtpServer.FtpCommandHandlerContext.html": {
    "href": "api/FubarDev.FtpServer.FtpCommandHandlerContext.html",
    "title": "Class FtpCommandHandlerContext | FTP Server documentation",
    "keywords": "Class FtpCommandHandlerContext The context in which an FTP command gets executed. Inheritance Object FtpCommandHandlerContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpCommandHandlerContext Constructors | Improve this Doc View Source FtpCommandHandlerContext(FtpContext) Initializes a new instance of the FtpCommandHandlerContext class. Declaration public FtpCommandHandlerContext(FtpContext ftpContext) Parameters Type Name Description FtpContext ftpContext The FTP context. Properties | Improve this Doc View Source FtpContext Gets the FTP context. Declaration public FtpContext FtpContext { get; } Property Value Type Description FtpContext"
  },
  "api/FubarDev.FtpServer.FtpCommandCollector.html": {
    "href": "api/FubarDev.FtpServer.FtpCommandCollector.html",
    "title": "Class FtpCommandCollector | FTP Server documentation",
    "keywords": "Class FtpCommandCollector Collects FTP commands using the current Encoding . Inheritance Object FtpCommandCollector Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public sealed class FtpCommandCollector Constructors | Improve this Doc View Source FtpCommandCollector(Func<Encoding>) Initializes a new instance of the FtpCommandCollector class. Declaration public FtpCommandCollector(Func<Encoding> getActiveEncodingFunc) Parameters Type Name Description Func < Encoding > getActiveEncodingFunc The delegate to get the current encoding for. Properties | Improve this Doc View Source Encoding Gets the currently active Encoding . Declaration public Encoding Encoding { get; } Property Value Type Description Encoding | Improve this Doc View Source IsEmpty Gets a value indicating whether this collector contains unused data. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Collect(ReadOnlySpan<Byte>) Collects the data from the buffer and tries to build FtpCommand objects from it. Declaration public IEnumerable<FtpCommand> Collect(ReadOnlySpan<byte> buffer) Parameters Type Name Description ReadOnlySpan < Byte > buffer The buffer to collect the data from. Returns Type Description IEnumerable < FtpCommand > The found FtpCommand s."
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.InMemory | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.InMemory Classes InMemoryDirectoryEntry The im-memory directory entry. InMemoryFileEntry The in-memory file. InMemoryFileSystem The implementation of the in-memory file system. InMemoryFileSystemEntry The base class for all in-memory file system entries. InMemoryFileSystemOptions In-memory file system options. InMemoryFileSystemProvider An implementation of an in-memory file system."
  },
  "api/FubarDev.FtpServer.Features.IConnectionFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IConnectionFeature.html",
    "title": "Interface IConnectionFeature | FTP Server documentation",
    "keywords": "Interface IConnectionFeature Information about the current connection. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IConnectionFeature Properties | Improve this Doc View Source LocalEndPoint Gets the local end point. Declaration IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint | Improve this Doc View Source RemoteAddress Gets the remote address of the client. Declaration [Obsolete] Address RemoteAddress { get; } Property Value Type Description Address | Improve this Doc View Source RemoteEndPoint Gets the remote end point. Declaration IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint"
  },
  "api/FubarDev.FtpServer.Features.IBackgroundTaskLifetimeFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IBackgroundTaskLifetimeFeature.html",
    "title": "Interface IBackgroundTaskLifetimeFeature | FTP Server documentation",
    "keywords": "Interface IBackgroundTaskLifetimeFeature Feature for background tasks (abortable commands). Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IBackgroundTaskLifetimeFeature Properties | Improve this Doc View Source Command Gets the command that gets run in the background. Declaration FtpCommand Command { get; } Property Value Type Description FtpCommand | Improve this Doc View Source Handler Gets the FTP command handler. Declaration IFtpCommandBase Handler { get; } Property Value Type Description IFtpCommandBase | Improve this Doc View Source Task Gets the abortable task. Declaration Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source Abort() Aborts the command that is run in the background. Declaration void Abort()"
  },
  "api/FubarDev.FtpServer.ConnectionHandlers.IFtpSecureConnectionAdapter.html": {
    "href": "api/FubarDev.FtpServer.ConnectionHandlers.IFtpSecureConnectionAdapter.html",
    "title": "Interface IFtpSecureConnectionAdapter | FTP Server documentation",
    "keywords": "Interface IFtpSecureConnectionAdapter Connection adapter for a secure connection. Inherited Members IFtpConnectionAdapter.Sender IFtpConnectionAdapter.Receiver IFtpService.StartAsync(CancellationToken) IFtpService.StopAsync(CancellationToken) Namespace : FubarDev.FtpServer.ConnectionHandlers Assembly : FubarDev.FtpServer.dll Syntax public interface IFtpSecureConnectionAdapter : IFtpConnectionAdapter, IFtpService Methods | Improve this Doc View Source EnableSslStreamAsync(X509Certificate2, CancellationToken) Enables encryption with an SslStream . Declaration Task EnableSslStreamAsync(X509Certificate2 certificate, CancellationToken cancellationToken) Parameters Type Name Description X509Certificate2 certificate The server certificate (with private key). CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source ResetAsync(CancellationToken) Resets the connection to non-encrypted communication. Declaration Task ResetAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandDispatcher.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandDispatcher.html",
    "title": "Interface IFtpCommandDispatcher | FTP Server documentation",
    "keywords": "Interface IFtpCommandDispatcher Interface for a FTP command dispatcher. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandDispatcher Methods | Improve this Doc View Source DispatchAsync(FtpContext, CancellationToken) Passes the FTP commands to the handlers. Declaration Task DispatchAsync(FtpContext context, CancellationToken cancellationToken) Parameters Type Name Description FtpContext context The context for the FTP command execution. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.Authorization.html": {
    "href": "api/FubarDev.FtpServer.Authorization.html",
    "title": "Namespace FubarDev.FtpServer.Authorization | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Authorization Classes AuthorizationMechanism The base class for an authorization mechanism. PasswordAuthorization The default password authentication mechanism. Interfaces IAuthorizationAction Interface for actions that need to be executed upon successful authorization. IAuthorizationMechanism Interface for all authorization mechanisms."
  },
  "api/FubarDev.FtpServer.AccountManagement.IMembershipProvider.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.IMembershipProvider.html",
    "title": "Interface IMembershipProvider | FTP Server documentation",
    "keywords": "Interface IMembershipProvider Membership provider interface. Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IMembershipProvider Remarks This interface must be implemented to allow the username/password authentication. Methods | Improve this Doc View Source ValidateUserAsync(String, String) Validates if the combination of username and password is valid. Declaration Task<MemberValidationResult> ValidateUserAsync(string username, string password) Parameters Type Name Description String username The user name. String password The password. Returns Type Description Task < MemberValidationResult > The result of the validation."
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixPermissions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixPermissions.html",
    "title": "Interface IUnixPermissions | FTP Server documentation",
    "keywords": "Interface IUnixPermissions Unix file system entry permissions. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixPermissions Properties | Improve this Doc View Source Group Gets the group permissions. Declaration IAccessMode Group { get; } Property Value Type Description IAccessMode | Improve this Doc View Source Other Gets the other permissions. Declaration IAccessMode Other { get; } Property Value Type Description IAccessMode | Improve this Doc View Source User Gets the user permissions. Declaration IAccessMode User { get; } Property Value Type Description IAccessMode Extension Methods PermissionsExtensions.GetAccessModeFor(IUnixPermissions, IUnixOwner, IFtpUser) PermissionsExtensions.GetAccessModeFor(IUnixPermissions, IUnixOwner, ClaimsPrincipal)"
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixOwner.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixOwner.html",
    "title": "Interface IUnixOwner | FTP Server documentation",
    "keywords": "Interface IUnixOwner Defines the owning user and group of an item. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixOwner Properties | Improve this Doc View Source Group Gets the group. Declaration string Group { get; } Property Value Type Description String | Improve this Doc View Source Owner Gets the owner. Declaration string Owner { get; } Property Value Type Description String"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.DotNet | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.DotNet Classes DotNetDirectoryEntry A IUnixDirectoryEntry implementation for the standard .NET file system functionality. DotNetFileEntry A IUnixFileEntry implementation for the standard .NET file system functionality. DotNetFileSystem A IUnixFileSystem implementation that uses the standard .NET functionality to access the file system. DotNetFileSystemEntry Base class for System.IO based file system entries. DotNetFileSystemOptions Options for the .NET API based file system access. DotNetFileSystemProvider A IFileSystemClassFactory implementation that uses the standard .NET functionality to provide file system access."
  },
  "api/FubarDev.FtpServer.DataConnection.PassiveDataConnectionFeatureFactory.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.PassiveDataConnectionFeatureFactory.html",
    "title": "Class PassiveDataConnectionFeatureFactory | FTP Server documentation",
    "keywords": "Class PassiveDataConnectionFeatureFactory Creates a passive FTP data connection. Inheritance Object PassiveDataConnectionFeatureFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.DataConnection Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PassiveDataConnectionFeatureFactory Constructors | Improve this Doc View Source PassiveDataConnectionFeatureFactory(IPasvListenerFactory, IFtpConnectionAccessor, IEnumerable<IFtpDataConnectionValidator>, Nullable<ILogger<PassiveDataConnectionFeatureFactory>>) Initializes a new instance of the PassiveDataConnectionFeatureFactory class. Declaration public PassiveDataConnectionFeatureFactory(IPasvListenerFactory pasvListenerFactory, IFtpConnectionAccessor connectionAccessor, IEnumerable<IFtpDataConnectionValidator> validators, ILogger<PassiveDataConnectionFeatureFactory>? logger = default(ILogger<PassiveDataConnectionFeatureFactory>? )) Parameters Type Name Description IPasvListenerFactory pasvListenerFactory The PASV listener factory. IFtpConnectionAccessor connectionAccessor The FTP connection accessor. IEnumerable < IFtpDataConnectionValidator > validators An enumeration of FTP connection validators. Nullable < ILogger < PassiveDataConnectionFeatureFactory >> logger The logger. Methods | Improve this Doc View Source CreateFeatureAsync(FtpCommand, Nullable<AddressFamily>, CancellationToken) Creates a new IFtpDataConnectionFeature instance. Declaration public Task<IFtpDataConnectionFeature> CreateFeatureAsync(FtpCommand ftpCommand, AddressFamily? addressFamily, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand ftpCommand The FTP command that initiated the creation of the feature. Nullable < AddressFamily > addressFamily The address family for the address to be selected. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpDataConnectionFeature > The task returning the IFtpDataConnectionFeature instance."
  },
  "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionInstanceInformation.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionInstanceInformation.html",
    "title": "Interface IFtpCommandHandlerExtensionInstanceInformation | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtensionInstanceInformation Interface to get the instance for a command handler extension created through dependency injection. Inherited Members IFtpCommandHandlerExtensionInformation.Type IFtpCommandHandlerExtensionInformation.ExtensionOf IFtpCommandInformation.Name IFtpCommandInformation.IsLoginRequired IFtpCommandInformation.IsAbortable Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.dll Syntax [Obsolete] public interface IFtpCommandHandlerExtensionInstanceInformation : IFtpCommandHandlerExtensionInformation, IFtpCommandInformation Properties | Improve this Doc View Source Instance Gets the FTP command handler extension instance. Declaration IFtpCommandHandlerExtension Instance { get; } Property Value Type Description IFtpCommandHandlerExtension"
  },
  "api/FubarDev.FtpServer.AccountManagement.IFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.IFtpUser.html",
    "title": "Interface IFtpUser | FTP Server documentation",
    "keywords": "Interface IFtpUser A basic FTP user interface. Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use ClaimsPrincipal\")] public interface IFtpUser Properties | Improve this Doc View Source Name Gets the name of the user. Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source IsInGroup(String) Returns true when the user is in the given group. Declaration bool IsInGroup(string groupName) Parameters Type Name Description String groupName The name of the group. Returns Type Description Boolean true when the user is in the queries groupName . Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement.Anonymous | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement.Anonymous Classes BlockAnonymousValidation Disallow anonymous logins. NoTopLevelDomainValidation Allows a server address for anonymous authentication without top level domain. NoValidation Performs no validation. Every kind of password is allowed. SimpleMailAddressValidation The password must have the form of a valid email address. Interfaces IAnonymousPasswordValidator This interface validates the password for an anonymous login."
  },
  "api/FubarDev.FtpServer.ServerCommands.IServerCommandExecutor.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.IServerCommandExecutor.html",
    "title": "Interface IServerCommandExecutor | FTP Server documentation",
    "keywords": "Interface IServerCommandExecutor A server command executor. Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public interface IServerCommandExecutor Methods | Improve this Doc View Source ExecuteAsync(IServerCommand, CancellationToken) Execute the given server command. Declaration Task ExecuteAsync(IServerCommand serverCommand, CancellationToken cancellationToken) Parameters Type Name Description IServerCommand serverCommand The server command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.IPasvAddressResolver.html": {
    "href": "api/FubarDev.FtpServer.IPasvAddressResolver.html",
    "title": "Interface IPasvAddressResolver | FTP Server documentation",
    "keywords": "Interface IPasvAddressResolver Interface to get the options for the PASV / EPSV commands. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IPasvAddressResolver Methods | Improve this Doc View Source GetOptionsAsync(IFtpConnection, Nullable<AddressFamily>, CancellationToken) Get the PASV / EPSV options. Declaration Task<PasvListenerOptions> GetOptionsAsync(IFtpConnection connection, AddressFamily? addressFamily, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection The FTP connection. Nullable < AddressFamily > addressFamily The address family for the address to be selected. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < PasvListenerOptions > The task returning the options."
  },
  "api/FubarDev.FtpServer.InMemoryFtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.InMemoryFtpServerBuilderExtensions.html",
    "title": "Class InMemoryFtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class InMemoryFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object InMemoryFtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public static class InMemoryFtpServerBuilderExtensions Methods | Improve this Doc View Source UseInMemoryFileSystem(IFtpServerBuilder) Uses the in-memory file system API. Declaration public static IFtpServerBuilder UseInMemoryFileSystem(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.FtpTransferMode.html": {
    "href": "api/FubarDev.FtpServer.FtpTransferMode.html",
    "title": "Class FtpTransferMode | FTP Server documentation",
    "keywords": "Class FtpTransferMode FTP transfer mode (RFC 959, 3.4.). Inheritance Object FtpTransferMode Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class FtpTransferMode Constructors | Improve this Doc View Source FtpTransferMode(FtpFileType) Initializes a new instance of the FtpTransferMode class. Declaration public FtpTransferMode(FtpFileType fileType) Parameters Type Name Description FtpFileType fileType The file data type of this transfer mode. Properties | Improve this Doc View Source Bits Gets the bits of a binary transfer mode. Declaration public int? Bits { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source FileType Gets the file data type. Declaration public FtpFileType FileType { get; } Property Value Type Description FtpFileType | Improve this Doc View Source InterpreterMode Gets the interpreter mode. Declaration public FtpFileTypeInterpreterMode? InterpreterMode { get; } Property Value Type Description Nullable < FtpFileTypeInterpreterMode > | Improve this Doc View Source IsBinary Gets a value indicating whether the transfer mode is binary. Declaration public bool IsBinary { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Parse(String) Parses a transfer mode. Declaration public static FtpTransferMode Parse(string type) Parameters Type Name Description String type The transfer mode to parse. Returns Type Description FtpTransferMode The new FtpTransferMode . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/FubarDev.FtpServer.FtpConnectionAccessor.html": {
    "href": "api/FubarDev.FtpServer.FtpConnectionAccessor.html",
    "title": "Class FtpConnectionAccessor | FTP Server documentation",
    "keywords": "Class FtpConnectionAccessor Accessor for the active FTP connection. Inheritance Object FtpConnectionAccessor Implements IFtpConnectionAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class FtpConnectionAccessor : IFtpConnectionAccessor Properties | Improve this Doc View Source FtpConnection Gets or sets the current FTP connection. Declaration public IFtpConnection FtpConnection { get; set; } Property Value Type Description IFtpConnection Implements IFtpConnectionAccessor"
  },
  "api/FubarDev.FtpServer.FtpConnection.html": {
    "href": "api/FubarDev.FtpServer.FtpConnection.html",
    "title": "Class FtpConnection | FTP Server documentation",
    "keywords": "Class FtpConnection This class represents a FTP connection. Inheritance Object FtpConnectionContext FtpConnection Implements IFtpConnection IConnectionFeature IDisposable IObservable < IFtpConnectionEvent > IFtpConnectionEventHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public sealed class FtpConnection : FtpConnectionContext, IFtpConnection, IConnectionFeature, IDisposable, IObservable<IFtpConnectionEvent>, IFtpConnectionEventHost Constructors | Improve this Doc View Source FtpConnection(TcpSocketClientAccessor, IOptions<FtpConnectionOptions>, IOptions<PortCommandOptions>, IFtpConnectionAccessor, IFtpCatalogLoader, IServerCommandExecutor, IServiceProvider, SecureDataConnectionWrapper, ISslStreamWrapperFactory, Nullable<ILogger<FtpConnection>>, Nullable<ILoggerFactory>) Initializes a new instance of the FtpConnection class. Declaration public FtpConnection(TcpSocketClientAccessor socketAccessor, IOptions<FtpConnectionOptions> options, IOptions<PortCommandOptions> portOptions, IFtpConnectionAccessor connectionAccessor, IFtpCatalogLoader catalogLoader, IServerCommandExecutor serverCommandExecutor, IServiceProvider serviceProvider, SecureDataConnectionWrapper secureDataConnectionWrapper, ISslStreamWrapperFactory sslStreamWrapperFactory, ILogger<FtpConnection>? logger = default(ILogger<FtpConnection>? ), ILoggerFactory? loggerFactory = default(ILoggerFactory? )) Parameters Type Name Description TcpSocketClientAccessor socketAccessor The accessor to get the socket used to communicate with the client. IOptions < FtpConnectionOptions > options The options for the FTP connection. IOptions < PortCommandOptions > portOptions The PORT command options. IFtpConnectionAccessor connectionAccessor The accessor to get the connection that is active during the Process(FtpCommand, CancellationToken) method execution. IFtpCatalogLoader catalogLoader The catalog loader for the FTP server. IServerCommandExecutor serverCommandExecutor The executor for server commands. IServiceProvider serviceProvider The service provider for the connection. SecureDataConnectionWrapper secureDataConnectionWrapper Wraps a data connection into an SSL stream. ISslStreamWrapperFactory sslStreamWrapperFactory The SSL stream wrapper factory. Nullable < ILogger < FtpConnection >> logger The logger for the FTP connection. Nullable < ILoggerFactory > loggerFactory The logger factory. Properties | Improve this Doc View Source ConnectionId Gets or sets the connection identifier. Declaration public override string ConnectionId { get; set; } Property Value Type Description String Overrides FtpConnectionContext.ConnectionId | Improve this Doc View Source ConnectionServices Gets the connection services. Declaration public IServiceProvider ConnectionServices { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source Data Gets the FTP connection data. Declaration [Obsolete(\"Query the information using the Features property instead.\")] public FtpConnectionData Data { get; } Property Value Type Description FtpConnectionData | Improve this Doc View Source Encoding Gets or sets the encoding for the LIST/NLST commands. Declaration [Obsolete(\"Query the information using the IEncodingFeature instead.\")] public Encoding Encoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source Features Gets the feature collection. Declaration public override IFeatureCollection Features { get; } Property Value Type Description IFeatureCollection Overrides FtpConnectionContext.Features | Improve this Doc View Source IsSecure Gets a value indicating whether this is a secure connection. Declaration [Obsolete(\"Not needed anymore.\")] public bool IsSecure { get; } Property Value Type Description Boolean | Improve this Doc View Source LocalEndPoint Gets the local end point. Declaration [Obsolete(\"Query the information using the IConnectionFeature instead.\")] public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint | Improve this Doc View Source Log Gets the FTP connection logger. Declaration [Obsolete(\"Use your own logger instead of the one from the connection.\")] public ILogger? Log { get; } Property Value Type Description Nullable < ILogger > | Improve this Doc View Source OriginalStream Gets the control connection stream. Declaration [Obsolete(\"Query the information using the ISecureConnectionFeature instead.\")] public Stream OriginalStream { get; } Property Value Type Description Stream | Improve this Doc View Source RemoteAddress Gets the remote address of the client. Declaration [Obsolete(\"Query the information using the IConnectionFeature instead - and use the RemoteEndPoint property.\")] public Address RemoteAddress { get; } Property Value Type Description Address | Improve this Doc View Source RemoteEndPoint Gets the remote end point. Declaration [Obsolete(\"Query the information using the IConnectionFeature instead.\")] public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint | Improve this Doc View Source SocketStream Gets or sets the control connection stream. Declaration [Obsolete(\"Not needed anymore.\")] public Stream SocketStream { get; set; } Property Value Type Description Stream Methods | Improve this Doc View Source CreateEncryptedStream(Stream) Create an encrypted stream. Declaration [Obsolete(\"The data connection returned by OpenDataConnection is already encrypted.\")] public Task<Stream> CreateEncryptedStream(Stream unencryptedStream) Parameters Type Name Description Stream unencryptedStream The stream to encrypt. Returns Type Description Task < Stream > The encrypted stream. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OpenDataConnectionAsync(Nullable<TimeSpan>, CancellationToken) Creates a response socket for e.g. LIST/NLST. Declaration public Task<IFtpDataConnection> OpenDataConnectionAsync(TimeSpan? timeout, CancellationToken cancellationToken) Parameters Type Name Description Nullable < TimeSpan > timeout The timeout for establishing a data connection. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpDataConnection > The data connection. | Improve this Doc View Source PublishEvent(IFtpConnectionEvent) Publish the event. Declaration public void PublishEvent(IFtpConnectionEvent evt) Parameters Type Name Description IFtpConnectionEvent evt The event to publish. | Improve this Doc View Source StartAsync() Starts processing of messages for this connection. Declaration public Task StartAsync() Returns Type Description Task The task. | Improve this Doc View Source StopAsync() Closes the connection. Declaration public Task StopAsync() Returns Type Description Task The task. | Improve this Doc View Source Subscribe(IObserver<IFtpConnectionEvent>) Declaration public IDisposable Subscribe(IObserver<IFtpConnectionEvent> observer) Parameters Type Name Description IObserver < IFtpConnectionEvent > observer Returns Type Description IDisposable | Improve this Doc View Source WriteAsync(IFtpResponse, CancellationToken) Writes a FTP response to a client. Declaration [Obsolete(\"Use the IConnectionFeature.ServerCommandWriter instead.\")] public Task WriteAsync(IFtpResponse response, CancellationToken cancellationToken) Parameters Type Name Description IFtpResponse response The response to write to the client. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source WriteAsync(String, CancellationToken) Writes response to a client. Declaration [Obsolete(\"Use the IConnectionFeature.ServerCommandWriter instead.\")] public Task WriteAsync(string response, CancellationToken cancellationToken) Parameters Type Name Description String response The response to write to the client. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. Events | Improve this Doc View Source Closed Gets or sets the event handler that is triggered when the connection is closed. Declaration public event EventHandler? Closed Event Type Type Description Nullable < EventHandler > Implements IFtpConnection IConnectionFeature System.IDisposable System.IObservable<T> IFtpConnectionEventHost"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemOptions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemOptions.html",
    "title": "Class InMemoryFileSystemOptions | FTP Server documentation",
    "keywords": "Class InMemoryFileSystemOptions In-memory file system options. Inheritance Object InMemoryFileSystemOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public class InMemoryFileSystemOptions Properties | Improve this Doc View Source AnonymousComparer Gets or sets the comparer for anonymous user e-mails. Declaration public StringComparer AnonymousComparer { get; set; } Property Value Type Description StringComparer | Improve this Doc View Source FileSystemComparer Gets or sets the comparer for file system names. Declaration public StringComparer FileSystemComparer { get; set; } Property Value Type Description StringComparer | Improve this Doc View Source KeepAnonymousFileSystem Gets or sets a value indicating whether the file system for an anonymous user should be kept. Declaration public bool KeepAnonymousFileSystem { get; set; } Property Value Type Description Boolean | Improve this Doc View Source KeepAuthenticatedUserFileSystem Gets or sets a value indicating whether the file system for an authenticated user should be kept. Declaration public bool KeepAuthenticatedUserFileSystem { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UserNameComparer Gets or sets the comparer for authenticated user names. Declaration public StringComparer UserNameComparer { get; set; } Property Value Type Description StringComparer"
  },
  "api/FubarDev.FtpServer.Features.html": {
    "href": "api/FubarDev.FtpServer.Features.html",
    "title": "Namespace FubarDev.FtpServer.Features | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Features Interfaces IAuthorizationInformationFeature Authorization information feature. IBackgroundTaskLifetimeFeature Feature for background tasks (abortable commands). IConnectionFeature Information about the current connection. IEncodingFeature Encoding of commands, paths and/or names. IFileSystemFeature File system feature. IFtpDataConnectionConfigurationFeature Feature that provides information about the data connections. IFtpDataConnectionFeature Feature for an FTP data connection. ILocalizationFeature Localization feature. IMlstFactsFeature Active facts sent by MLST and MLSD . IRenameCommandFeature Feature for the RNFR and RNTO commands. IRestCommandFeature Feature for the REST command. ISecureConnectionFeature Information about low-level connection information. IServerCommandFeature The server command feature. ITransferConfigurationFeature Feature for transfer commands."
  },
  "api/FubarDev.FtpServer.DataConnection.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.html",
    "title": "Namespace FubarDev.FtpServer.DataConnection | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.DataConnection Classes ActiveDataConnectionFeatureFactory Creates an active FTP data connection. PassiveDataConnectionFeatureFactory Creates a passive FTP data connection. PromiscuousPasvDataConnectionValidator Validates that we don't have a promiscuous passive data connection. SecureDataConnectionWrapper Wrapper that wraps a data connection into a secure data connection if needed. Interfaces IFtpDataConnectionValidator Interface for FTP data connection validation."
  },
  "api/FubarDev.FtpServer.DataConnection.SecureDataConnectionWrapper.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.SecureDataConnectionWrapper.html",
    "title": "Class SecureDataConnectionWrapper | FTP Server documentation",
    "keywords": "Class SecureDataConnectionWrapper Wrapper that wraps a data connection into a secure data connection if needed. Inheritance Object SecureDataConnectionWrapper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.DataConnection Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SecureDataConnectionWrapper Constructors | Improve this Doc View Source SecureDataConnectionWrapper(IFtpConnectionAccessor, ISslStreamWrapperFactory) Initializes a new instance of the SecureDataConnectionWrapper class. Declaration public SecureDataConnectionWrapper(IFtpConnectionAccessor connectionAccessor, ISslStreamWrapperFactory sslStreamWrapperFactory) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor Accessor for the FTP connection. ISslStreamWrapperFactory sslStreamWrapperFactory The SSL stream wrapper factory. Methods | Improve this Doc View Source WrapAsync(IFtpDataConnection) Wraps the data connection into a secure data connection if needed. Declaration public Task<IFtpDataConnection> WrapAsync(IFtpDataConnection dataConnection) Parameters Type Name Description IFtpDataConnection dataConnection The data connection that should - if needed - be wrapped into a secure data connection. Returns Type Description Task < IFtpDataConnection > The task returning the same or a secure data connection."
  },
  "api/FubarDev.FtpServer.ConnectionChecks.IFtpConnectionCheck.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.IFtpConnectionCheck.html",
    "title": "Interface IFtpConnectionCheck | FTP Server documentation",
    "keywords": "Interface IFtpConnectionCheck Check if the connection is usable/connected/not idle. Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnectionCheck Methods | Improve this Doc View Source Check(FtpConnectionCheckContext) Check if the connection is usable. Declaration FtpConnectionCheckResult Check(FtpConnectionCheckContext context) Parameters Type Name Description FtpConnectionCheckContext context The FTP connection check context. Returns Type Description FtpConnectionCheckResult FtpConnectionCheckResult that contains the result of the check."
  },
  "api/FubarDev.FtpServer.SingleFtpHostSelector.html": {
    "href": "api/FubarDev.FtpServer.SingleFtpHostSelector.html",
    "title": "Class SingleFtpHostSelector | FTP Server documentation",
    "keywords": "Class SingleFtpHostSelector A simple implementation of the IFtpHostSelector interface. Inheritance Object SingleFtpHostSelector Implements IFtpHostSelector Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class SingleFtpHostSelector : IFtpHostSelector Constructors | Improve this Doc View Source SingleFtpHostSelector(IFtpConnection, IEnumerable<IAuthenticationMechanism>, IEnumerable<IAuthorizationMechanism>, IOptions<AuthTlsOptions>) Initializes a new instance of the SingleFtpHostSelector class. Declaration public SingleFtpHostSelector(IFtpConnection connection, IEnumerable<IAuthenticationMechanism> authenticationMechanisms, IEnumerable<IAuthorizationMechanism> authorizationMechanisms, IOptions<AuthTlsOptions> authTlsOptions) Parameters Type Name Description IFtpConnection connection The FTP connection. IEnumerable < IAuthenticationMechanism > authenticationMechanisms The registered authentication mechanisms. IEnumerable < IAuthorizationMechanism > authorizationMechanisms The registered authorization mechanisms. IOptions < AuthTlsOptions > authTlsOptions The options for the AUTH TLS command. Properties | Improve this Doc View Source SelectedHost Gets the selected FTP host. Declaration public IFtpHost SelectedHost { get; } Property Value Type Description IFtpHost Methods | Improve this Doc View Source SelectHostAsync(HostInfo, CancellationToken) Selects the new FTP host. Declaration public Task<IFtpResponse> SelectHostAsync(HostInfo hostInfo, CancellationToken cancellationToken) Parameters Type Name Description HostInfo hostInfo The host to select. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The FTP response for the HOST command. Implements IFtpHostSelector"
  },
  "api/FubarDev.FtpServer.SimplePasvOptions.html": {
    "href": "api/FubarDev.FtpServer.SimplePasvOptions.html",
    "title": "Class SimplePasvOptions | FTP Server documentation",
    "keywords": "Class SimplePasvOptions Options for the SimplePasvAddressResolver . Inheritance Object SimplePasvOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class SimplePasvOptions Properties | Improve this Doc View Source PasvMaxPort Gets or sets maximum port number to use for passive ftp. Declaration public int? PasvMaxPort { get; set; } Property Value Type Description Nullable < Int32 > Remarks If set, needs to be larger than PasvMinPort. | Improve this Doc View Source PasvMinPort Gets or sets minimum port number to use for passive ftp. Declaration public int? PasvMinPort { get; set; } Property Value Type Description Nullable < Int32 > Remarks Only active if PasvMaxPort is set, too). If set, needs to be larger than 1023. | Improve this Doc View Source PublicAddress Gets or sets the address published to clients for PASV connections. Declaration public IPAddress? PublicAddress { get; set; } Property Value Type Description Nullable < IPAddress > Remarks This may be necessary if you are behind a forwarding firewall, for example."
  },
  "api/FubarDev.FtpServer.PortCommandOptions.html": {
    "href": "api/FubarDev.FtpServer.PortCommandOptions.html",
    "title": "Class PortCommandOptions | FTP Server documentation",
    "keywords": "Class PortCommandOptions Options for the PORT command. Inheritance Object PortCommandOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Commands.dll Syntax public class PortCommandOptions Properties | Improve this Doc View Source DataPort Gets or sets the data port. Declaration public int? DataPort { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "api/FubarDev.FtpServer.PermissionsExtensions.html": {
    "href": "api/FubarDev.FtpServer.PermissionsExtensions.html",
    "title": "Class PermissionsExtensions | FTP Server documentation",
    "keywords": "Class PermissionsExtensions Extension methods for IUnixPermissions . Inheritance Object PermissionsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class PermissionsExtensions Methods | Improve this Doc View Source GetAccessModeFor(IUnixPermissions, IUnixOwner, IFtpUser) Gets the effective access mode for an entity for the given user . Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public static IAccessMode GetAccessModeFor(this IUnixPermissions permissions, IUnixOwner entity, IFtpUser user) Parameters Type Name Description IUnixPermissions permissions The permissions used to build the access mode. IUnixOwner entity The entity owner information. IFtpUser user The FTP user to determine the access mode for. Returns Type Description IAccessMode The effective access mode for the user . | Improve this Doc View Source GetAccessModeFor(IUnixPermissions, IUnixOwner, ClaimsPrincipal) Gets the effective access mode for an entity for the given user . Declaration public static IAccessMode GetAccessModeFor(this IUnixPermissions permissions, IUnixOwner entity, ClaimsPrincipal user) Parameters Type Name Description IUnixPermissions permissions The permissions used to build the access mode. IUnixOwner entity The entity owner information. ClaimsPrincipal user The FTP user to determine the access mode for. Returns Type Description IAccessMode The effective access mode for the user ."
  },
  "api/FubarDev.FtpServer.IFtpService.html": {
    "href": "api/FubarDev.FtpServer.IFtpService.html",
    "title": "Interface IFtpService | FTP Server documentation",
    "keywords": "Interface IFtpService Defines methods for services required to run the FTP server. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpService Methods | Improve this Doc View Source StartAsync(CancellationToken) Triggered when the application host is ready to start the service. Declaration Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the start process has been aborted. Returns Type Description Task The task. | Improve this Doc View Source StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. Declaration Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the shutdown process should no longer be graceful. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.IFtpServerStatistics.html": {
    "href": "api/FubarDev.FtpServer.IFtpServerStatistics.html",
    "title": "Interface IFtpServerStatistics | FTP Server documentation",
    "keywords": "Interface IFtpServerStatistics Statistics about the FTP server. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpServerStatistics Properties | Improve this Doc View Source ActiveConnections Gets the currently active number of connections. Declaration long ActiveConnections { get; } Property Value Type Description Int64 | Improve this Doc View Source TotalConnections Gets the total number of connections. Declaration long TotalConnections { get; } Property Value Type Description Int64"
  },
  "api/FubarDev.FtpServer.FtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.FtpServerBuilderExtensions.html",
    "title": "Class FtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class FtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object FtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class FtpServerBuilderExtensions Methods | Improve this Doc View Source EnableAnonymousAuthentication(IFtpServerBuilder) Enables anonymous authentication. Declaration public static IFtpServerBuilder EnableAnonymousAuthentication(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server. | Improve this Doc View Source UseRootPerUser(IFtpServerBuilder, Nullable<Action<RootPerUserAccountDirectoryQueryOptions>>) Uses the user name as root directory (NOT ITS HOME DIRECTORY!). Declaration public static IFtpServerBuilder UseRootPerUser(this IFtpServerBuilder builder, Action<RootPerUserAccountDirectoryQueryOptions>? configure = default(Action<RootPerUserAccountDirectoryQueryOptions>? )) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Nullable < Action < RootPerUserAccountDirectoryQueryOptions >> configure Optional service configuration. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server. Remarks This might not be useful in a production system. | Improve this Doc View Source UseSingleRoot(IFtpServerBuilder, Nullable<Action<SingleRootWithoutHomeAccountDirectoryQueryOptions>>) Uses a single root for all users. Declaration public static IFtpServerBuilder UseSingleRoot(this IFtpServerBuilder builder, Action<SingleRootWithoutHomeAccountDirectoryQueryOptions>? configure = default(Action<SingleRootWithoutHomeAccountDirectoryQueryOptions>? )) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Nullable < Action < SingleRootWithoutHomeAccountDirectoryQueryOptions >> configure Optional service configuration. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.FtpServer.html": {
    "href": "api/FubarDev.FtpServer.FtpServer.html",
    "title": "Class FtpServer | FTP Server documentation",
    "keywords": "Class FtpServer The portable FTP server. Inheritance Object FtpServer Implements IFtpServer IPausableFtpService IFtpService IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public sealed class FtpServer : IFtpServer, IPausableFtpService, IFtpService, IDisposable Constructors | Improve this Doc View Source FtpServer(IOptions<FtpServerOptions>, IServiceProvider, IEnumerable<IFtpControlStreamAdapter>, Nullable<ILogger<FtpServer>>) Initializes a new instance of the FtpServer class. Declaration public FtpServer(IOptions<FtpServerOptions> serverOptions, IServiceProvider serviceProvider, IEnumerable<IFtpControlStreamAdapter> controlStreamAdapters, ILogger<FtpServer>? logger = default(ILogger<FtpServer>? )) Parameters Type Name Description IOptions < FtpServerOptions > serverOptions The server options. IServiceProvider serviceProvider The service provider used to query services. IEnumerable < IFtpControlStreamAdapter > controlStreamAdapters Adapters for the control connection stream. Nullable < ILogger < FtpServer >> logger The FTP server logger. Properties | Improve this Doc View Source MaxActiveConnections Gets the max allows active connections. Declaration public int MaxActiveConnections { get; } Property Value Type Description Int32 Remarks This will cause connections to be refused if count is exceeded. 0 (default) means no control over connection count. | Improve this Doc View Source Port Gets the port on which the FTP server is listening for incoming connections. Declaration public int Port { get; } Property Value Type Description Int32 Remarks This value is only final after the ListenerStarted event was raised. | Improve this Doc View Source Ready Gets a value indicating whether server ready to receive incoming connections. Declaration public bool Ready { get; } Property Value Type Description Boolean | Improve this Doc View Source ServerAddress Gets the public IP address (required for PASV and EPSV ). Declaration public string? ServerAddress { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source Statistics Gets the FTP server statistics. Declaration public IFtpServerStatistics Statistics { get; } Property Value Type Description IFtpServerStatistics | Improve this Doc View Source Status Gets the current status. Declaration public FtpServiceStatus Status { get; } Property Value Type Description FtpServiceStatus Methods | Improve this Doc View Source ContinueAsync(CancellationToken) Continues the FTP service. Declaration public Task ContinueAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetConnections() Returns all connections. Declaration public IEnumerable<IFtpConnection> GetConnections() Returns Type Description IEnumerable < IFtpConnection > The currently active connections. Remarks The connection might be closed between calling this function and using/querying the connection by the client. | Improve this Doc View Source PauseAsync(CancellationToken) Pauses the FTP service. Declaration public Task PauseAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source StartAsync(CancellationToken) Triggered when the application host is ready to start the service. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the start process has been aborted. Returns Type Description Task The task. | Improve this Doc View Source StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the shutdown process should no longer be graceful. Returns Type Description Task The task. Events | Improve this Doc View Source ConfigureConnection Declaration public event EventHandler<ConnectionEventArgs>? ConfigureConnection Event Type Type Description Nullable < EventHandler < ConnectionEventArgs >> | Improve this Doc View Source ListenerStarted Declaration public event EventHandler<ListenerStartedEventArgs>? ListenerStarted Event Type Type Description Nullable < EventHandler < ListenerStartedEventArgs >> Explicit Interface Implementations | Improve this Doc View Source IFtpServer.Start() Starts the FTP server in the background. Declaration [Obsolete(\"Use IFtpServerHost.StartAsync instead.\")] void IFtpServer.Start() | Improve this Doc View Source IFtpServer.Stop() Stops the FTP server. Declaration [Obsolete(\"Use IFtpServerHost.StopAsync instead.\")] void IFtpServer.Stop() Remarks The FTP server cannot be started again after it was stopped. Implements IFtpServer IPausableFtpService IFtpService System.IDisposable"
  },
  "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions.html",
    "title": "Class UnixFileSystemOptions | FTP Server documentation",
    "keywords": "Class UnixFileSystemOptions Options for the Unix file system. Inheritance Object UnixFileSystemOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.Unix Assembly : FubarDev.FtpServer.FileSystem.Unix.dll Syntax public class UnixFileSystemOptions Properties | Improve this Doc View Source Root Gets or sets the default root path. Declaration public string? Root { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/FubarDev.FtpServer.FileSystem.IAccessMode.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IAccessMode.html",
    "title": "Interface IAccessMode | FTP Server documentation",
    "keywords": "Interface IAccessMode A unix style access mode interface. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAccessMode Properties | Improve this Doc View Source Execute Gets a value indicating whether an execute is allowed. Declaration bool Execute { get; } Property Value Type Description Boolean | Improve this Doc View Source Read Gets a value indicating whether a read is allowed. Declaration bool Read { get; } Property Value Type Description Boolean | Improve this Doc View Source Write Gets a value indicating whether a write is allowed. Declaration bool Write { get; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.GoogleDrive | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.GoogleDrive Classes GoogleDriveFileSystem The IUnixFileSystem implementation that uses Google Drive. GoogleDriveFileSystemProvider A file system provider for Google Drive. GoogleDriveOptions Options for the Google Drive-based file system. GoogleDriveServiceProvider The default implementation of the IGoogleDriveServiceProvider interface. Interfaces IGoogleDriveServiceProvider An interface to get the Google Drive service for the given user."
  },
  "api/FubarDev.FtpServer.Features.IFileSystemFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IFileSystemFeature.html",
    "title": "Interface IFileSystemFeature | FTP Server documentation",
    "keywords": "Interface IFileSystemFeature File system feature. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFileSystemFeature Properties | Improve this Doc View Source CurrentDirectory Gets the current IUnixDirectoryEntry of the current Path . Declaration IUnixDirectoryEntry CurrentDirectory { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source FileSystem Gets or sets the IUnixFileSystem to use for the user. Declaration IUnixFileSystem FileSystem { get; set; } Property Value Type Description IUnixFileSystem | Improve this Doc View Source Path Gets or sets the current path into the FileSystem . Declaration Stack<IUnixDirectoryEntry> Path { get; set; } Property Value Type Description Stack < IUnixDirectoryEntry >"
  },
  "api/FubarDev.FtpServer.Features.IEncodingFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IEncodingFeature.html",
    "title": "Interface IEncodingFeature | FTP Server documentation",
    "keywords": "Interface IEncodingFeature Encoding of commands, paths and/or names. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IEncodingFeature Properties | Improve this Doc View Source DefaultEncoding Gets the default encoding. Declaration Encoding DefaultEncoding { get; } Property Value Type Description Encoding | Improve this Doc View Source Encoding Gets or sets the encoding for commands and paths. Declaration Encoding Encoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source NlstEncoding Gets or sets the Encoding for the NLST command. Declaration Encoding NlstEncoding { get; set; } Property Value Type Description Encoding Methods | Improve this Doc View Source Reset() Reset all encodings to the default encoding. Declaration void Reset()"
  },
  "api/FubarDev.FtpServer.FileSystem.EmptyUnixFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.EmptyUnixFileSystem.html",
    "title": "Class EmptyUnixFileSystem | FTP Server documentation",
    "keywords": "Class EmptyUnixFileSystem An empty file system to be used when the user isn't logged in yet. Inheritance Object EmptyUnixFileSystem Implements IUnixFileSystem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class EmptyUnixFileSystem : IUnixFileSystem Constructors | Improve this Doc View Source EmptyUnixFileSystem() Initializes a new instance of the EmptyUnixFileSystem class. Declaration public EmptyUnixFileSystem() Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < DateTimeOffset > modify Nullable < DateTimeOffset > access Nullable < DateTimeOffset > create CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem Extension Methods FileSystemExtensions.GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) PathSelector.SelectAsync(IUnixFileSystem, Nullable<String>, CancellationToken) PathSelector.SelectAsync(IUnixFileSystem, IEnumerable<IUnixDirectoryEntry>, Nullable<String>, CancellationToken)"
  },
  "api/FubarDev.FtpServer.CommandHandlers.RetrCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.RetrCommandHandler.html",
    "title": "Class RetrCommandHandler | FTP Server documentation",
    "keywords": "Class RetrCommandHandler Implements the RETR command. Inheritance Object FtpCommandHandler RetrCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"RETR\", true, true)] public class RetrCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source RetrCommandHandler(Nullable<ILogger<RetrCommandHandler>>) Initializes a new instance of the RetrCommandHandler class. Declaration public RetrCommandHandler(ILogger<RetrCommandHandler>? logger = default(ILogger<RetrCommandHandler>? )) Parameters Type Name Description Nullable < ILogger < RetrCommandHandler >> logger The logger. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.IFtpServer.html": {
    "href": "api/FubarDev.FtpServer.IFtpServer.html",
    "title": "Interface IFtpServer | FTP Server documentation",
    "keywords": "Interface IFtpServer The interface that must be implemented by the FTP server. Inherited Members IPausableFtpService.Status IPausableFtpService.PauseAsync(CancellationToken) IPausableFtpService.ContinueAsync(CancellationToken) IFtpService.StartAsync(CancellationToken) IFtpService.StopAsync(CancellationToken) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpServer : IPausableFtpService, IFtpService Properties | Improve this Doc View Source MaxActiveConnections Gets the max allows active connections. Declaration int MaxActiveConnections { get; } Property Value Type Description Int32 Remarks This will cause connections to be refused if count is exceeded. 0 (default) means no control over connection count. | Improve this Doc View Source Port Gets the port on which the FTP server is listening for incoming connections. Declaration int Port { get; } Property Value Type Description Int32 Remarks This value is only final after the ListenerStarted event was raised. | Improve this Doc View Source Ready Gets a value indicating whether server ready to receive incoming connections. Declaration bool Ready { get; } Property Value Type Description Boolean | Improve this Doc View Source ServerAddress Gets the public IP address (required for PASV and EPSV ). Declaration string? ServerAddress { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source Statistics Gets the FTP server statistics. Declaration IFtpServerStatistics Statistics { get; } Property Value Type Description IFtpServerStatistics Methods | Improve this Doc View Source Start() Starts the FTP server in the background. Declaration [Obsolete(\"User IFtpServerHost.StartAsync instead.\")] void Start() | Improve this Doc View Source Stop() Stops the FTP server. Declaration [Obsolete(\"User IFtpServerHost.StopAsync instead.\")] void Stop() Remarks The FTP server cannot be started again after it was stopped. Events | Improve this Doc View Source ConfigureConnection This event is raised when the connection is ready to be configured. Declaration event EventHandler<ConnectionEventArgs> ConfigureConnection Event Type Type Description EventHandler < ConnectionEventArgs > | Improve this Doc View Source ListenerStarted This event is raised when the listener was started. Declaration event EventHandler<ListenerStartedEventArgs> ListenerStarted Event Type Type Description EventHandler < ListenerStartedEventArgs >"
  },
  "api/FubarDev.FtpServer.Authentication.AuthenticationMechanism.html": {
    "href": "api/FubarDev.FtpServer.Authentication.AuthenticationMechanism.html",
    "title": "Class AuthenticationMechanism | FTP Server documentation",
    "keywords": "Class AuthenticationMechanism The base class for an authentication mechanism. Inheritance Object AuthenticationMechanism TlsAuthenticationMechanism Implements IAuthenticationMechanism Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authentication Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class AuthenticationMechanism : IAuthenticationMechanism Constructors | Improve this Doc View Source AuthenticationMechanism(IFtpConnection) Initializes a new instance of the AuthenticationMechanism class. Declaration protected AuthenticationMechanism(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The required FTP connection. Properties | Improve this Doc View Source Connection Gets the FTP connection. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection Methods | Improve this Doc View Source CanHandle(String) Declaration public abstract bool CanHandle(string methodIdentifier) Parameters Type Name Description String methodIdentifier Returns Type Description Boolean | Improve this Doc View Source HandleAdatAsync(Byte[], CancellationToken) Declaration public abstract Task<IFtpResponse> HandleAdatAsync(byte[] data, CancellationToken cancellationToken) Parameters Type Name Description Byte [] data CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source HandleAuthAsync(String, CancellationToken) Declaration public abstract Task<IFtpResponse> HandleAuthAsync(string methodIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String methodIdentifier CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source HandlePbszAsync(Int64, CancellationToken) Declaration public abstract Task<IFtpResponse> HandlePbszAsync(long size, CancellationToken cancellationToken) Parameters Type Name Description Int64 size CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source HandleProtAsync(String, CancellationToken) Declaration public abstract Task<IFtpResponse> HandleProtAsync(string protCode, CancellationToken cancellationToken) Parameters Type Name Description String protCode CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source Reset() Declaration public abstract void Reset() | Improve this Doc View Source T(String) Translates a message using the current catalog of the active connection. Declaration protected string T(string message) Parameters Type Name Description String message The message to translate. Returns Type Description String The translated message. | Improve this Doc View Source T(String, Object[]) Translates a message using the current catalog of the active connection. Declaration [StringFormatMethod(\"message\")] protected string T(string message, params object[] args) Parameters Type Name Description String message The message to translate. Object [] args The format arguments. Returns Type Description String The translated message. Implements IAuthenticationMechanism"
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.NoValidation.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.NoValidation.html",
    "title": "Class NoValidation | FTP Server documentation",
    "keywords": "Class NoValidation Performs no validation. Every kind of password is allowed. Inheritance Object NoValidation Implements IAnonymousPasswordValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Anonymous Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class NoValidation : IAnonymousPasswordValidator Methods | Improve this Doc View Source IsValid(String) Declaration public bool IsValid(string password) Parameters Type Name Description String password Returns Type Description Boolean Implements IAnonymousPasswordValidator"
  },
  "api/FubarDev.FtpServer.IFtpStateMachine-1.html": {
    "href": "api/FubarDev.FtpServer.IFtpStateMachine-1.html",
    "title": "Interface IFtpStateMachine<TStatus> | FTP Server documentation",
    "keywords": "Interface IFtpStateMachine<TStatus> Interface for a state machine for the FTP server. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpStateMachine<out TStatus> where TStatus : Enum Type Parameters Name Description TStatus The type of the status of the state machine. Properties | Improve this Doc View Source Status Gets the current status. Declaration TStatus Status { get; } Property Value Type Description TStatus Methods | Improve this Doc View Source ExecuteAsync(FtpCommand, CancellationToken) Handles an FTP command. Declaration Task<IFtpResponse? > ExecuteAsync(FtpCommand ftpCommand, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FtpCommand ftpCommand The FTP command to handle. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IFtpResponse >> The task returning the response. | Improve this Doc View Source Reset() Resets the state machine. Declaration void Reset()"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AborCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AborCommandHandler.html",
    "title": "Class AborCommandHandler | FTP Server documentation",
    "keywords": "Class AborCommandHandler Implements the ABOR command. Inheritance Object FtpCommandHandler AborCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"ABOR\", false, true)] public class AborCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MkdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MkdCommandHandler.html",
    "title": "Class MkdCommandHandler | FTP Server documentation",
    "keywords": "Class MkdCommandHandler Implements the MKD command. Inheritance Object FtpCommandHandler MkdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MKD\", false, true)] public class MkdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.IFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.IFact.html",
    "title": "Interface IFact | FTP Server documentation",
    "keywords": "Interface IFact The basic interface for a fact ( MLST ). Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFact Properties | Improve this Doc View Source Name Gets the name of the fact. Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Gets the value of the fact. Declaration string Value { get; } Property Value Type Description String"
  },
  "api/FubarDev.FtpServer.FtpServerHost.html": {
    "href": "api/FubarDev.FtpServer.FtpServerHost.html",
    "title": "Class FtpServerHost | FTP Server documentation",
    "keywords": "Class FtpServerHost Simple IFtpServerHost implementation. Inheritance Object FtpServerHost Implements IFtpServerHost Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class FtpServerHost : IFtpServerHost Remarks This services is used to start and stop all IFtpService instances. Constructors | Improve this Doc View Source FtpServerHost(IEnumerable<IFtpService>) Initializes a new instance of the FtpServerHost class. Declaration public FtpServerHost(IEnumerable<IFtpService> ftpServices) Parameters Type Name Description IEnumerable < IFtpService > ftpServices The FTP services to start and stop. Methods | Improve this Doc View Source StartAsync(CancellationToken) Must be called to start the FTP server host. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the start process has been aborted. Returns Type Description Task The task. Remarks Starts all FTP server services. | Improve this Doc View Source StopAsync(CancellationToken) Must be called for a graceful shutdown of the FTP server host. Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the shutdown process should no longer be graceful. Returns Type Description Task The task. Remarks Stops all FTP server services. Implements IFtpServerHost"
  },
  "api/FubarDev.FtpServer.FileSystem.PathSelectionResult.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.PathSelectionResult.html",
    "title": "Class PathSelectionResult | FTP Server documentation",
    "keywords": "Class PathSelectionResult The result of a SelectAsync(IUnixFileSystem, Nullable<String>, CancellationToken) operation. Inheritance Object PathSelectionResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PathSelectionResult Properties | Improve this Doc View Source Directory Gets the directory of the search result. Declaration public IUnixDirectoryEntry Directory { get; } Property Value Type Description IUnixDirectoryEntry Remarks When ResultType is FoundDirectory , this is the found directory. When ResultType is FoundFile , this is the parent directory. Otherwise, this is the last found directory. | Improve this Doc View Source File Gets the found document. Declaration public IUnixFileEntry? File { get; } Property Value Type Description Nullable < IUnixFileEntry > Remarks This property is only valid when ResultType is FoundFile . | Improve this Doc View Source FullPath Gets the full root-relative path of the element that was searched. Declaration public string FullPath { get; } Property Value Type Description String | Improve this Doc View Source IsMissing Gets a value indicating whether there was a missing path part. Declaration public bool IsMissing { get; } Property Value Type Description Boolean | Improve this Doc View Source MissingNames Gets the directory of missing child elements. Declaration public IReadOnlyCollection<string> MissingNames { get; } Property Value Type Description IReadOnlyCollection < String > Remarks This is only valid, when IsMissing is true . | Improve this Doc View Source ResultType Gets the type of the result. Declaration public PathSelectionResultType ResultType { get; } Property Value Type Description PathSelectionResultType | Improve this Doc View Source TargetEntry Gets the found target entry. Declaration public IUnixFileSystemEntry TargetEntry { get; } Property Value Type Description IUnixFileSystemEntry Remarks This is only valid when IsMissing is false . Methods | Improve this Doc View Source Create(Stack<IUnixDirectoryEntry>) Creates a selection result for a found directory. Declaration public static PathSelectionResult Create(Stack<IUnixDirectoryEntry> foundPathSegments) Parameters Type Name Description Stack < IUnixDirectoryEntry > foundPathSegments The found path segments. Returns Type Description PathSelectionResult The created selection result. | Improve this Doc View Source Create(Stack<IUnixDirectoryEntry>, IUnixFileEntry) Creates a selection result for a found file. Declaration public static PathSelectionResult Create(Stack<IUnixDirectoryEntry> foundPathSegments, IUnixFileEntry document) Parameters Type Name Description Stack < IUnixDirectoryEntry > foundPathSegments The found path segments. IUnixFileEntry document The found file. Returns Type Description PathSelectionResult The created selection result. | Improve this Doc View Source CreateMissingDirectory(Stack<IUnixDirectoryEntry>, IReadOnlyCollection<String>) Creates a selection for a missing directory. Declaration public static PathSelectionResult CreateMissingDirectory(Stack<IUnixDirectoryEntry> foundPathSegments, IReadOnlyCollection<string> missingPathSegments) Parameters Type Name Description Stack < IUnixDirectoryEntry > foundPathSegments The found path segments. IReadOnlyCollection < String > missingPathSegments The missing path elements. Returns Type Description PathSelectionResult The created selection result. | Improve this Doc View Source CreateMissingFileOrDirectory(Stack<IUnixDirectoryEntry>, IReadOnlyCollection<String>) Creates a selection for a missing file or directory. Declaration public static PathSelectionResult CreateMissingFileOrDirectory(Stack<IUnixDirectoryEntry> foundPathSegments, IReadOnlyCollection<string> missingPathSegments) Parameters Type Name Description Stack < IUnixDirectoryEntry > foundPathSegments The found path segments. IReadOnlyCollection < String > missingPathSegments The missing path elements. Returns Type Description PathSelectionResult The created selection result. | Improve this Doc View Source GetPath() Get the full path as directory entries. Declaration public Stack<IUnixDirectoryEntry> GetPath() Returns Type Description Stack < IUnixDirectoryEntry > The full path as directory entries."
  },
  "api/FubarDev.FtpServer.FileSystem.PathNormalizer.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.PathNormalizer.html",
    "title": "Class PathNormalizer | FTP Server documentation",
    "keywords": "Class PathNormalizer Path normalization by removing its . and .. segments and replacing \\ with / . Inheritance Object PathNormalizer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class PathNormalizer Methods | Improve this Doc View Source NormalizePath(IEnumerable<String>, Nullable<IEnumerable<String>>) Normalize a path by removing its . and .. segments. Declaration public static IEnumerable<string> NormalizePath(this IEnumerable<string> pathSegments, IEnumerable<string>? previousPathSegments = default(IEnumerable<string>? )) Parameters Type Name Description IEnumerable < String > pathSegments The segments of the path to normalize. Nullable < IEnumerable < String >> previousPathSegments Initial path segments to be used as reference. Returns Type Description IEnumerable < String > The normalized path segments. | Improve this Doc View Source NormalizePath(String) Normalize a path by removing its . and .. segments. Declaration public static string NormalizePath(this string path) Parameters Type Name Description String path The path to normalize. Returns Type Description String The normalized path."
  },
  "api/FubarDev.FtpServer.Features.IRenameCommandFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IRenameCommandFeature.html",
    "title": "Interface IRenameCommandFeature | FTP Server documentation",
    "keywords": "Interface IRenameCommandFeature Feature for the RNFR and RNTO commands. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IRenameCommandFeature Properties | Improve this Doc View Source RenameFrom Gets or sets the IUnixFileEntry to use for a RNTO operation. Declaration SearchResult<IUnixFileSystemEntry> RenameFrom { get; set; } Property Value Type Description SearchResult < IUnixFileSystemEntry >"
  },
  "api/FubarDev.FtpServer.Features.Impl.html": {
    "href": "api/FubarDev.FtpServer.Features.Impl.html",
    "title": "Namespace FubarDev.FtpServer.Features.Impl | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Features.Impl Classes BackgroundTaskLifetimeFeature Default implementation of IBackgroundTaskLifetimeFeature . ServerCommandFeature Default implementation of the IServerCommandFeature ."
  },
  "api/FubarDev.FtpServer.CreateEncryptedStreamDelegate.html": {
    "href": "api/FubarDev.FtpServer.CreateEncryptedStreamDelegate.html",
    "title": "Delegate CreateEncryptedStreamDelegate | FTP Server documentation",
    "keywords": "Delegate CreateEncryptedStreamDelegate A delegate that's used to create an encrypted stream ( CreateEncryptedStream ). Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task<Stream> CreateEncryptedStreamDelegate(Stream unencryptedStream); Parameters Type Name Description Stream unencryptedStream The unencrypted stream. Returns Type Description Task < Stream > The encrypted stream."
  },
  "api/FubarDev.FtpServer.ConnectionStatus.html": {
    "href": "api/FubarDev.FtpServer.ConnectionStatus.html",
    "title": "Enum ConnectionStatus | FTP Server documentation",
    "keywords": "Enum ConnectionStatus The status of the current connection. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum ConnectionStatus Fields Name Description Authorized User is authorized. Begin The initial status. Login Executing login."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerProvider.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerProvider.html",
    "title": "Interface IFtpCommandHandlerProvider | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerProvider Provides information about all found FTP command handlers. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerProvider Properties | Improve this Doc View Source CommandHandlers Gets the information for all command handlers. Declaration IEnumerable<IFtpCommandHandlerInformation> CommandHandlers { get; } Property Value Type Description IEnumerable < IFtpCommandHandlerInformation >"
  },
  "api/FubarDev.FtpServer.CloseEncryptedStreamDelegate.html": {
    "href": "api/FubarDev.FtpServer.CloseEncryptedStreamDelegate.html",
    "title": "Delegate CloseEncryptedStreamDelegate | FTP Server documentation",
    "keywords": "Delegate CloseEncryptedStreamDelegate Closes an encrypted stream. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task CloseEncryptedStreamDelegate(CancellationToken cancellationToken); Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundCommandHandler.html",
    "title": "Class BackgroundCommandHandler | FTP Server documentation",
    "keywords": "Class BackgroundCommandHandler Asynchronous processing of an FTP command. Inheritance Object BackgroundCommandHandler Implements IBackgroundCommandHandler IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.dll Syntax [Obsolete(\"Not needed any more. Command execution was streamlined.\")] public sealed class BackgroundCommandHandler : IBackgroundCommandHandler, IDisposable Remarks This allows the implementation of the ABOR command. Methods | Improve this Doc View Source Cancel() Cancels the processing of the current command. Declaration public bool Cancel() Returns Type Description Boolean true when there was a command execution that could be cancelled. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Execute(IFtpCommandBase, FtpCommand) Executes the FTP command with the given FTP command handler . Declaration public Task<IFtpResponse? > Execute(IFtpCommandBase handler, FtpCommand command) Parameters Type Name Description IFtpCommandBase handler The command handler that processes the given command . FtpCommand command The command to process by the handler . Returns Type Description Task < Nullable < IFtpResponse >> null when the command could not be processed. Implements IBackgroundCommandHandler System.IDisposable"
  },
  "api/FubarDev.FtpServer.Authentication.DefaultSslStreamWrapperFactory.html": {
    "href": "api/FubarDev.FtpServer.Authentication.DefaultSslStreamWrapperFactory.html",
    "title": "Class DefaultSslStreamWrapperFactory | FTP Server documentation",
    "keywords": "Class DefaultSslStreamWrapperFactory The default implementation of the ISslStreamWrapperFactory interface. Inheritance Object DefaultSslStreamWrapperFactory Implements ISslStreamWrapperFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authentication Assembly : FubarDev.FtpServer.dll Syntax public class DefaultSslStreamWrapperFactory : ISslStreamWrapperFactory Constructors | Improve this Doc View Source DefaultSslStreamWrapperFactory(Nullable<ILogger<DefaultSslStreamWrapperFactory>>) Initializes a new instance of the DefaultSslStreamWrapperFactory class. Declaration public DefaultSslStreamWrapperFactory(ILogger<DefaultSslStreamWrapperFactory>? logger = default(ILogger<DefaultSslStreamWrapperFactory>? )) Parameters Type Name Description Nullable < ILogger < DefaultSslStreamWrapperFactory >> logger The logger. Methods | Improve this Doc View Source CloseStreamAsync(Stream, CancellationToken) Close the SslStream gracefully (if possible). Declaration public Task CloseStreamAsync(Stream sslStream, CancellationToken cancellationToken) Parameters Type Name Description Stream sslStream The SslStream to close. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source CreateSslStream(Stream, Boolean) Create a new SslStream instance. Declaration protected virtual SslStream CreateSslStream(Stream unencryptedStream, bool keepOpen) Parameters Type Name Description Stream unencryptedStream The stream to wrap in an SslStream instance. Boolean keepOpen Keep the inner stream open. Returns Type Description SslStream The new SslStream . | Improve this Doc View Source WrapStreamAsync(Stream, Boolean, X509Certificate, CancellationToken) Wraps the unencrypted stream in an SslStream. Declaration public Task<Stream> WrapStreamAsync(Stream unencryptedStream, bool keepOpen, X509Certificate certificate, CancellationToken cancellationToken) Parameters Type Name Description Stream unencryptedStream The unencrypted stream. Boolean keepOpen Keep the unencryptedStream open when the SslStream gets disposed. X509Certificate certificate The certificate to be used to authenticate as server. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Stream > The SslStream that wraps the unencryptedStream . Implements ISslStreamWrapperFactory"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.RootPerUserAccountDirectoryQueryOptions.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.RootPerUserAccountDirectoryQueryOptions.html",
    "title": "Class RootPerUserAccountDirectoryQueryOptions | FTP Server documentation",
    "keywords": "Class RootPerUserAccountDirectoryQueryOptions Options for the RootPerUserAccountDirectoryQuery . Inheritance Object RootPerUserAccountDirectoryQueryOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Directories.RootPerUser Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class RootPerUserAccountDirectoryQueryOptions Properties | Improve this Doc View Source AnonymousRootDirectory Gets or sets the anonymous root directory. Declaration public string? AnonymousRootDirectory { get; set; } Property Value Type Description Nullable < String > Remarks Anonymous users will have the root anonymous if this property isn't set. This path is relative to the file systems root path. | Improve this Doc View Source AnonymousRootPerEmail Gets or sets a value indicating whether anonymous users should have their own (per-email) root directory. Declaration public bool AnonymousRootPerEmail { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UserRootDirectory Gets or sets the normal authenticated users root directory. Declaration public string? UserRootDirectory { get; set; } Property Value Type Description Nullable < String > Remarks This path is relative to the file systems root path."
  },
  "api/FubarDev.FtpServer.IFtpConnectionKeepAlive.html": {
    "href": "api/FubarDev.FtpServer.IFtpConnectionKeepAlive.html",
    "title": "Interface IFtpConnectionKeepAlive | FTP Server documentation",
    "keywords": "Interface IFtpConnectionKeepAlive Interface to ensure that a connection keeps alive. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use the IFtpConnectionStatusCheck feature instead.\")] public interface IFtpConnectionKeepAlive Properties | Improve this Doc View Source IsAlive Gets a value indicating whether the connection is still alive. Declaration [Obsolete(\"Use the IFtpConnectionStatusCheck feature instead.\")] bool IsAlive { get; } Property Value Type Description Boolean | Improve this Doc View Source IsInDataTransfer Gets or sets a value indicating whether a data transfer is active. Declaration [Obsolete(\"Use the IFtpConnectionEventHost feature to publish events.\")] bool IsInDataTransfer { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LastActivityUtc Gets the time of last activity (UTC). Declaration [Obsolete(\"This has never been useful.\")] DateTime LastActivityUtc { get; } Property Value Type Description DateTime Methods | Improve this Doc View Source KeepAlive() Ensure that the connection keeps alive. Declaration [Obsolete(\"Use the IFtpConnectionEventHost feature to publish events.\")] void KeepAlive()"
  },
  "api/FubarDev.FtpServer.IFtpConnectionAccessor.html": {
    "href": "api/FubarDev.FtpServer.IFtpConnectionAccessor.html",
    "title": "Interface IFtpConnectionAccessor | FTP Server documentation",
    "keywords": "Interface IFtpConnectionAccessor Accessor to get/set the current (scoped) FTP connection. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnectionAccessor Properties | Improve this Doc View Source FtpConnection Gets or sets the current FTP connection. Declaration IFtpConnection FtpConnection { get; set; } Property Value Type Description IFtpConnection"
  },
  "api/FubarDev.FtpServer.FtpConnectionContext.html": {
    "href": "api/FubarDev.FtpServer.FtpConnectionContext.html",
    "title": "Class FtpConnectionContext | FTP Server documentation",
    "keywords": "Class FtpConnectionContext The FTP connection context. Inheritance Object FtpConnectionContext FtpConnection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class FtpConnectionContext Properties | Improve this Doc View Source ConnectionId Gets or sets the connection identifier. Declaration public abstract string ConnectionId { get; set; } Property Value Type Description String | Improve this Doc View Source Features Gets the connection features. Declaration public abstract IFeatureCollection Features { get; } Property Value Type Description IFeatureCollection"
  },
  "api/FubarDev.FtpServer.FileSystem.IAccountDirectoryQuery.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IAccountDirectoryQuery.html",
    "title": "Interface IAccountDirectoryQuery | FTP Server documentation",
    "keywords": "Interface IAccountDirectoryQuery Queries directories for a given account. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAccountDirectoryQuery Methods | Improve this Doc View Source GetDirectories(IAccountInformation) Get the account directories from the account information. Declaration IAccountDirectories GetDirectories(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation The account to get the directories from. Returns Type Description IAccountDirectories The directories for the account."
  },
  "api/FubarDev.FtpServer.FileSystem.IAccountDirectories.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IAccountDirectories.html",
    "title": "Interface IAccountDirectories | FTP Server documentation",
    "keywords": "Interface IAccountDirectories Well-known directories for a given account. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAccountDirectories Properties | Improve this Doc View Source HomePath Gets the initial path for the account. Declaration string? HomePath { get; } Property Value Type Description Nullable < String > Remarks This path is always relative to the root path above. / will be used if the RootPath is not set. | Improve this Doc View Source RootPath Gets the FTP root path. Declaration string? RootPath { get; } Property Value Type Description Nullable < String > Remarks The root path is always relative to the file system root path. If this path is not set, the file systems root directory will be used."
  },
  "api/FubarDev.FtpServer.Features.ISecureConnectionFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.ISecureConnectionFeature.html",
    "title": "Interface ISecureConnectionFeature | FTP Server documentation",
    "keywords": "Interface ISecureConnectionFeature Information about low-level connection information. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ISecureConnectionFeature Properties | Improve this Doc View Source CloseEncryptedControlStream Gets or sets a delegate that closes an encrypted control stream. Declaration CloseEncryptedStreamDelegate CloseEncryptedControlStream { get; set; } Property Value Type Description CloseEncryptedStreamDelegate Remarks This doesn't apply to encrypted data streams. | Improve this Doc View Source CreateEncryptedStream Gets or sets a delegate that allows the creation of an encrypted stream. Declaration CreateEncryptedStreamDelegate CreateEncryptedStream { get; set; } Property Value Type Description CreateEncryptedStreamDelegate | Improve this Doc View Source OriginalStream Gets the control connection stream. Declaration [Obsolete(\"Unused and will be removed.\")] NetworkStream OriginalStream { get; } Property Value Type Description NetworkStream"
  },
  "api/FubarDev.FtpServer.Features.IRestCommandFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IRestCommandFeature.html",
    "title": "Interface IRestCommandFeature | FTP Server documentation",
    "keywords": "Interface IRestCommandFeature Feature for the REST command. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IRestCommandFeature Properties | Improve this Doc View Source RestartPosition Gets or sets the restart position for appending data to a file. Declaration long RestartPosition { get; set; } Property Value Type Description Int64"
  },
  "api/FubarDev.FtpServer.ConnectionInitAsyncDelegate.html": {
    "href": "api/FubarDev.FtpServer.ConnectionInitAsyncDelegate.html",
    "title": "Delegate ConnectionInitAsyncDelegate | FTP Server documentation",
    "keywords": "Delegate ConnectionInitAsyncDelegate Async delegate to initialize a connection. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task ConnectionInitAsyncDelegate(IFtpConnection connection, CancellationToken cancellationToken); Parameters Type Name Description IFtpConnection connection The connection to initialize. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task for the asynchronous operation."
  },
  "api/FubarDev.FtpServer.ConnectionHandlers.html": {
    "href": "api/FubarDev.FtpServer.ConnectionHandlers.html",
    "title": "Namespace FubarDev.FtpServer.ConnectionHandlers | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ConnectionHandlers Interfaces IFtpConnectionAdapter An FTP connection adapter does something with the input and output pipes. IFtpSecureConnectionAdapter Connection adapter for a secure connection."
  },
  "api/FubarDev.FtpServer.Commands.DefaultFtpCommandActivator.html": {
    "href": "api/FubarDev.FtpServer.Commands.DefaultFtpCommandActivator.html",
    "title": "Class DefaultFtpCommandActivator | FTP Server documentation",
    "keywords": "Class DefaultFtpCommandActivator Default implementation of the IFtpCommandActivator . Inheritance Object DefaultFtpCommandActivator Implements IFtpCommandActivator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.dll Syntax public class DefaultFtpCommandActivator : IFtpCommandActivator Constructors | Improve this Doc View Source DefaultFtpCommandActivator(IServiceProvider, IFtpCommandHandlerProvider, IFtpCommandHandlerExtensionProvider) Initializes a new instance of the DefaultFtpCommandActivator class. Declaration public DefaultFtpCommandActivator(IServiceProvider serviceProvider, IFtpCommandHandlerProvider commandHandlerProvider, IFtpCommandHandlerExtensionProvider commandHandlerExtensionProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider. IFtpCommandHandlerProvider commandHandlerProvider The provider for FTP command handlers. IFtpCommandHandlerExtensionProvider commandHandlerExtensionProvider The provider for FTP command handler extensions. Methods | Improve this Doc View Source Create(FtpCommandHandlerContext) Gets information about the FTP command to be executed. Declaration public FtpCommandSelection? Create(FtpCommandHandlerContext context) Parameters Type Name Description FtpCommandHandlerContext context The FTP command execution context. Returns Type Description Nullable < FtpCommandSelection > Information about the FTP command to be executed. Implements IFtpCommandActivator"
  },
  "api/FubarDev.FtpServer.IPasvListenerFactory.html": {
    "href": "api/FubarDev.FtpServer.IPasvListenerFactory.html",
    "title": "Interface IPasvListenerFactory | FTP Server documentation",
    "keywords": "Interface IPasvListenerFactory Creates correctly configured IPasvListener . Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IPasvListenerFactory Methods | Improve this Doc View Source CreateTcpListenerAsync(IFtpConnection, Nullable<AddressFamily>, Int32, CancellationToken) Create a new TcpListener for the given connection. Declaration Task<IPasvListener> CreateTcpListenerAsync(IFtpConnection connection, AddressFamily? addressFamily = default(AddressFamily? ), int port = 0, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IFtpConnection connection connection on which to create the tcp listener. Nullable < AddressFamily > addressFamily The address family for the address to be selected. Int32 port listen on the given port, or 0 for any port. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IPasvListener > A TcpListener. Exceptions Type Condition SocketException Network error, such as no free port. ArgumentOutOfRangeException The chosen port was not within the configured range of ports."
  },
  "api/FubarDev.FtpServer.IBackgroundCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.IBackgroundCommandHandler.html",
    "title": "Interface IBackgroundCommandHandler | FTP Server documentation",
    "keywords": "Interface IBackgroundCommandHandler Interface for asynchronous processing of an FTP command. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Not needed any more. Command execution was streamlined.\")] public interface IBackgroundCommandHandler Remarks This allows the implementation of the ABOR command. Methods | Improve this Doc View Source Cancel() Cancels the processing of the current command. Declaration bool Cancel() Returns Type Description Boolean true when there was a command execution that could be cancelled. | Improve this Doc View Source Execute(IFtpCommandBase, FtpCommand) Executes the FTP command with the given FTP command handler . Declaration Task<IFtpResponse? > Execute(IFtpCommandBase handler, FtpCommand command) Parameters Type Name Description IFtpCommandBase handler The command handler that processes the given command . FtpCommand command The command to process by the handler . Returns Type Description Task < Nullable < IFtpResponse >> null when the command could not be processed."
  },
  "api/FubarDev.FtpServer.IAccountInformation.html": {
    "href": "api/FubarDev.FtpServer.IAccountInformation.html",
    "title": "Interface IAccountInformation | FTP Server documentation",
    "keywords": "Interface IAccountInformation Information about the account associated to a connection. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAccountInformation Properties | Improve this Doc View Source FtpUser Gets the current FTP user. Declaration ClaimsPrincipal FtpUser { get; } Property Value Type Description ClaimsPrincipal | Improve this Doc View Source User Gets the current user. Declaration [Obsolete(\"Use FtpUser to get the user information.\")] IFtpUser User { get; } Property Value Type Description IFtpUser"
  },
  "api/FubarDev.FtpServer.FileSystem.Unix.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Unix.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.Unix | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.Unix Classes UnixFileSystem A backend that uses Posix(?) API calls to access the file system. UnixFileSystemOptions Options for the Unix file system. UnixFileSystemProvider A file system provider that uses the Posix API."
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.IGoogleDriveServiceProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.IGoogleDriveServiceProvider.html",
    "title": "Interface IGoogleDriveServiceProvider | FTP Server documentation",
    "keywords": "Interface IGoogleDriveServiceProvider An interface to get the Google Drive service for the given user. Namespace : FubarDev.FtpServer.FileSystem.GoogleDrive Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public interface IGoogleDriveServiceProvider Methods | Improve this Doc View Source GetUserRootAsync(IAccountInformation, CancellationToken) Gets the Google Drive service and root entry for the given user. Declaration Task<(DriveService service, File rootEntry)> GetUserRootAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation The FTP account to create the IUnixFileSystem for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ValueTuple < Google.Apis.Drive.v3.DriveService , Google.Apis.Drive.v3.Data.File >> The Google Drive service and the root entry."
  },
  "api/FubarDev.FtpServer.Features.IAuthorizationInformationFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IAuthorizationInformationFeature.html",
    "title": "Interface IAuthorizationInformationFeature | FTP Server documentation",
    "keywords": "Interface IAuthorizationInformationFeature Authorization information feature. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAuthorizationInformationFeature Properties | Improve this Doc View Source FtpUser Gets or sets the current user. Declaration ClaimsPrincipal? FtpUser { get; set; } Property Value Type Description Nullable < ClaimsPrincipal > | Improve this Doc View Source User Gets or sets the current user. Declaration [Obsolete(\"Use the FtpUser property.\")] IFtpUser? User { get; set; } Property Value Type Description Nullable < IFtpUser >"
  },
  "api/FubarDev.FtpServer.Events.html": {
    "href": "api/FubarDev.FtpServer.Events.html",
    "title": "Namespace FubarDev.FtpServer.Events | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Events Classes FtpConnectionCommandReceivedEvent This event object gets sent when a command was received. FtpConnectionDataTransferStartedEvent This event object gets sent when a data transfer was started. FtpConnectionDataTransferStoppedEvent This event object gets sent when a data transfer was stopped. Interfaces IFtpConnectionEvent Base interface for an FTP connection event. IFtpConnectionEventHost The event host."
  },
  "api/FubarDev.FtpServer.IFtpServerBuilder.html": {
    "href": "api/FubarDev.FtpServer.IFtpServerBuilder.html",
    "title": "Interface IFtpServerBuilder | FTP Server documentation",
    "keywords": "Interface IFtpServerBuilder Base interface for FubarDev.FtpServer configuration. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpServerBuilder Properties | Improve this Doc View Source Services Gets the service collection. Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Extension Methods FubarDev.FtpServer.FtpServerBuilderExtensions.EnableDefaultChecks(FubarDev.FtpServer.IFtpServerBuilder) FubarDev.FtpServer.FtpServerBuilderExtensions.EnableIdleCheck(FubarDev.FtpServer.IFtpServerBuilder) FubarDev.FtpServer.FtpServerBuilderExtensions.DisableIdleCheck(FubarDev.FtpServer.IFtpServerBuilder) FubarDev.FtpServer.FtpServerBuilderExtensions.EnableConnectionCheck(FubarDev.FtpServer.IFtpServerBuilder) FubarDev.FtpServer.FtpServerBuilderExtensions.DisableConnectionCheck(FubarDev.FtpServer.IFtpServerBuilder) FubarDev.FtpServer.FtpServerBuilderExtensions.DisableChecks(FubarDev.FtpServer.IFtpServerBuilder) DotNetFtpServerBuilderExtensions.UseDotNetFileSystem(IFtpServerBuilder) GoogleDriveFtpServerBuilderExtensions.UseGoogleDrive(IFtpServerBuilder, Func<IServiceProvider, DriveService>) GoogleDriveFtpServerBuilderExtensions.UseGoogleDrive(IFtpServerBuilder, IConfigurableHttpClientInitializer, String) S3FtpServerBuilderExtensions.UseS3FileSystem(IFtpServerBuilder) FtpServerBuilderExtensions.EnableAnonymousAuthentication(IFtpServerBuilder) FtpServerBuilderExtensions.UseSingleRoot(IFtpServerBuilder, Nullable<Action<SingleRootWithoutHomeAccountDirectoryQueryOptions>>) FtpServerBuilderExtensions.UseRootPerUser(IFtpServerBuilder, Nullable<Action<RootPerUserAccountDirectoryQueryOptions>>) UnixFsFtpServerBuilderExtensions.UseUnixFileSystem(IFtpServerBuilder) InMemoryFtpServerBuilderExtensions.UseInMemoryFileSystem(IFtpServerBuilder)"
  },
  "api/FubarDev.FtpServer.FileSystem.IFileSystemClassFactory.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IFileSystemClassFactory.html",
    "title": "Interface IFileSystemClassFactory | FTP Server documentation",
    "keywords": "Interface IFileSystemClassFactory This factory interface is used to create a IUnixFileSystem implementation for a given user ID. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFileSystemClassFactory Methods | Improve this Doc View Source Create(IAccountInformation) Creates a IUnixFileSystem implementation for a given accountInformation . Declaration Task<IUnixFileSystem> Create(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation The FTP account to create the IUnixFileSystem for. Returns Type Description Task < IUnixFileSystem > The new IUnixFileSystem for the accountInformation . Remarks When the login is anonymous, the User must be of type IAnonymousFtpUser ."
  },
  "api/FubarDev.FtpServer.Features.ITransferConfigurationFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.ITransferConfigurationFeature.html",
    "title": "Interface ITransferConfigurationFeature | FTP Server documentation",
    "keywords": "Interface ITransferConfigurationFeature Feature for transfer commands. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ITransferConfigurationFeature Properties | Improve this Doc View Source TransferMode Gets or sets the FtpTransferMode . Declaration FtpTransferMode TransferMode { get; set; } Property Value Type Description FtpTransferMode"
  },
  "api/FubarDev.FtpServer.Features.IServerCommandFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IServerCommandFeature.html",
    "title": "Interface IServerCommandFeature | FTP Server documentation",
    "keywords": "Interface IServerCommandFeature The server command feature. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IServerCommandFeature Properties | Improve this Doc View Source ServerCommandWriter Gets the channel to write server commands. Declaration ChannelWriter<IServerCommand> ServerCommandWriter { get; } Property Value Type Description ChannelWriter < IServerCommand >"
  },
  "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionIdleCheck.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionIdleCheck.html",
    "title": "Class FtpConnectionIdleCheck | FTP Server documentation",
    "keywords": "Class FtpConnectionIdleCheck An activity-based keep-alive detection. Inheritance Object FtpConnectionIdleCheck Implements IFtpConnectionCheck IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.dll Syntax public class FtpConnectionIdleCheck : IFtpConnectionCheck, IDisposable Constructors | Improve this Doc View Source FtpConnectionIdleCheck(IFtpConnectionAccessor, IOptions<FtpConnectionOptions>) Initializes a new instance of the FtpConnectionIdleCheck class. Declaration public FtpConnectionIdleCheck(IFtpConnectionAccessor connectionAccessor, IOptions<FtpConnectionOptions> options) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. IOptions < FtpConnectionOptions > options FTP connection options. Methods | Improve this Doc View Source Check(FtpConnectionCheckContext) Check if the connection is usable. Declaration public FtpConnectionCheckResult Check(FtpConnectionCheckContext context) Parameters Type Name Description FtpConnectionCheckContext context The FTP connection check context. Returns Type Description FtpConnectionCheckResult FtpConnectionCheckResult that contains the result of the check. | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IFtpConnectionCheck System.IDisposable"
  },
  "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionEstablishedCheck.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionEstablishedCheck.html",
    "title": "Class FtpConnectionEstablishedCheck | FTP Server documentation",
    "keywords": "Class FtpConnectionEstablishedCheck Checks if the TCP connection itself is still established. Inheritance Object FtpConnectionEstablishedCheck Implements IFtpConnectionCheck Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.dll Syntax public class FtpConnectionEstablishedCheck : IFtpConnectionCheck Methods | Improve this Doc View Source Check(FtpConnectionCheckContext) Check if the connection is usable. Declaration public FtpConnectionCheckResult Check(FtpConnectionCheckContext context) Parameters Type Name Description FtpConnectionCheckContext context The FTP connection check context. Returns Type Description FtpConnectionCheckResult FtpConnectionCheckResult that contains the result of the check. Implements IFtpConnectionCheck"
  },
  "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionScanner.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionScanner.html",
    "title": "Interface IFtpCommandHandlerExtensionScanner | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtensionScanner Searches for FTP command handler extensions and returns information about it. Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerExtensionScanner Methods | Improve this Doc View Source Search() Search for FTP command handler extensions. Declaration IEnumerable<IFtpCommandHandlerExtensionInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerExtensionInformation > The information about the found FTP command handler extensions."
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.TemporaryDataFactory.CreateAsyncDelegate.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.TemporaryDataFactory.CreateAsyncDelegate.html",
    "title": "Delegate TemporaryDataFactory.CreateAsyncDelegate | FTP Server documentation",
    "keywords": "Delegate TemporaryDataFactory.CreateAsyncDelegate The delegate to create temporary data objects. Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax protected delegate Task<ITemporaryData> CreateAsyncDelegate(Stream input, CancellationToken cancellationToken); Parameters Type Name Description Stream input The data for the temporary data objects. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ITemporaryData > A Task representing the asynchronous operation."
  },
  "api/FubarDev.FtpServer.Authorization.IAuthorizationAction.html": {
    "href": "api/FubarDev.FtpServer.Authorization.IAuthorizationAction.html",
    "title": "Interface IAuthorizationAction | FTP Server documentation",
    "keywords": "Interface IAuthorizationAction Interface for actions that need to be executed upon successful authorization. Namespace : FubarDev.FtpServer.Authorization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAuthorizationAction Properties | Improve this Doc View Source Level Gets the level of importance. Declaration int Level { get; } Property Value Type Description Int32 Remarks Authorization actions with a higher level are executed first. The levels 1000 (inclusive) to 2000 (inclusive) are used internally to fill the connection information. Methods | Improve this Doc View Source AuthorizedAsync(IAccountInformation, CancellationToken) Notification of successful authorization. Declaration Task AuthorizedAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation The account information that led to successful authorization. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.Address.html": {
    "href": "api/FubarDev.FtpServer.Address.html",
    "title": "Class Address | FTP Server documentation",
    "keywords": "Class Address Abstraction for an IP address. Inheritance Object Address Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use IPEndPoint instead\")] public class Address Constructors | Improve this Doc View Source Address(Int32) Initializes a new instance of the Address class. Declaration public Address(int port) Parameters Type Name Description Int32 port The port. Remarks This constructor omits the address part. | Improve this Doc View Source Address(Nullable<String>, Int32) Initializes a new instance of the Address class. Declaration public Address(string? address, int port) Parameters Type Name Description Nullable < String > address IPv4 address. Int32 port The port. Properties | Improve this Doc View Source AddressFamily Gets the IP address family. Declaration public AddressFamily? AddressFamily { get; } Property Value Type Description Nullable < AddressFamily > | Improve this Doc View Source IPAddress Gets the IP address. Declaration public IPAddress? IPAddress { get; } Property Value Type Description Nullable < IPAddress > | Improve this Doc View Source Port Gets the port. Declaration public int Port { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Parse(Nullable<String>) Parses an IP address. Declaration public static Address? Parse(string? address) Parameters Type Name Description Nullable < String > address The IP address to parse. Returns Type Description Nullable < Address > The parsed IP address. | Improve this Doc View Source ToString() Converts the IP address to a string as required by the PASV command. Declaration public override string ToString() Returns Type Description String The IP address as string. Overrides Object.ToString() | Improve this Doc View Source ToString(Boolean) Converts the IP address into a string. Declaration public string ToString(bool logFormat) Parameters Type Name Description Boolean logFormat true when it should be converted to a loggable format, otherwise the FTP format is used. Returns Type Description String The IP address as string. | Improve this Doc View Source ToUri() Converts this address to an URI. Declaration public Uri ToUri() Returns Type Description Uri The newly created URI."
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.ClaimsPrincipalExtensions.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | FTP Server documentation",
    "keywords": "Class ClaimsPrincipalExtensions Extension methods for ClaimsPrincipal . Inheritance Object ClaimsPrincipalExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Compatibility Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Will only be used for compatibility purposes.\")] public static class ClaimsPrincipalExtensions Methods | Improve this Doc View Source CreateUser(ClaimsPrincipal) Creates a IFtpUser for a ClaimsPrincipal . Declaration [Obsolete(\"Will only be used for compatibility purposes.\")] public static IFtpUser CreateUser(this ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The claims principal to create the IFtpUser from. Returns Type Description IFtpUser The new object."
  },
  "api/FubarDev.FtpServer.ServerCommands.DelegateServerCommandExecutor.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.DelegateServerCommandExecutor.html",
    "title": "Class DelegateServerCommandExecutor | FTP Server documentation",
    "keywords": "Class DelegateServerCommandExecutor This IServerCommandExecutor implementation creates a compiled delegate to call the server command handlers. Inheritance Object DelegateServerCommandExecutor Implements IServerCommandExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public class DelegateServerCommandExecutor : IServerCommandExecutor Constructors | Improve this Doc View Source DelegateServerCommandExecutor(IFtpConnectionAccessor) Initializes a new instance of the DelegateServerCommandExecutor class. Declaration public DelegateServerCommandExecutor(IFtpConnectionAccessor ftpConnectionAccessor) Parameters Type Name Description IFtpConnectionAccessor ftpConnectionAccessor Accessor to get the FTP connection. Methods | Improve this Doc View Source ExecuteAsync(IServerCommand, CancellationToken) Execute the given server command. Declaration public Task ExecuteAsync(IServerCommand serverCommand, CancellationToken cancellationToken) Parameters Type Name Description IServerCommand serverCommand The server command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. Implements IServerCommandExecutor"
  },
  "api/FubarDev.FtpServer.IFtpHostSelector.html": {
    "href": "api/FubarDev.FtpServer.IFtpHostSelector.html",
    "title": "Interface IFtpHostSelector | FTP Server documentation",
    "keywords": "Interface IFtpHostSelector Interface to select an FTP host or get the selected FTP host. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpHostSelector Properties | Improve this Doc View Source SelectedHost Gets the selected FTP host. Declaration IFtpHost SelectedHost { get; } Property Value Type Description IFtpHost Methods | Improve this Doc View Source SelectHostAsync(HostInfo, CancellationToken) Selects the new FTP host. Declaration Task<IFtpResponse> SelectHostAsync(HostInfo hostInfo, CancellationToken cancellationToken) Parameters Type Name Description HostInfo hostInfo The host to select. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The FTP response for the HOST command."
  },
  "api/FubarDev.FtpServer.IFtpHost.html": {
    "href": "api/FubarDev.FtpServer.IFtpHost.html",
    "title": "Interface IFtpHost | FTP Server documentation",
    "keywords": "Interface IFtpHost Information about an FTP host. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpHost Properties | Improve this Doc View Source AuthenticationMechanisms Gets the authentication mechanisms for this host. Declaration IEnumerable<IAuthenticationMechanism> AuthenticationMechanisms { get; } Property Value Type Description IEnumerable < IAuthenticationMechanism > | Improve this Doc View Source AuthorizationMechanisms Gets the authorization mechanisms for this host. Declaration IEnumerable<IAuthorizationMechanism> AuthorizationMechanisms { get; } Property Value Type Description IEnumerable < IAuthorizationMechanism > | Improve this Doc View Source Certificate Gets the certificate for this host. Declaration X509Certificate? Certificate { get; } Property Value Type Description Nullable < X509Certificate > | Improve this Doc View Source Info Gets the FTP host information as passed to the HOST command. Declaration HostInfo Info { get; } Property Value Type Description HostInfo"
  },
  "api/FubarDev.FtpServer.FtpResponseLine.html": {
    "href": "api/FubarDev.FtpServer.FtpResponseLine.html",
    "title": "Class FtpResponseLine | FTP Server documentation",
    "keywords": "Class FtpResponseLine Information about a line to be sent to the client. Inheritance Object FtpResponseLine Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class FtpResponseLine Constructors | Improve this Doc View Source FtpResponseLine(Nullable<String>, Nullable<Object>) Initializes a new instance of the FtpResponseLine class. Declaration public FtpResponseLine(string? text, object? token) Parameters Type Name Description Nullable < String > text The text sent to the client. Set to null to indicate that no more lines will follow. Nullable < Object > token The token to be passes to the GetNextLineAsync(Nullable<Object>, CancellationToken) function to get the next line. Properties | Improve this Doc View Source HasMoreData Gets a value indicating whether there are more lines to be sent to the client. Declaration public bool HasMoreData { get; } Property Value Type Description Boolean | Improve this Doc View Source HasText Gets a value indicating whether the Text property contains data to be sent to the client. Declaration public bool HasText { get; } Property Value Type Description Boolean | Improve this Doc View Source Text Gets the text to be sent to the client. Declaration public string? Text { get; } Property Value Type Description Nullable < String > Remarks Is null when no text should be sent to the client. | Improve this Doc View Source Token Gets the token to be passed to GetNextLineAsync(Nullable<Object>, CancellationToken) to get the next line. Declaration public object? Token { get; } Property Value Type Description Nullable < Object > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/FubarDev.FtpServer.FileSystem.S3.S3FileSystemOptions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.S3.S3FileSystemOptions.html",
    "title": "Class S3FileSystemOptions | FTP Server documentation",
    "keywords": "Class S3FileSystemOptions Options for the S3 file system. Inheritance Object S3FileSystemOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.S3 Assembly : FubarDev.FtpServer.FileSystem.S3.dll Syntax public class S3FileSystemOptions Properties | Improve this Doc View Source AwsAccessKeyId Gets or sets the AWS access key. Declaration public string? AwsAccessKeyId { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source AwsSecretAccessKey Gets or sets the AWS secret key. Declaration public string? AwsSecretAccessKey { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source BucketName Gets or sets the S3 bucket name. Declaration public string? BucketName { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source BucketRegion Gets or sets the S3 bucket region. Declaration public string? BucketRegion { get; set; } Property Value Type Description Nullable < String > Remarks It may be a region identifier like us-west-1 . | Improve this Doc View Source RootPath Gets or sets the root path. Declaration public string? RootPath { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/FubarDev.FtpServer.FileSystem.Generic.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Generic.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.Generic | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.Generic Classes GenericAccessMode Generic implementation of the IAccessMode interface. GenericUnixPermissions Generic implementation of IUnixPermissions ."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandMiddleware.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandMiddleware.html",
    "title": "Interface IFtpCommandMiddleware | FTP Server documentation",
    "keywords": "Interface IFtpCommandMiddleware FTP command middleware. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandMiddleware Methods | Improve this Doc View Source InvokeAsync(FtpExecutionContext, FtpCommandExecutionDelegate) Function that gets invoked for the middleware. Declaration Task InvokeAsync(FtpExecutionContext context, FtpCommandExecutionDelegate next) Parameters Type Name Description FtpExecutionContext context The context for the current FTP command. FtpCommandExecutionDelegate next The next middleware. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandInformation.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandInformation.html",
    "title": "Interface IFtpCommandInformation | FTP Server documentation",
    "keywords": "Interface IFtpCommandInformation Generic information about an FTP command. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandInformation Properties | Improve this Doc View Source IsAbortable Gets a value indicating whether this command is abortable. Declaration bool IsAbortable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLoginRequired Gets a value indicating whether a login is required to execute this command. Declaration bool IsLoginRequired { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets the name of the FTP command. Declaration string Name { get; } Property Value Type Description String"
  },
  "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionProvider.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionProvider.html",
    "title": "Interface IFtpCommandHandlerExtensionProvider | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtensionProvider Provides information about all found FTP command handler extensions. Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerExtensionProvider Properties | Improve this Doc View Source CommandHandlerExtensions Gets the information for all command handler extensions. Declaration IEnumerable<IFtpCommandHandlerExtensionInformation> CommandHandlerExtensions { get; } Property Value Type Description IEnumerable < IFtpCommandHandlerExtensionInformation >"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.ITemporaryDataFactory.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.ITemporaryDataFactory.html",
    "title": "Interface ITemporaryDataFactory | FTP Server documentation",
    "keywords": "Interface ITemporaryDataFactory Factory for temporary data objects. Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ITemporaryDataFactory Methods | Improve this Doc View Source CreateAsync(Stream, Nullable<Int64>, CancellationToken) Creates a temporary data object for data with the expected size. Declaration Task<ITemporaryData> CreateAsync(Stream input, long? expectedSize, CancellationToken cancellationToken) Parameters Type Name Description Stream input The stream containing the data. Nullable < Int64 > expectedSize The expected data size. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ITemporaryData > The created temporary data object."
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.CloseConnectionServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.CloseConnectionServerCommandHandler.html",
    "title": "Class CloseConnectionServerCommandHandler | FTP Server documentation",
    "keywords": "Class CloseConnectionServerCommandHandler Handler for the CloseConnectionServerCommand . Inheritance Object CloseConnectionServerCommandHandler Implements IServerCommandHandler < CloseConnectionServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class CloseConnectionServerCommandHandler : IServerCommandHandler<CloseConnectionServerCommand> Constructors | Improve this Doc View Source CloseConnectionServerCommandHandler(IFtpConnectionAccessor) Initializes a new instance of the CloseConnectionServerCommandHandler class. Declaration public CloseConnectionServerCommandHandler(IFtpConnectionAccessor connectionAccessor) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Methods | Improve this Doc View Source ExecuteAsync(CloseConnectionServerCommand, CancellationToken) Declaration public Task ExecuteAsync(CloseConnectionServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description CloseConnectionServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.SecurityStatus.html": {
    "href": "api/FubarDev.FtpServer.SecurityStatus.html",
    "title": "Enum SecurityStatus | FTP Server documentation",
    "keywords": "Enum SecurityStatus The states of the FTP login state machine. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum SecurityStatus Fields Name Description Authenticated The user is authenticated. Authorization is needed. Authorized The user is authorized. NeedAccount An additional ACCT command is required to complete the authorization. NeedPassword User needs to issue a password. NeedSecurityData The AUTH command needs authentication data ( ADAT ). Unauthenticated Unauthenticated, either AUTH or USER is needed for authentication/authorization."
  },
  "api/FubarDev.FtpServer.CommandHandlers.QuitCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.QuitCommandHandler.html",
    "title": "Class QuitCommandHandler | FTP Server documentation",
    "keywords": "Class QuitCommandHandler Implements the QUIT command. Inheritance Object FtpCommandHandler QuitCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"QUIT\", false, false)] [FtpCommandHandler(\"LOGOUT\", false, false)] public class QuitCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveFileSystemProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveFileSystemProvider.html",
    "title": "Class GoogleDriveFileSystemProvider | FTP Server documentation",
    "keywords": "Class GoogleDriveFileSystemProvider A file system provider for Google Drive. Inheritance Object GoogleDriveFileSystemProvider Implements IFileSystemClassFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.GoogleDrive Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public class GoogleDriveFileSystemProvider : IFileSystemClassFactory Constructors | Improve this Doc View Source GoogleDriveFileSystemProvider(IGoogleDriveServiceProvider, ITemporaryDataFactory, IOptions<GoogleDriveOptions>) Initializes a new instance of the GoogleDriveFileSystemProvider class. Declaration public GoogleDriveFileSystemProvider(IGoogleDriveServiceProvider serviceProvider, ITemporaryDataFactory temporaryDataFactory, IOptions<GoogleDriveOptions> options) Parameters Type Name Description IGoogleDriveServiceProvider serviceProvider The google drive service provider. ITemporaryDataFactory temporaryDataFactory The factory to create temporary data objects. IOptions < GoogleDriveOptions > options Options for the Google Drive file system. Methods | Improve this Doc View Source Create(IAccountInformation) Declaration public Task<IUnixFileSystem> Create(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description Task < IUnixFileSystem > Implements IFileSystemClassFactory"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystem.html",
    "title": "Class DotNetFileSystem | FTP Server documentation",
    "keywords": "Class DotNetFileSystem A IUnixFileSystem implementation that uses the standard .NET functionality to access the file system. Inheritance Object DotNetFileSystem Implements IUnixFileSystem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public class DotNetFileSystem : IUnixFileSystem Constructors | Improve this Doc View Source DotNetFileSystem(String, Boolean) Initializes a new instance of the DotNetFileSystem class. Declaration public DotNetFileSystem(string rootPath, bool allowNonEmptyDirectoryDelete) Parameters Type Name Description String rootPath The path to use as root. Boolean allowNonEmptyDirectoryDelete Defines whether the deletion of non-empty directories is allowed. | Improve this Doc View Source DotNetFileSystem(String, Boolean, Int32) Initializes a new instance of the DotNetFileSystem class. Declaration public DotNetFileSystem(string rootPath, bool allowNonEmptyDirectoryDelete, int streamBufferSize) Parameters Type Name Description String rootPath The path to use as root. Boolean allowNonEmptyDirectoryDelete Defines whether the deletion of non-empty directories is allowed. Int32 streamBufferSize Buffer size to be used in async IO methods. Fields | Improve this Doc View Source DefaultStreamBufferSize The default buffer size for copying from one stream to another. Declaration public static readonly int DefaultStreamBufferSize Field Value Type Description Int32 Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Sets the modify/access/create timestamp of a file system item. Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry The IUnixFileSystemEntry to change the timestamp for. Nullable < DateTimeOffset > modify The modification timestamp. Nullable < DateTimeOffset > access The access timestamp. Nullable < DateTimeOffset > create The creation timestamp. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IUnixFileSystemEntry > The modified IUnixFileSystemEntry . | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileEntry.html",
    "title": "Class InMemoryFileEntry | FTP Server documentation",
    "keywords": "Class InMemoryFileEntry The in-memory file. Inheritance Object InMemoryFileSystemEntry InMemoryFileEntry Implements IUnixFileEntry IUnixFileSystemEntry IUnixOwner Inherited Members InMemoryFileSystemEntry.Name InMemoryFileSystemEntry.Owner InMemoryFileSystemEntry.Group InMemoryFileSystemEntry.Permissions InMemoryFileSystemEntry.LastWriteTime InMemoryFileSystemEntry.CreatedTime InMemoryFileSystemEntry.NumberOfLinks InMemoryFileSystemEntry.Parent InMemoryFileSystemEntry.WithOwner(IFtpUser) InMemoryFileSystemEntry.WithOwner(ClaimsPrincipal) InMemoryFileSystemEntry.SetLastWriteTime(DateTimeOffset) InMemoryFileSystemEntry.SetCreateTime(DateTimeOffset) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public class InMemoryFileEntry : InMemoryFileSystemEntry, IUnixFileEntry, IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source InMemoryFileEntry(InMemoryDirectoryEntry, String, Byte[]) Initializes a new instance of the InMemoryFileEntry class. Declaration public InMemoryFileEntry(InMemoryDirectoryEntry parent, string name, byte[] data) Parameters Type Name Description InMemoryDirectoryEntry parent The parent entry. String name The name of this entry. Byte [] data The file data. Properties | Improve this Doc View Source Data Gets or sets the data of this file entry. Declaration public byte[] Data { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Size Declaration public long Size { get; } Property Value Type Description Int64 Implements IUnixFileEntry IUnixFileSystemEntry IUnixOwner"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystem.html",
    "title": "Class InMemoryFileSystem | FTP Server documentation",
    "keywords": "Class InMemoryFileSystem The implementation of the in-memory file system. Inheritance Object InMemoryFileSystem Implements IUnixFileSystem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public class InMemoryFileSystem : IUnixFileSystem Constructors | Improve this Doc View Source InMemoryFileSystem(StringComparer) Initializes a new instance of the InMemoryFileSystem class. Declaration public InMemoryFileSystem(StringComparer fileSystemEntryComparer) Parameters Type Name Description StringComparer fileSystemEntryComparer The file system entry name comparer. Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < DateTimeOffset > modify Nullable < DateTimeOffset > access Nullable < DateTimeOffset > create CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem"
  },
  "api/FubarDev.FtpServer.CommandHandlers.PasvCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.PasvCommandHandler.html",
    "title": "Class PasvCommandHandler | FTP Server documentation",
    "keywords": "Class PasvCommandHandler The command handler for the PASV (4.1.2.) and EPSV commands. Inheritance Object FtpCommandHandler PasvCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PASV\", false, true)] [FtpCommandHandler(\"EPSV\", false, true)] [FtpFeatureText(\"EPSV\")] public class PasvCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source PasvCommandHandler(PassiveDataConnectionFeatureFactory) Initializes a new instance of the PasvCommandHandler class. Declaration public PasvCommandHandler(PassiveDataConnectionFeatureFactory dataConnectionFeatureFactory) Parameters Type Name Description PassiveDataConnectionFeatureFactory dataConnectionFeatureFactory The data connection feature factory. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FtpResponse.html": {
    "href": "api/FubarDev.FtpServer.FtpResponse.html",
    "title": "Class FtpResponse | FTP Server documentation",
    "keywords": "Class FtpResponse FTP response. Inheritance Object FtpResponse Implements IFtpResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpResponse : IFtpResponse Constructors | Improve this Doc View Source FtpResponse(SecurityActionResult, Nullable<String>) Initializes a new instance of the FtpResponse class. Declaration public FtpResponse(SecurityActionResult code, string? message) Parameters Type Name Description SecurityActionResult code The response code. Nullable < String > message The response message. | Improve this Doc View Source FtpResponse(Int32, Nullable<String>) Initializes a new instance of the FtpResponse class. Declaration public FtpResponse(int code, string? message) Parameters Type Name Description Int32 code The response code. Nullable < String > message The response message. Properties | Improve this Doc View Source AfterWriteAction Gets or sets the async action to execute after sending the response to the client. Declaration [Obsolete(\"Use a custom server command.\")] public FtpResponseAfterWriteAsyncDelegate? AfterWriteAction { get; set; } Property Value Type Description Nullable < FtpResponseAfterWriteAsyncDelegate > | Improve this Doc View Source Code Declaration public int Code { get; } Property Value Type Description Int32 | Improve this Doc View Source Message Gets the response message. Declaration public string? Message { get; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetNextLineAsync(Nullable<Object>, CancellationToken) Declaration public Task<FtpResponseLine> GetNextLineAsync(object? token, CancellationToken cancellationToken) Parameters Type Name Description Nullable < Object > token CancellationToken cancellationToken Returns Type Description Task < FtpResponseLine > | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IFtpResponse"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MffCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MffCommandHandler.html",
    "title": "Class MffCommandHandler | FTP Server documentation",
    "keywords": "Class MffCommandHandler Implements the MFF command. Inheritance Object FtpCommandHandler MffCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MFF\", false, true)] [FtpFeatureFunction(\"FeatureStatus\")] public class MffCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source FeatureStatus(IFtpConnection) Gets the feature string for the MFF command. Declaration public static string FeatureStatus(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The connection. Returns Type Description String The feature string. | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.PwdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.PwdCommandHandler.html",
    "title": "Class PwdCommandHandler | FTP Server documentation",
    "keywords": "Class PwdCommandHandler Implements the PWD command. Inheritance Object FtpCommandHandler PwdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PWD\", false, true)] [FtpCommandHandler(\"XPWD\", false, true)] public class PwdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.UnixClaimsFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.UnixClaimsFtpUser.html",
    "title": "Class UnixClaimsFtpUser | FTP Server documentation",
    "keywords": "Class UnixClaimsFtpUser A IUnixUser implementation that uses the data from a ClaimsPrincipal . Inheritance Object ClaimsFtpUser UnixClaimsFtpUser Implements IUnixUser IFtpUser Inherited Members ClaimsFtpUser.Name ClaimsFtpUser.IsInGroup(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Compatibility Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Will only be used for compatibility purposes.\")] public class UnixClaimsFtpUser : ClaimsFtpUser, IUnixUser, IFtpUser Constructors | Improve this Doc View Source UnixClaimsFtpUser(ClaimsPrincipal) Initializes a new instance of the UnixClaimsFtpUser class. Declaration public UnixClaimsFtpUser(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The principal to initialize this object with. Properties | Improve this Doc View Source GroupId Declaration public long GroupId { get; } Property Value Type Description Int64 | Improve this Doc View Source HomePath Declaration public string? HomePath { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source UserId Declaration public long UserId { get; } Property Value Type Description Int64 Implements IUnixUser IFtpUser Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.Authorization.Actions.FillConnectionFileSystemDataAction.html": {
    "href": "api/FubarDev.FtpServer.Authorization.Actions.FillConnectionFileSystemDataAction.html",
    "title": "Class FillConnectionFileSystemDataAction | FTP Server documentation",
    "keywords": "Class FillConnectionFileSystemDataAction Fills the connection data upon successful authorization. Inheritance Object FillConnectionFileSystemDataAction Implements IAuthorizationAction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization.Actions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FillConnectionFileSystemDataAction : IAuthorizationAction Constructors | Improve this Doc View Source FillConnectionFileSystemDataAction(IFtpConnectionAccessor, IFileSystemClassFactory) Initializes a new instance of the FillConnectionFileSystemDataAction class. Declaration public FillConnectionFileSystemDataAction(IFtpConnectionAccessor ftpConnectionAccessor, IFileSystemClassFactory fileSystemFactory) Parameters Type Name Description IFtpConnectionAccessor ftpConnectionAccessor The FTP connection accessor. IFileSystemClassFactory fileSystemFactory The file system factory. Properties | Improve this Doc View Source Level Declaration public int Level { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AuthorizedAsync(IAccountInformation, CancellationToken) Declaration public Task AuthorizedAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation CancellationToken cancellationToken Returns Type Description Task Implements IAuthorizationAction"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.IBackgroundTransfer.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.IBackgroundTransfer.html",
    "title": "Interface IBackgroundTransfer | FTP Server documentation",
    "keywords": "Interface IBackgroundTransfer Interface for background data transfers. Inherited Members IDisposable.Dispose() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IBackgroundTransfer : IDisposable Properties | Improve this Doc View Source TransferId Gets the ID of the background data transfer. Declaration string TransferId { get; } Property Value Type Description String Methods | Improve this Doc View Source Start(IProgress<Int64>, CancellationToken) Starts the background data transfer. Declaration Task Start(IProgress<long> progress, CancellationToken cancellationToken) Parameters Type Name Description IProgress < Int64 > progress Used to send the progress to the caller. CancellationToken cancellationToken The cancellation token used to abort the background data transfer. Returns Type Description Task The task used to transfer the data in the background."
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.ClaimsFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.ClaimsFtpUser.html",
    "title": "Class ClaimsFtpUser | FTP Server documentation",
    "keywords": "Class ClaimsFtpUser Wrapper for ClaimsPrincipal to make it accessible via IFtpUser . Inheritance Object ClaimsFtpUser AnonymousClaimsFtpUser UnixClaimsFtpUser Implements IFtpUser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Compatibility Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Will only be used for compatibility purposes.\")] public class ClaimsFtpUser : IFtpUser Constructors | Improve this Doc View Source ClaimsFtpUser(ClaimsPrincipal) Initializes a new instance of the ClaimsFtpUser class. Declaration public ClaimsFtpUser(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The underlying claims principal. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source IsInGroup(String) Declaration public bool IsInGroup(string groupName) Parameters Type Name Description String groupName Returns Type Description Boolean Implements IFtpUser Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.CommandHandlers.SystCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.SystCommandHandler.html",
    "title": "Class SystCommandHandler | FTP Server documentation",
    "keywords": "Class SystCommandHandler Implements the SYST command. Inheritance Object FtpCommandHandler SystCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"SYST\", false, false)] public class SystCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source SystCommandHandler(IOptions<SystCommandOptions>) Initializes a new instance of the SystCommandHandler class. Declaration public SystCommandHandler(IOptions<SystCommandOptions> options) Parameters Type Name Description IOptions < SystCommandOptions > options Options for the SYST command. Properties | Improve this Doc View Source IsLoginRequired Declaration [Obsolete(\"Information about an FTP command handler can be queried through the IFtpCommandHandlerProvider service.\")] public override bool IsLoginRequired { get; } Property Value Type Description Boolean Overrides FtpCommandHandler.IsLoginRequired Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileEntry.html",
    "title": "Class DotNetFileEntry | FTP Server documentation",
    "keywords": "Class DotNetFileEntry A IUnixFileEntry implementation for the standard .NET file system functionality. Inheritance Object DotNetFileSystemEntry DotNetFileEntry Implements IUnixFileEntry IUnixFileSystemEntry IUnixOwner Inherited Members DotNetFileSystemEntry.Info DotNetFileSystemEntry.Name DotNetFileSystemEntry.Permissions DotNetFileSystemEntry.LastWriteTime DotNetFileSystemEntry.CreatedTime DotNetFileSystemEntry.NumberOfLinks DotNetFileSystemEntry.Owner DotNetFileSystemEntry.Group Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public class DotNetFileEntry : DotNetFileSystemEntry, IUnixFileEntry, IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source DotNetFileEntry(FileInfo) Initializes a new instance of the DotNetFileEntry class. Declaration public DotNetFileEntry(FileInfo info) Parameters Type Name Description FileInfo info The FileInfo to extract the information from. Properties | Improve this Doc View Source FileInfo Gets the file information. Declaration public FileInfo FileInfo { get; } Property Value Type Description FileInfo | Improve this Doc View Source Size Declaration public long Size { get; } Property Value Type Description Int64 Implements IUnixFileEntry IUnixFileSystemEntry IUnixOwner"
  },
  "api/FubarDev.FtpServer.ServerCommands.IServerCommandHandler-1.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.IServerCommandHandler-1.html",
    "title": "Interface IServerCommandHandler<TCommand> | FTP Server documentation",
    "keywords": "Interface IServerCommandHandler<TCommand> Interface to be implemented by a server command handler. Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IServerCommandHandler<TCommand> where TCommand : class, IServerCommand Type Parameters Name Description TCommand The server command type. Methods | Improve this Doc View Source ExecuteAsync(TCommand, CancellationToken) Executes the server command. Declaration Task ExecuteAsync(TCommand command, CancellationToken cancellationToken) Parameters Type Name Description TCommand command The command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.AccountManagement.IAnonymousFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.IAnonymousFtpUser.html",
    "title": "Interface IAnonymousFtpUser | FTP Server documentation",
    "keywords": "Interface IAnonymousFtpUser The anonymous FTP interface. Inherited Members IFtpUser.Name IFtpUser.IsInGroup(String) Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use ClaimsPrincipal\")] public interface IAnonymousFtpUser : IFtpUser Remarks The password is interpreted as e-mail. Properties | Improve this Doc View Source Email Gets the e-mail of the anonymous user which was given as password. Declaration string? Email { get; } Property Value Type Description Nullable < String > Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.CommandHandlers.ModeCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.ModeCommandHandler.html",
    "title": "Class ModeCommandHandler | FTP Server documentation",
    "keywords": "Class ModeCommandHandler Implements the MODE command. Inheritance Object FtpCommandHandler ModeCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MODE\", false, true)] public class ModeCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.SiteCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.SiteCommandHandler.html",
    "title": "Class SiteCommandHandler | FTP Server documentation",
    "keywords": "Class SiteCommandHandler The SITE command handler. Inheritance Object FtpCommandHandler SiteCommandHandler Implements IFtpCommandHandlerExtensionHost IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"SITE\", false, true)] public class SiteCommandHandler : FtpCommandHandler, IFtpCommandHandlerExtensionHost, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Properties | Improve this Doc View Source Extensions Declaration public IDictionary<string, IFtpCommandHandlerExtension> Extensions { get; set; } Property Value Type Description IDictionary < String , IFtpCommandHandlerExtension > Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtensionHost IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.BlockAnonymousValidation.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.BlockAnonymousValidation.html",
    "title": "Class BlockAnonymousValidation | FTP Server documentation",
    "keywords": "Class BlockAnonymousValidation Disallow anonymous logins. Inheritance Object BlockAnonymousValidation Implements IAnonymousPasswordValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Anonymous Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class BlockAnonymousValidation : IAnonymousPasswordValidator Methods | Improve this Doc View Source IsValid(String) Declaration public bool IsValid(string password) Parameters Type Name Description String password Returns Type Description Boolean Implements IAnonymousPasswordValidator"
  },
  "api/FubarDev.FtpServer.CommandHandlers.PbszCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.PbszCommandHandler.html",
    "title": "Class PbszCommandHandler | FTP Server documentation",
    "keywords": "Class PbszCommandHandler The PBSZ command handler. Inheritance Object FtpCommandHandler PbszCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PBSZ\", false, false)] public class PbszCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.SizeCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.SizeCommandHandler.html",
    "title": "Class SizeCommandHandler | FTP Server documentation",
    "keywords": "Class SizeCommandHandler Implements the SIZE command. Inheritance Object FtpCommandHandler SizeCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"SIZE\", false, true)] [FtpFeatureText(\"SIZE\")] public class SizeCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Commands.DefaultFtpCommandDispatcher.html": {
    "href": "api/FubarDev.FtpServer.Commands.DefaultFtpCommandDispatcher.html",
    "title": "Class DefaultFtpCommandDispatcher | FTP Server documentation",
    "keywords": "Class DefaultFtpCommandDispatcher Default implementation of IFtpCommandDispatcher . Inheritance Object DefaultFtpCommandDispatcher Implements IFtpCommandDispatcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class DefaultFtpCommandDispatcher : IFtpCommandDispatcher Constructors | Improve this Doc View Source DefaultFtpCommandDispatcher(IFtpConnection, IFtpLoginStateMachine, IFtpCommandActivator, IEnumerable<IFtpCommandMiddleware>, Nullable<ILogger<DefaultFtpCommandDispatcher>>) Initializes a new instance of the DefaultFtpCommandDispatcher class. Declaration public DefaultFtpCommandDispatcher(IFtpConnection connection, IFtpLoginStateMachine loginStateMachine, IFtpCommandActivator commandActivator, IEnumerable<IFtpCommandMiddleware> middlewareObjects, ILogger<DefaultFtpCommandDispatcher>? logger = default(ILogger<DefaultFtpCommandDispatcher>? )) Parameters Type Name Description IFtpConnection connection The FTP connection. IFtpLoginStateMachine loginStateMachine The login state machine. IFtpCommandActivator commandActivator The command activator. IEnumerable < IFtpCommandMiddleware > middlewareObjects The list of middleware objects. Nullable < ILogger < DefaultFtpCommandDispatcher >> logger The logger. Methods | Improve this Doc View Source DispatchAsync(FtpContext, CancellationToken) Declaration public Task DispatchAsync(FtpContext context, CancellationToken cancellationToken) Parameters Type Name Description FtpContext context CancellationToken cancellationToken Returns Type Description Task Implements IFtpCommandDispatcher"
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerInformation.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerInformation.html",
    "title": "Interface IFtpCommandHandlerInformation | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerInformation Information about an FTP command handler. Inherited Members IFtpCommandInformation.Name IFtpCommandInformation.IsLoginRequired IFtpCommandInformation.IsAbortable Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerInformation : IFtpCommandInformation Properties | Improve this Doc View Source IsExtensible Gets a value indicating whether this command is extensible. Declaration bool IsExtensible { get; } Property Value Type Description Boolean | Improve this Doc View Source Type Gets the type of the FTP command handler. Declaration Type Type { get; } Property Value Type Description Type"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AuthCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AuthCommandHandler.html",
    "title": "Class AuthCommandHandler | FTP Server documentation",
    "keywords": "Class AuthCommandHandler The AUTH command handler. Inheritance Object FtpCommandHandler AuthCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"AUTH\", false, false)] public class AuthCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MdtmCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MdtmCommandHandler.html",
    "title": "Class MdtmCommandHandler | FTP Server documentation",
    "keywords": "Class MdtmCommandHandler Implements the MDTM command. Inheritance Object FtpCommandHandler MdtmCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MDTM\", false, true)] [FtpFeatureText(\"MDTM\")] public class MdtmCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.ProtCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.ProtCommandHandler.html",
    "title": "Class ProtCommandHandler | FTP Server documentation",
    "keywords": "Class ProtCommandHandler The PROT command handler. Inheritance Object FtpCommandHandler ProtCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PROT\", false, false)] public class ProtCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.IPausableFtpService.html": {
    "href": "api/FubarDev.FtpServer.IPausableFtpService.html",
    "title": "Interface IPausableFtpService | FTP Server documentation",
    "keywords": "Interface IPausableFtpService Interface for an FTP service that can be paused. Inherited Members IFtpService.StartAsync(CancellationToken) IFtpService.StopAsync(CancellationToken) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IPausableFtpService : IFtpService Properties | Improve this Doc View Source Status Gets the current status. Declaration FtpServiceStatus Status { get; } Property Value Type Description FtpServiceStatus Methods | Improve this Doc View Source ContinueAsync(CancellationToken) Continues the FTP service. Declaration Task ContinueAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source PauseAsync(CancellationToken) Pauses the FTP service. Declaration Task PauseAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.ListenerStartedEventArgs.html": {
    "href": "api/FubarDev.FtpServer.ListenerStartedEventArgs.html",
    "title": "Class ListenerStartedEventArgs | FTP Server documentation",
    "keywords": "Class ListenerStartedEventArgs Event arguments for a started listener. Inheritance Object EventArgs ListenerStartedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ListenerStartedEventArgs : EventArgs Constructors | Improve this Doc View Source ListenerStartedEventArgs(Int32) Initializes a new instance of the ListenerStartedEventArgs class. Declaration public ListenerStartedEventArgs(int port) Parameters Type Name Description Int32 port The port used by the listener. Properties | Improve this Doc View Source Port Gets the port that's used by the listener. Declaration public int Port { get; } Property Value Type Description Int32"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MfctCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MfctCommandHandler.html",
    "title": "Class MfctCommandHandler | FTP Server documentation",
    "keywords": "Class MfctCommandHandler Implements the MFCT command. Inheritance Object FtpCommandHandler MfctCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MFCT\", false, true)] [FtpFeatureText(\"MFCT\")] public class MfctCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.ReinCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.ReinCommandHandler.html",
    "title": "Class ReinCommandHandler | FTP Server documentation",
    "keywords": "Class ReinCommandHandler Implementation of the REIN command. Inheritance Object FtpCommandHandler ReinCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"REIN\", false, false)] public class ReinCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source ReinCommandHandler(IOptions<PortCommandOptions>, IFtpServerMessages, Nullable<ILogger<ReinCommandHandler>>) Initializes a new instance of the ReinCommandHandler class. Declaration public ReinCommandHandler(IOptions<PortCommandOptions> portOptions, IFtpServerMessages serverMessages, ILogger<ReinCommandHandler>? logger = default(ILogger<ReinCommandHandler>? )) Parameters Type Name Description IOptions < PortCommandOptions > portOptions The PORT command options. IFtpServerMessages serverMessages The FTP server messages. Nullable < ILogger < ReinCommandHandler >> logger The logger. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerInstanceInformation.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerInstanceInformation.html",
    "title": "Interface IFtpCommandHandlerInstanceInformation | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerInstanceInformation Interface to get the instance for a command handler created through dependency injection. Inherited Members IFtpCommandHandlerInformation.Type IFtpCommandHandlerInformation.IsExtensible IFtpCommandInformation.Name IFtpCommandInformation.IsLoginRequired IFtpCommandInformation.IsAbortable Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete] public interface IFtpCommandHandlerInstanceInformation : IFtpCommandHandlerInformation, IFtpCommandInformation Properties | Improve this Doc View Source Instance Gets the FTP command handler instance. Declaration IFtpCommandHandler Instance { get; } Property Value Type Description IFtpCommandHandler"
  },
  "api/FubarDev.FtpServer.Events.FtpConnectionDataTransferStartedEvent.html": {
    "href": "api/FubarDev.FtpServer.Events.FtpConnectionDataTransferStartedEvent.html",
    "title": "Class FtpConnectionDataTransferStartedEvent | FTP Server documentation",
    "keywords": "Class FtpConnectionDataTransferStartedEvent This event object gets sent when a data transfer was started. Inheritance Object FtpConnectionDataTransferStartedEvent Implements IFtpConnectionEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Events Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpConnectionDataTransferStartedEvent : IFtpConnectionEvent Constructors | Improve this Doc View Source FtpConnectionDataTransferStartedEvent(String) Initializes a new instance of the FtpConnectionDataTransferStartedEvent class. Declaration public FtpConnectionDataTransferStartedEvent(string transferId) Parameters Type Name Description String transferId The transfer ID. Properties | Improve this Doc View Source TransferId Gets the transfer ID. Declaration public string TransferId { get; } Property Value Type Description String Implements IFtpConnectionEvent"
  },
  "api/FubarDev.FtpServer.Events.FtpConnectionDataTransferStoppedEvent.html": {
    "href": "api/FubarDev.FtpServer.Events.FtpConnectionDataTransferStoppedEvent.html",
    "title": "Class FtpConnectionDataTransferStoppedEvent | FTP Server documentation",
    "keywords": "Class FtpConnectionDataTransferStoppedEvent This event object gets sent when a data transfer was stopped. Inheritance Object FtpConnectionDataTransferStoppedEvent Implements IFtpConnectionEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Events Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpConnectionDataTransferStoppedEvent : IFtpConnectionEvent Constructors | Improve this Doc View Source FtpConnectionDataTransferStoppedEvent(String) Initializes a new instance of the FtpConnectionDataTransferStoppedEvent class. Declaration public FtpConnectionDataTransferStoppedEvent(string transferId) Parameters Type Name Description String transferId The transfer ID. Properties | Improve this Doc View Source TransferId Gets the transfer ID. Declaration public string TransferId { get; } Property Value Type Description String Implements IFtpConnectionEvent"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemEntry.html",
    "title": "Class DotNetFileSystemEntry | FTP Server documentation",
    "keywords": "Class DotNetFileSystemEntry Base class for System.IO based file system entries. Inheritance Object DotNetFileSystemEntry DotNetDirectoryEntry DotNetFileEntry Implements IUnixFileSystemEntry IUnixOwner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public abstract class DotNetFileSystemEntry : IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source DotNetFileSystemEntry(FileSystemInfo) Initializes a new instance of the DotNetFileSystemEntry class. Declaration protected DotNetFileSystemEntry(FileSystemInfo fsInfo) Parameters Type Name Description FileSystemInfo fsInfo The FileSystemInfo to extract the information from. Properties | Improve this Doc View Source CreatedTime Declaration public DateTimeOffset? CreatedTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Group Declaration public string Group { get; } Property Value Type Description String | Improve this Doc View Source Info Gets the underlying DirectoryInfo . Declaration public FileSystemInfo Info { get; } Property Value Type Description FileSystemInfo | Improve this Doc View Source LastWriteTime Declaration public DateTimeOffset? LastWriteTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source NumberOfLinks Declaration public long NumberOfLinks { get; } Property Value Type Description Int64 | Improve this Doc View Source Owner Declaration public string Owner { get; } Property Value Type Description String | Improve this Doc View Source Permissions Declaration public IUnixPermissions Permissions { get; } Property Value Type Description IUnixPermissions Implements IUnixFileSystemEntry IUnixOwner"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AppeCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AppeCommandHandler.html",
    "title": "Class AppeCommandHandler | FTP Server documentation",
    "keywords": "Class AppeCommandHandler Implements the APPE command. Inheritance Object FtpCommandHandler AppeCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"APPE\", true, true)] public class AppeCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source AppeCommandHandler(IBackgroundTransferWorker) Initializes a new instance of the AppeCommandHandler class. Declaration public AppeCommandHandler(IBackgroundTransferWorker backgroundTransferWorker) Parameters Type Name Description IBackgroundTransferWorker backgroundTransferWorker The background transfer worker service. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.ListCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.ListCommandHandler.html",
    "title": "Class ListCommandHandler | FTP Server documentation",
    "keywords": "Class ListCommandHandler Implements the LIST and NLST commands. Inheritance Object FtpCommandHandler ListCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"LIST\", false, true)] [FtpCommandHandler(\"NLST\", false, true)] [FtpCommandHandler(\"LS\", false, true)] public class ListCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source ListCommandHandler(Nullable<ILogger<ListCommandHandler>>) Initializes a new instance of the ListCommandHandler class. Declaration public ListCommandHandler(ILogger<ListCommandHandler>? logger = default(ILogger<ListCommandHandler>? )) Parameters Type Name Description Nullable < ILogger < ListCommandHandler >> logger The logger. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.RntoCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.RntoCommandHandler.html",
    "title": "Class RntoCommandHandler | FTP Server documentation",
    "keywords": "Class RntoCommandHandler Implements the RNTO command. Inheritance Object FtpCommandHandler RntoCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"RNTO\", true, true)] public class RntoCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.IFtpCommandHandlerExtensionHost.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.IFtpCommandHandlerExtensionHost.html",
    "title": "Interface IFtpCommandHandlerExtensionHost | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtensionHost Interface indicating that a command handler can act as an extension host. Inherited Members IFtpCommandHandler.IsLoginRequired IFtpCommandHandler.IsAbortable IFtpCommandHandler.GetExtensions() IFtpCommandBase.Names IFtpCommandBase.Process(FtpCommand, CancellationToken) IFeatureHost.GetSupportedFeatures(IFtpConnection) Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax public interface IFtpCommandHandlerExtensionHost : IFtpCommandHandler, IFtpCommandBase, IFeatureHost Properties | Improve this Doc View Source Extensions Gets or sets the extensions hosted by the FtpCommandHandler . Declaration IDictionary<string, IFtpCommandHandlerExtension> Extensions { get; set; } Property Value Type Description IDictionary < String , IFtpCommandHandlerExtension >"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AdatCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AdatCommandHandler.html",
    "title": "Class AdatCommandHandler | FTP Server documentation",
    "keywords": "Class AdatCommandHandler The ADAT command handler. Inheritance Object FtpCommandHandler AdatCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"ADAT\", false, false)] public class AdatCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.LangCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.LangCommandHandler.html",
    "title": "Class LangCommandHandler | FTP Server documentation",
    "keywords": "Class LangCommandHandler Implements the LANG command. Inheritance Object FtpCommandHandler LangCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"LANG\", false, false)] [FtpFeatureFunction(\"CreateFeatureString\")] public class LangCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source CreateFeatureString(IFtpConnection) Build a string to be returned by the FEAT command handler. Declaration public static string CreateFeatureString(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The FTP connection. Returns Type Description String The string to be returned. | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.ConnectionEventArgs.html": {
    "href": "api/FubarDev.FtpServer.ConnectionEventArgs.html",
    "title": "Class ConnectionEventArgs | FTP Server documentation",
    "keywords": "Class ConnectionEventArgs Event arguments for a connection event. Inheritance Object EventArgs ConnectionEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ConnectionEventArgs : EventArgs Constructors | Improve this Doc View Source ConnectionEventArgs(IFtpConnection) Initializes a new instance of the ConnectionEventArgs class. Declaration public ConnectionEventArgs(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The connection of the event. Properties | Improve this Doc View Source AsyncInitFunctions Gets the list of async init functions. Declaration public IEnumerable<ConnectionInitAsyncDelegate> AsyncInitFunctions { get; } Property Value Type Description IEnumerable < ConnectionInitAsyncDelegate > | Improve this Doc View Source Connection Gets the connection for this event. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection Methods | Improve this Doc View Source AddAsyncInit(ConnectionInitAsyncDelegate) Adds a new async init function. Declaration public void AddAsyncInit(ConnectionInitAsyncDelegate asyncInitFunc) Parameters Type Name Description ConnectionInitAsyncDelegate asyncInitFunc The async init function to add."
  },
  "api/FubarDev.FtpServer.DataConnection.PromiscuousPasvDataConnectionValidator.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.PromiscuousPasvDataConnectionValidator.html",
    "title": "Class PromiscuousPasvDataConnectionValidator | FTP Server documentation",
    "keywords": "Class PromiscuousPasvDataConnectionValidator Validates that we don't have a promiscuous passive data connection. Inheritance Object PromiscuousPasvDataConnectionValidator Implements IFtpDataConnectionValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.DataConnection Assembly : FubarDev.FtpServer.Commands.dll Syntax public class PromiscuousPasvDataConnectionValidator : IFtpDataConnectionValidator Constructors | Improve this Doc View Source PromiscuousPasvDataConnectionValidator(IOptions<PasvCommandOptions>, Nullable<ILogger<PromiscuousPasvDataConnectionValidator>>) Initializes a new instance of the PromiscuousPasvDataConnectionValidator class. Declaration public PromiscuousPasvDataConnectionValidator(IOptions<PasvCommandOptions> options, ILogger<PromiscuousPasvDataConnectionValidator>? logger = default(ILogger<PromiscuousPasvDataConnectionValidator>? )) Parameters Type Name Description IOptions < PasvCommandOptions > options The PASV command handler options. Nullable < ILogger < PromiscuousPasvDataConnectionValidator >> logger The logger. Methods | Improve this Doc View Source ValidateAsync(IFtpConnection, IFtpDataConnectionFeature, IFtpDataConnection, CancellationToken) Declaration public Task<ValidationResult? > ValidateAsync(IFtpConnection connection, IFtpDataConnectionFeature dataConnectionFeature, IFtpDataConnection dataConnection, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection IFtpDataConnectionFeature dataConnectionFeature IFtpDataConnection dataConnection CancellationToken cancellationToken Returns Type Description Task < Nullable < ValidationResult >> Implements IFtpDataConnectionValidator"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemProvider.html",
    "title": "Class DotNetFileSystemProvider | FTP Server documentation",
    "keywords": "Class DotNetFileSystemProvider A IFileSystemClassFactory implementation that uses the standard .NET functionality to provide file system access. Inheritance Object DotNetFileSystemProvider Implements IFileSystemClassFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public class DotNetFileSystemProvider : IFileSystemClassFactory Constructors | Improve this Doc View Source DotNetFileSystemProvider(IOptions<DotNetFileSystemOptions>, IAccountDirectoryQuery, Nullable<ILogger<DotNetFileSystemProvider>>) Initializes a new instance of the DotNetFileSystemProvider class. Declaration public DotNetFileSystemProvider(IOptions<DotNetFileSystemOptions> options, IAccountDirectoryQuery accountDirectoryQuery, ILogger<DotNetFileSystemProvider>? logger = default(ILogger<DotNetFileSystemProvider>? )) Parameters Type Name Description IOptions < DotNetFileSystemOptions > options The file system options. IAccountDirectoryQuery accountDirectoryQuery Interface to query account directories. Nullable < ILogger < DotNetFileSystemProvider >> logger The logger. Methods | Improve this Doc View Source Create(IAccountInformation) Declaration public Task<IUnixFileSystem> Create(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description Task < IUnixFileSystem > Implements IFileSystemClassFactory"
  },
  "api/FubarDev.FtpServer.ListFormatters.ShortListFormatter.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.ShortListFormatter.html",
    "title": "Class ShortListFormatter | FTP Server documentation",
    "keywords": "Class ShortListFormatter The IListFormatter for the short directory listing format (name only). Inheritance Object ShortListFormatter Implements IListFormatter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ShortListFormatter : IListFormatter Methods | Improve this Doc View Source Format(IUnixFileSystemEntry, Nullable<String>) Declaration public string Format(IUnixFileSystemEntry entry, string? name) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < String > name Returns Type Description String Implements IListFormatter"
  },
  "api/FubarDev.FtpServer.Events.FtpConnectionCommandReceivedEvent.html": {
    "href": "api/FubarDev.FtpServer.Events.FtpConnectionCommandReceivedEvent.html",
    "title": "Class FtpConnectionCommandReceivedEvent | FTP Server documentation",
    "keywords": "Class FtpConnectionCommandReceivedEvent This event object gets sent when a command was received. Inheritance Object FtpConnectionCommandReceivedEvent Implements IFtpConnectionEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Events Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpConnectionCommandReceivedEvent : IFtpConnectionEvent Constructors | Improve this Doc View Source FtpConnectionCommandReceivedEvent(FtpCommand) Initializes a new instance of the FtpConnectionCommandReceivedEvent class. Declaration public FtpConnectionCommandReceivedEvent(FtpCommand command) Parameters Type Name Description FtpCommand command The received FTP command. Properties | Improve this Doc View Source Command Gets the received FTP command. Declaration public FtpCommand Command { get; } Property Value Type Description FtpCommand Implements IFtpConnectionEvent"
  },
  "api/FubarDev.FtpServer.Commands.FtpCommandHandlerAttribute.html": {
    "href": "api/FubarDev.FtpServer.Commands.FtpCommandHandlerAttribute.html",
    "title": "Class FtpCommandHandlerAttribute | FTP Server documentation",
    "keywords": "Class FtpCommandHandlerAttribute Marks a class as being an FTP command handler. Inheritance Object Attribute FtpCommandHandlerAttribute Implements IFtpCommandInformation Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class FtpCommandHandlerAttribute : Attribute, IFtpCommandInformation Remarks The class must implement IFtpCommandHandler . Constructors | Improve this Doc View Source FtpCommandHandlerAttribute(String, Boolean, Boolean) Initializes a new instance of the FtpCommandHandlerAttribute class. Declaration public FtpCommandHandlerAttribute(string name, bool isAbortable = false, bool isLoginRequired = true) Parameters Type Name Description String name The name of the FTP command this handler accepts. Boolean isAbortable Indicates whether a login is required to execute this command. Boolean isLoginRequired Indicates whether this command is abortable. Properties | Improve this Doc View Source IsAbortable Declaration public bool IsAbortable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLoginRequired Declaration public bool IsLoginRequired { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements IFtpCommandInformation"
  },
  "api/FubarDev.FtpServer.Authorization.Actions.FillConnectionAccountDataAction.html": {
    "href": "api/FubarDev.FtpServer.Authorization.Actions.FillConnectionAccountDataAction.html",
    "title": "Class FillConnectionAccountDataAction | FTP Server documentation",
    "keywords": "Class FillConnectionAccountDataAction Fills the connection data upon successful authorization. Inheritance Object FillConnectionAccountDataAction Implements IAuthorizationAction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization.Actions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FillConnectionAccountDataAction : IAuthorizationAction Constructors | Improve this Doc View Source FillConnectionAccountDataAction(IFtpConnectionAccessor) Initializes a new instance of the FillConnectionAccountDataAction class. Declaration public FillConnectionAccountDataAction(IFtpConnectionAccessor ftpConnectionAccessor) Parameters Type Name Description IFtpConnectionAccessor ftpConnectionAccessor The FTP connection accessor. Properties | Improve this Doc View Source Level Declaration public int Level { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AuthorizedAsync(IAccountInformation, CancellationToken) Declaration public Task AuthorizedAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation CancellationToken cancellationToken Returns Type Description Task Implements IAuthorizationAction"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.TempFileTemporaryData.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.TempFileTemporaryData.html",
    "title": "Class TempFileTemporaryData | FTP Server documentation",
    "keywords": "Class TempFileTemporaryData Creates a temporary file to store the data. Inheritance Object TempFileTemporaryData Implements ITemporaryData IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class TempFileTemporaryData : ITemporaryData, IDisposable Constructors | Improve this Doc View Source TempFileTemporaryData() Initializes a new instance of the TempFileTemporaryData class. Declaration public TempFileTemporaryData() Properties | Improve this Doc View Source Size Declaration public long Size { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source FillAsync(Stream, CancellationToken) Fills the temporary file with the data from the input stream. Declaration public Task FillAsync(Stream input, CancellationToken cancellationToken) Parameters Type Name Description Stream input The input stream. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A Task representing the asynchronous operation. | Improve this Doc View Source OpenAsync() Declaration public Task<Stream> OpenAsync() Returns Type Description Task < Stream > Implements ITemporaryData System.IDisposable"
  },
  "api/FubarDev.FtpServer.CommandExtensions.SiteBlstCommandExtension.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.SiteBlstCommandExtension.html",
    "title": "Class SiteBlstCommandExtension | FTP Server documentation",
    "keywords": "Class SiteBlstCommandExtension The implementation of the SITE BLST command. Inheritance Object FtpCommandHandlerExtension SiteBlstCommandExtension Implements IFtpCommandHandlerExtension IFtpCommandBase Inherited Members FtpCommandHandlerExtension.Names FtpCommandHandlerExtension.ExtensionFor FtpCommandHandlerExtension.CommandContext FtpCommandHandlerExtension.FtpContext FtpCommandHandlerExtension.Connection FtpCommandHandlerExtension.Data FtpCommandHandlerExtension.T(String) FtpCommandHandlerExtension.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandlerExtension(\"BLST\", \"SITE\", true)] [FtpFeatureText(\"SITE BLST\")] public class SiteBlstCommandExtension : FtpCommandHandlerExtension, IFtpCommandHandlerExtension, IFtpCommandBase Constructors | Improve this Doc View Source SiteBlstCommandExtension(IBackgroundTransferWorker, Nullable<ILogger<SiteBlstCommandExtension>>) Initializes a new instance of the SiteBlstCommandExtension class. Declaration public SiteBlstCommandExtension(IBackgroundTransferWorker backgroundTransferWorker, ILogger<SiteBlstCommandExtension>? logger = default(ILogger<SiteBlstCommandExtension>? )) Parameters Type Name Description IBackgroundTransferWorker backgroundTransferWorker The background transfer worker service. Nullable < ILogger < SiteBlstCommandExtension >> logger The logger. Properties | Improve this Doc View Source IsLoginRequired Declaration [Obsolete(\"Use the FtpCommandHandlerExtension attribute instead.\")] public override bool? IsLoginRequired { get; } Property Value Type Description Nullable < Boolean > Overrides FtpCommandHandlerExtension.IsLoginRequired Methods | Improve this Doc View Source InitializeConnectionData() Declaration public override void InitializeConnectionData() Overrides FtpCommandHandlerExtension.InitializeConnectionData() | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandlerExtension.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtension IFtpCommandBase"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryDirectoryEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryDirectoryEntry.html",
    "title": "Class InMemoryDirectoryEntry | FTP Server documentation",
    "keywords": "Class InMemoryDirectoryEntry The im-memory directory entry. Inheritance Object InMemoryFileSystemEntry InMemoryDirectoryEntry Implements IUnixDirectoryEntry IUnixFileSystemEntry IUnixOwner Inherited Members InMemoryFileSystemEntry.Name InMemoryFileSystemEntry.Owner InMemoryFileSystemEntry.Group InMemoryFileSystemEntry.Permissions InMemoryFileSystemEntry.LastWriteTime InMemoryFileSystemEntry.CreatedTime InMemoryFileSystemEntry.NumberOfLinks InMemoryFileSystemEntry.Parent InMemoryFileSystemEntry.WithOwner(IFtpUser) InMemoryFileSystemEntry.WithOwner(ClaimsPrincipal) InMemoryFileSystemEntry.SetLastWriteTime(DateTimeOffset) InMemoryFileSystemEntry.SetCreateTime(DateTimeOffset) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public class InMemoryDirectoryEntry : InMemoryFileSystemEntry, IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source InMemoryDirectoryEntry(Nullable<InMemoryDirectoryEntry>, String, IDictionary<String, IUnixFileSystemEntry>) Initializes a new instance of the InMemoryDirectoryEntry class. Declaration public InMemoryDirectoryEntry(InMemoryDirectoryEntry? parent, string name, IDictionary<string, IUnixFileSystemEntry> children) Parameters Type Name Description Nullable < InMemoryDirectoryEntry > parent The parent entry. String name The name of this entry. IDictionary < String , IUnixFileSystemEntry > children The children of this directory entry. Properties | Improve this Doc View Source Children Gets the children of this directory entry. Declaration public IDictionary<string, IUnixFileSystemEntry> Children { get; } Property Value Type Description IDictionary < String , IUnixFileSystemEntry > | Improve this Doc View Source IsDeletable Declaration public bool IsDeletable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRoot Declaration public bool IsRoot { get; } Property Value Type Description Boolean Implements IUnixDirectoryEntry IUnixFileSystemEntry IUnixOwner"
  },
  "api/FubarDev.FtpServer.ServerCommands.SendResponseServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.SendResponseServerCommand.html",
    "title": "Class SendResponseServerCommand | FTP Server documentation",
    "keywords": "Class SendResponseServerCommand Server command for sending a response to the client. Inheritance Object SendResponseServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SendResponseServerCommand : IServerCommand Constructors | Improve this Doc View Source SendResponseServerCommand(IFtpResponse) Initializes a new instance of the SendResponseServerCommand class. Declaration public SendResponseServerCommand(IFtpResponse response) Parameters Type Name Description IFtpResponse response The response to send. Properties | Improve this Doc View Source Response Gets the response to send. Declaration public IFtpResponse Response { get; } Property Value Type Description IFtpResponse Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.GenericAccountDirectories.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.GenericAccountDirectories.html",
    "title": "Class GenericAccountDirectories | FTP Server documentation",
    "keywords": "Class GenericAccountDirectories Default implementation of IAccountDirectories . Inheritance Object GenericAccountDirectories Implements IAccountDirectories Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Directories Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class GenericAccountDirectories : IAccountDirectories Constructors | Improve this Doc View Source GenericAccountDirectories(Nullable<String>, Nullable<String>) Initializes a new instance of the GenericAccountDirectories class. Declaration public GenericAccountDirectories(string? rootPath, string? homePath = default(string? )) Parameters Type Name Description Nullable < String > rootPath The root path relative to the file systems root path. Nullable < String > homePath The home directory of the user relative to the rootPath . Properties | Improve this Doc View Source HomePath Declaration public string? HomePath { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source RootPath Declaration public string? RootPath { get; } Property Value Type Description Nullable < String > Implements IAccountDirectories"
  },
  "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionCheckResult.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionCheckResult.html",
    "title": "Class FtpConnectionCheckResult | FTP Server documentation",
    "keywords": "Class FtpConnectionCheckResult Result object for a connection usability check. Inheritance Object FtpConnectionCheckResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class FtpConnectionCheckResult Constructors | Improve this Doc View Source FtpConnectionCheckResult(Boolean) Initializes a new instance of the FtpConnectionCheckResult class. Declaration public FtpConnectionCheckResult(bool isUsable) Parameters Type Name Description Boolean isUsable A value indicating whether the connection is usable. Properties | Improve this Doc View Source IsUsable Gets a value indicating whether the connection is usable. Declaration public bool IsUsable { get; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionCheckContext.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.FtpConnectionCheckContext.html",
    "title": "Class FtpConnectionCheckContext | FTP Server documentation",
    "keywords": "Class FtpConnectionCheckContext The context of the FTP connection check. Inheritance Object FtpConnectionCheckContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpConnectionCheckContext Constructors | Improve this Doc View Source FtpConnectionCheckContext(IFtpConnection) Initializes a new instance of the FtpConnectionCheckContext class. Declaration public FtpConnectionCheckContext(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The FTP connection. Properties | Improve this Doc View Source Connection Gets the FTP connection. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection"
  },
  "api/FubarDev.FtpServer.Commands.FtpCommandExecutionDelegate.html": {
    "href": "api/FubarDev.FtpServer.Commands.FtpCommandExecutionDelegate.html",
    "title": "Delegate FtpCommandExecutionDelegate | FTP Server documentation",
    "keywords": "Delegate FtpCommandExecutionDelegate The delegate for the next middleware for the current FTP command execution step. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task FtpCommandExecutionDelegate(FtpExecutionContext context); Parameters Type Name Description FtpExecutionContext context The context of the current FTP command. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.CommandExtensions.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.html",
    "title": "Namespace FubarDev.FtpServer.CommandExtensions | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.CommandExtensions Classes AssemblyFtpCommandHandlerExtensionScanner Scans the given assemblies for FTP command handlers. DefaultFtpCommandHandlerExtensionProvider Default implementation of IFtpCommandHandlerExtensionProvider . FtpCommandHandlerExtension The base class for FTP command extensions. FtpCommandHandlerExtensionAttribute Marks a class as being an FTP command handler extension. OptsMlstCommandExtension MLST extension for the OPTS command. OptsUtf8CommandExtension The implementation of the OPTS UTF8 command. ServiceFtpCommandHandlerExtensionScanner Uses DI to get the FTP command handlers. SiteBlstCommandExtension The implementation of the SITE BLST command. SiteUtimeCommandExtension The implementation of the SITE UTIME command. Interfaces IFtpCommandHandlerExtensionInformation Interface for an FTP command handler extension. IFtpCommandHandlerExtensionInstanceInformation Interface to get the instance for a command handler extension created through dependency injection. IFtpCommandHandlerExtensionProvider Provides information about all found FTP command handler extensions. IFtpCommandHandlerExtensionScanner Searches for FTP command handler extensions and returns information about it."
  },
  "api/FubarDev.FtpServer.CommandExtensions.AssemblyFtpCommandHandlerExtensionScanner.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.AssemblyFtpCommandHandlerExtensionScanner.html",
    "title": "Class AssemblyFtpCommandHandlerExtensionScanner | FTP Server documentation",
    "keywords": "Class AssemblyFtpCommandHandlerExtensionScanner Scans the given assemblies for FTP command handlers. Inheritance Object AssemblyFtpCommandHandlerExtensionScanner Implements IFtpCommandHandlerExtensionScanner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.dll Syntax public class AssemblyFtpCommandHandlerExtensionScanner : IFtpCommandHandlerExtensionScanner Constructors | Improve this Doc View Source AssemblyFtpCommandHandlerExtensionScanner(IFtpCommandHandlerProvider, Nullable<ILogger<AssemblyFtpCommandHandlerExtensionScanner>>, Assembly[]) Initializes a new instance of the AssemblyFtpCommandHandlerExtensionScanner class. Declaration public AssemblyFtpCommandHandlerExtensionScanner(IFtpCommandHandlerProvider commandHandlerProvider, ILogger<AssemblyFtpCommandHandlerExtensionScanner>? logger = default(ILogger<AssemblyFtpCommandHandlerExtensionScanner>? ), params Assembly[] assemblies) Parameters Type Name Description IFtpCommandHandlerProvider commandHandlerProvider The provider for the FTP commands. Nullable < ILogger < AssemblyFtpCommandHandlerExtensionScanner >> logger The logger. Assembly [] assemblies The assemblies to scan for FTP command handlers. Methods | Improve this Doc View Source Search() Search for FTP command handler extensions. Declaration public IEnumerable<IFtpCommandHandlerExtensionInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerExtensionInformation > The information about the found FTP command handler extensions. Implements IFtpCommandHandlerExtensionScanner"
  },
  "api/FubarDev.FtpServer.AuthTlsOptions.html": {
    "href": "api/FubarDev.FtpServer.AuthTlsOptions.html",
    "title": "Class AuthTlsOptions | FTP Server documentation",
    "keywords": "Class AuthTlsOptions Options for SSL/TLS connections. Inheritance Object AuthTlsOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class AuthTlsOptions Properties | Improve this Doc View Source ImplicitFtps Gets or sets a value indicating whether implicit FTPS is used. Declaration public bool ImplicitFtps { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ServerCertificate Gets or sets the server certificate. Declaration public X509Certificate2? ServerCertificate { get; set; } Property Value Type Description Nullable < X509Certificate2 >"
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement.Compatibility | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement.Compatibility Classes AnonymousClaimsFtpUser Implementation of IAnonymousFtpUser which uses ClaimsPrincipal under the hoods. ClaimsFtpUser Wrapper for ClaimsPrincipal to make it accessible via IFtpUser . ClaimsPrincipalExtensions Extension methods for ClaimsPrincipal . FtpUserExtensions Extension methods for IFtpUser . UnixClaimsFtpUser A IUnixUser implementation that uses the data from a ClaimsPrincipal ."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | FTP Server documentation",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions Extension methods for IServiceCollection ."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | FTP Server documentation",
    "keywords": "Class ServiceCollectionExtensions Extension methods for IServiceCollection . Inheritance Object ServiceCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : FubarDev.FtpServer.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddFtpServer(IServiceCollection, Action<IFtpServerBuilder>) Adds the FTP server services to the collection. Declaration public static IServiceCollection AddFtpServer(this IServiceCollection services, Action<IFtpServerBuilder> configure) Parameters Type Name Description IServiceCollection services The service collection to add the FTP server services to. Action < IFtpServerBuilder > configure Configuration of the FTP server services. Returns Type Description IServiceCollection The service collection."
  },
  "api/FubarDev.FtpServer.SecurityActionResult.html": {
    "href": "api/FubarDev.FtpServer.SecurityActionResult.html",
    "title": "Enum SecurityActionResult | FTP Server documentation",
    "keywords": "Enum SecurityActionResult Default status codes for the FTP security extensions according to RFC 2228. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum SecurityActionResult Fields Name Description CommandProtectionLevelDenied Command protection level denied for policy reasons. CommandProtectionLevelNotSupported Command protection level not supported by security mechanism. FailedSecurityCheck Failed security check (hash, sequence, etc). RequestDenied Request denied for policy reasons. RequestedProtLevelNotSupported Requested PROT level not supported by mechanism. RequestedSecurityMechanismOkay [ADAT=base64data] : This reply indicates that the requested security mechanism is ok, and includes security data to be used by the client to construct the next command. ResourceUnavailable Need some unavailable resource to process security. SecurityDataAcceptable [ADAT=base64data] : This reply indicates that the security data is acceptable, and more is required to complete the security data exchange. SecurityDataExchangeComplete Security data exchange complete. SecurityDataExchangeSuccessful [ADAT=base64data] : This reply indicates that the security data exchange completed successfully. UserLoggedIn User logged in, authorized by security data exchange. UsernameOkayNeedPassword Username okay, need password. Challenge is \"....\"."
  },
  "api/FubarDev.FtpServer.S3FtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.S3FtpServerBuilderExtensions.html",
    "title": "Class S3FtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class S3FtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object S3FtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.FileSystem.S3.dll Syntax public static class S3FtpServerBuilderExtensions Methods | Improve this Doc View Source UseS3FileSystem(IFtpServerBuilder) Uses S3 as file system. Declaration public static IFtpServerBuilder UseS3FileSystem(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.IFeatureInfo.html": {
    "href": "api/FubarDev.FtpServer.IFeatureInfo.html",
    "title": "Interface IFeatureInfo | FTP Server documentation",
    "keywords": "Interface IFeatureInfo Defines a feature and its handler. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFeatureInfo Properties | Improve this Doc View Source Names Gets the name of the feature. Declaration [Obsolete(\"Features don't have names. Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] ISet<string> Names { get; } Property Value Type Description ISet < String > Remarks Used by the OPTS command to find the handler of the feature to modify. | Improve this Doc View Source RequiresAuthentication Gets a value indicating whether this extension requires authentication. Declaration [Obsolete(\"This requirement is automatically determined through the FTP command handler.\")] bool RequiresAuthentication { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildInfo(IFtpConnection) Build an informational string to be sent by the FEAT command. Declaration [Obsolete(\"Use BuildInfo(object, IFtpConnection) instead.\")] string BuildInfo(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The configured connection. Returns Type Description String the informational string to be sent by the FEAT command. | Improve this Doc View Source BuildInfo(Type, IFtpConnection) Build an informational string to be sent by the FEAT command. Declaration IEnumerable<string> BuildInfo(Type reference, IFtpConnection connection) Parameters Type Name Description Type reference The reference object type (e.g. an FTP command handler). IFtpConnection connection The configured connection. Returns Type Description IEnumerable < String > the informational strings to be sent by the FEAT command."
  },
  "api/FubarDev.FtpServer.IFeatureHost.html": {
    "href": "api/FubarDev.FtpServer.IFeatureHost.html",
    "title": "Interface IFeatureHost | FTP Server documentation",
    "keywords": "Interface IFeatureHost Interface for something that may host FTP features. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"FTP command handlers (and other types) are now annotated with attributes implementing IFeatureInfo.\")] public interface IFeatureHost Methods | Improve this Doc View Source GetSupportedFeatures(IFtpConnection) Gets a collection of features supported by this command handler. Declaration [Obsolete(\"FTP command handlers (and other types) are now annotated with attributes implementing IFeatureInfo.\")] IEnumerable<IFeatureInfo> GetSupportedFeatures(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The FTP connection. Returns Type Description IEnumerable < IFeatureInfo > A list of features supported by this command handler."
  },
  "api/FubarDev.FtpServer.FtpContext.html": {
    "href": "api/FubarDev.FtpServer.FtpContext.html",
    "title": "Class FtpContext | FTP Server documentation",
    "keywords": "Class FtpContext The context in which the command gets executed. Inheritance Object FtpContext FtpExecutionContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpContext Constructors | Improve this Doc View Source FtpContext(FtpCommand, ChannelWriter<IServerCommand>, IFtpConnection) Initializes a new instance of the FtpContext class. Declaration public FtpContext(FtpCommand command, ChannelWriter<IServerCommand> serverCommandWriter, IFtpConnection connection) Parameters Type Name Description FtpCommand command The FTP command. ChannelWriter < IServerCommand > serverCommandWriter The FTP response writer. IFtpConnection connection The FTP connection. Properties | Improve this Doc View Source Command Gets the FTP command to be executed. Declaration public FtpCommand Command { get; } Property Value Type Description FtpCommand | Improve this Doc View Source Connection Gets the FTP connection. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection | Improve this Doc View Source ServerCommandWriter Gets the response writer. Declaration public ChannelWriter<IServerCommand> ServerCommandWriter { get; } Property Value Type Description ChannelWriter < IServerCommand >"
  },
  "api/FubarDev.FtpServer.FtpConnectionOptions.html": {
    "href": "api/FubarDev.FtpServer.FtpConnectionOptions.html",
    "title": "Class FtpConnectionOptions | FTP Server documentation",
    "keywords": "Class FtpConnectionOptions Options for the FTP connection. Inheritance Object FtpConnectionOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class FtpConnectionOptions Properties | Improve this Doc View Source DefaultEncoding Gets or sets the default connection encoding. Declaration public Encoding DefaultEncoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source InactivityTimeout Gets or sets the default connection inactivity timeout. Declaration public TimeSpan? InactivityTimeout { get; set; } Property Value Type Description Nullable < TimeSpan >"
  },
  "api/FubarDev.FtpServer.DotNetFtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.DotNetFtpServerBuilderExtensions.html",
    "title": "Class DotNetFtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class DotNetFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object DotNetFtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public static class DotNetFtpServerBuilderExtensions Methods | Improve this Doc View Source UseDotNetFileSystem(IFtpServerBuilder) Uses the .NET file system API. Declaration public static IFtpServerBuilder UseDotNetFileSystem(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.Commands.FtpCommandSelection.html": {
    "href": "api/FubarDev.FtpServer.Commands.FtpCommandSelection.html",
    "title": "Class FtpCommandSelection | FTP Server documentation",
    "keywords": "Class FtpCommandSelection Information about the selected FTP command handler. Inheritance Object FtpCommandSelection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpCommandSelection Constructors | Improve this Doc View Source FtpCommandSelection(IFtpCommandBase, IFtpCommandInformation) Initializes a new instance of the FtpCommandSelection class. Declaration public FtpCommandSelection(IFtpCommandBase handler, IFtpCommandInformation handlerInformation) Parameters Type Name Description IFtpCommandBase handler The FTP command handler. IFtpCommandInformation handlerInformation The FTP command handler information. Properties | Improve this Doc View Source Handler Gets the command handler. Declaration public IFtpCommandBase Handler { get; } Property Value Type Description IFtpCommandBase | Improve this Doc View Source Information Gets a value indicating whether a successful login is required. Declaration public IFtpCommandInformation Information { get; } Property Value Type Description IFtpCommandInformation"
  },
  "api/FubarDev.FtpServer.Commands.AssemblyFtpCommandHandlerScanner.html": {
    "href": "api/FubarDev.FtpServer.Commands.AssemblyFtpCommandHandlerScanner.html",
    "title": "Class AssemblyFtpCommandHandlerScanner | FTP Server documentation",
    "keywords": "Class AssemblyFtpCommandHandlerScanner Scans the given assemblies for FTP command handlers. Inheritance Object AssemblyFtpCommandHandlerScanner Implements IFtpCommandHandlerScanner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.dll Syntax public class AssemblyFtpCommandHandlerScanner : IFtpCommandHandlerScanner Constructors | Improve this Doc View Source AssemblyFtpCommandHandlerScanner(Assembly[]) Initializes a new instance of the AssemblyFtpCommandHandlerScanner class. Declaration public AssemblyFtpCommandHandlerScanner(params Assembly[] assemblies) Parameters Type Name Description Assembly [] assemblies The assemblies to scan for FTP command handlers. Methods | Improve this Doc View Source Search() Search for FTP command handlers. Declaration public IEnumerable<IFtpCommandHandlerInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerInformation > The information about the found FTP command handlers. Implements IFtpCommandHandlerScanner"
  },
  "api/FubarDev.FtpServer.CommandExtensions.ServiceFtpCommandHandlerExtensionScanner.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.ServiceFtpCommandHandlerExtensionScanner.html",
    "title": "Class ServiceFtpCommandHandlerExtensionScanner | FTP Server documentation",
    "keywords": "Class ServiceFtpCommandHandlerExtensionScanner Uses DI to get the FTP command handlers. Inheritance Object ServiceFtpCommandHandlerExtensionScanner Implements IFtpCommandHandlerExtensionScanner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.dll Syntax [Obsolete] public class ServiceFtpCommandHandlerExtensionScanner : IFtpCommandHandlerExtensionScanner Constructors | Improve this Doc View Source ServiceFtpCommandHandlerExtensionScanner(IFtpCommandHandlerProvider, IEnumerable<IFtpCommandHandlerExtension>, Nullable<ILogger<ServiceFtpCommandHandlerScanner>>) Initializes a new instance of the ServiceFtpCommandHandlerExtensionScanner class. Declaration public ServiceFtpCommandHandlerExtensionScanner(IFtpCommandHandlerProvider commandHandlerProvider, IEnumerable<IFtpCommandHandlerExtension> commandHandlerExtensions, ILogger<ServiceFtpCommandHandlerScanner>? logger = default(ILogger<ServiceFtpCommandHandlerScanner>? )) Parameters Type Name Description IFtpCommandHandlerProvider commandHandlerProvider The FTP command handler provider. IEnumerable < IFtpCommandHandlerExtension > commandHandlerExtensions The FTP command handler extensions. Nullable < ILogger < ServiceFtpCommandHandlerScanner >> logger The logger. Methods | Improve this Doc View Source Search() Search for FTP command handler extensions. Declaration public IEnumerable<IFtpCommandHandlerExtensionInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerExtensionInformation > The information about the found FTP command handler extensions. Implements IFtpCommandHandlerExtensionScanner"
  },
  "api/FubarDev.FtpServer.ClaimsIdentityExtensions.html": {
    "href": "api/FubarDev.FtpServer.ClaimsIdentityExtensions.html",
    "title": "Class ClaimsIdentityExtensions | FTP Server documentation",
    "keywords": "Class ClaimsIdentityExtensions Extension methods for ClaimsIdentity . Inheritance Object ClaimsIdentityExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class ClaimsIdentityExtensions Methods | Improve this Doc View Source IsAnonymous(ClaimsIdentity) Checks if the identity represents an anonymous user. Declaration public static bool IsAnonymous(this ClaimsIdentity identity) Parameters Type Name Description ClaimsIdentity identity The identity to check. Returns Type Description Boolean true when identity is an anonymous user."
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement.Directories | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement.Directories Classes GenericAccountDirectories Default implementation of IAccountDirectories ."
  },
  "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.html",
    "title": "Class UnixFileSystem | FTP Server documentation",
    "keywords": "Class UnixFileSystem A backend that uses Posix(?) API calls to access the file system. Inheritance Object UnixFileSystem Implements IUnixFileSystem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.Unix Assembly : FubarDev.FtpServer.FileSystem.Unix.dll Syntax public class UnixFileSystem : IUnixFileSystem Constructors | Improve this Doc View Source UnixFileSystem(IUnixDirectoryEntry, IFtpUser, Nullable<UnixUserInfo>) Initializes a new instance of the UnixFileSystem class. Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public UnixFileSystem(IUnixDirectoryEntry root, IFtpUser user, UnixUserInfo? userInfo) Parameters Type Name Description IUnixDirectoryEntry root The root directory. IFtpUser user The current user. Nullable < Mono.Unix.UnixUserInfo > userInfo The user information. | Improve this Doc View Source UnixFileSystem(IUnixDirectoryEntry, ClaimsPrincipal, Nullable<UnixUserInfo>) Initializes a new instance of the UnixFileSystem class. Declaration public UnixFileSystem(IUnixDirectoryEntry root, ClaimsPrincipal user, UnixUserInfo? userInfo) Parameters Type Name Description IUnixDirectoryEntry root The root directory. ClaimsPrincipal user The current user. Nullable < Mono.Unix.UnixUserInfo > userInfo The user information. Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < DateTimeOffset > modify Nullable < DateTimeOffset > access Nullable < DateTimeOffset > create CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem"
  },
  "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveServiceProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.GoogleDrive.GoogleDriveServiceProvider.html",
    "title": "Class GoogleDriveServiceProvider | FTP Server documentation",
    "keywords": "Class GoogleDriveServiceProvider The default implementation of the IGoogleDriveServiceProvider interface. Inheritance Object GoogleDriveServiceProvider Implements IGoogleDriveServiceProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.GoogleDrive Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public class GoogleDriveServiceProvider : IGoogleDriveServiceProvider Constructors | Improve this Doc View Source GoogleDriveServiceProvider(DriveService) Initializes a new instance of the GoogleDriveServiceProvider class. Declaration public GoogleDriveServiceProvider(DriveService driveService) Parameters Type Name Description Google.Apis.Drive.v3.DriveService driveService The Google Drive service. Methods | Improve this Doc View Source GetUserRootAsync(IAccountInformation, CancellationToken) Declaration public Task<(DriveService service, File rootEntry)> GetUserRootAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation CancellationToken cancellationToken Returns Type Description Task < ValueTuple < Google.Apis.Drive.v3.DriveService , Google.Apis.Drive.v3.Data.File >> Implements IGoogleDriveServiceProvider"
  },
  "api/FubarDev.FtpServer.CommandHandlers.XcwdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.XcwdCommandHandler.html",
    "title": "Class XcwdCommandHandler | FTP Server documentation",
    "keywords": "Class XcwdCommandHandler Implements the XCWD command. Inheritance Object FtpCommandHandler XcwdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"XCWD\", false, true)] public class XcwdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FtpServerBuilderExtensionsForChecks.html": {
    "href": "api/FubarDev.FtpServer.FtpServerBuilderExtensionsForChecks.html",
    "title": "Class FtpServerBuilderExtensionsForChecks | FTP Server documentation",
    "keywords": "Class FtpServerBuilderExtensionsForChecks Extension methods for IFtpServerBuilder . Inheritance Object FtpServerBuilderExtensionsForChecks Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public static class FtpServerBuilderExtensionsForChecks Methods | Improve this Doc View Source DisableChecks(IFtpServerBuilder) Remove all connection-related checks. Declaration public static IFtpServerBuilder DisableChecks(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder. | Improve this Doc View Source DisableConnectionCheck(IFtpServerBuilder) Removes check for the connections that tests whether the underlying TCP connection is still established. Declaration public static IFtpServerBuilder DisableConnectionCheck(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder. | Improve this Doc View Source DisableIdleCheck(IFtpServerBuilder) Removes the idle check for the connections. Declaration public static IFtpServerBuilder DisableIdleCheck(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder. | Improve this Doc View Source EnableConnectionCheck(IFtpServerBuilder) Adds check for the connections that tests whether the underlying TCP connection is still established. Declaration public static IFtpServerBuilder EnableConnectionCheck(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder. | Improve this Doc View Source EnableDefaultChecks(IFtpServerBuilder) Adds the default checks for the connection. Declaration public static IFtpServerBuilder EnableDefaultChecks(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder. | Improve this Doc View Source EnableIdleCheck(IFtpServerBuilder) Adds an idle check for the connections. Declaration public static IFtpServerBuilder EnableIdleCheck(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The FTP server builder. Returns Type Description IFtpServerBuilder The same FTP server builder."
  },
  "api/FubarDev.FtpServer.FtpResponseList-1.html": {
    "href": "api/FubarDev.FtpServer.FtpResponseList-1.html",
    "title": "Class FtpResponseList<TStatus> | FTP Server documentation",
    "keywords": "Class FtpResponseList<TStatus> Base class for FTP response lists. Inheritance Object FtpResponseList<TStatus> FtpResponseList Implements IFtpResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class FtpResponseList<TStatus> : IFtpResponse where TStatus : class Type Parameters Name Description TStatus The type of the status used to get the lines. Constructors | Improve this Doc View Source FtpResponseList(Int32, String, String) Initializes a new instance of the FtpResponseList<TStatus> class. Declaration protected FtpResponseList(int code, string startMessage, string endMessage) Parameters Type Name Description Int32 code The status code. String startMessage The message in the start line. String endMessage The message in the end line. Properties | Improve this Doc View Source AfterWriteAction Gets the async action to execute after sending the response to the client. Declaration [Obsolete(\"Use a custom server command.\")] public FtpResponseAfterWriteAsyncDelegate? AfterWriteAction { get; } Property Value Type Description Nullable < FtpResponseAfterWriteAsyncDelegate > | Improve this Doc View Source Code Declaration public int Code { get; } Property Value Type Description Int32 | Improve this Doc View Source EndMessage Gets the message for the last line. Declaration public string EndMessage { get; } Property Value Type Description String | Improve this Doc View Source StartMessage Gets the message for the first line. Declaration public string StartMessage { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateInitialStatusAsync(CancellationToken) Creates the initial status. Declaration protected abstract Task<TStatus> CreateInitialStatusAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task <TStatus> The task containing the initial status. | Improve this Doc View Source GetNextLineAsync(TStatus, CancellationToken) Gets the next line according to the given status . Declaration protected abstract Task<string? > GetNextLineAsync(TStatus status, CancellationToken cancellationToken) Parameters Type Name Description TStatus status The status used to get the next line. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < String >> The task containing the next line or null if there are no more lines. | Improve this Doc View Source GetNextLineAsync(Nullable<Object>, CancellationToken) Declaration public Task<FtpResponseLine> GetNextLineAsync(object? token, CancellationToken cancellationToken) Parameters Type Name Description Nullable < Object > token CancellationToken cancellationToken Returns Type Description Task < FtpResponseLine > | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IFtpResponse"
  },
  "api/FubarDev.FtpServer.ListFormatters.FactsListFormatter.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.FactsListFormatter.html",
    "title": "Class FactsListFormatter | FTP Server documentation",
    "keywords": "Class FactsListFormatter A formatter for the MLST command. Inheritance Object FactsListFormatter Implements IListFormatter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FactsListFormatter : IListFormatter Constructors | Improve this Doc View Source FactsListFormatter(IFtpUser, DirectoryListingEnumerator, ISet<String>, Boolean) Initializes a new instance of the FactsListFormatter class. Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public FactsListFormatter(IFtpUser user, DirectoryListingEnumerator enumerator, ISet<string> activeFacts, bool absoluteName) Parameters Type Name Description IFtpUser user The user to create this formatter for. DirectoryListingEnumerator enumerator The enumerator for the directory listing to format. ISet < String > activeFacts The active facts to return for the entries. Boolean absoluteName Returns an absolute entry name. | Improve this Doc View Source FactsListFormatter(ClaimsPrincipal, DirectoryListingEnumerator, ISet<String>, Boolean) Initializes a new instance of the FactsListFormatter class. Declaration public FactsListFormatter(ClaimsPrincipal user, DirectoryListingEnumerator enumerator, ISet<string> activeFacts, bool absoluteName) Parameters Type Name Description ClaimsPrincipal user The user to create this formatter for. DirectoryListingEnumerator enumerator The enumerator for the directory listing to format. ISet < String > activeFacts The active facts to return for the entries. Boolean absoluteName Returns an absolute entry name. Methods | Improve this Doc View Source Format(IUnixFileSystemEntry, Nullable<String>) Declaration public string Format(IUnixFileSystemEntry entry, string? name) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < String > name Returns Type Description String Implements IListFormatter"
  },
  "api/FubarDev.FtpServer.ListFormatters.LongListFormatter.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.LongListFormatter.html",
    "title": "Class LongListFormatter | FTP Server documentation",
    "keywords": "Class LongListFormatter The IListFormatter for the long directory listing format. Inheritance Object LongListFormatter Implements IListFormatter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class LongListFormatter : IListFormatter Methods | Improve this Doc View Source Format(IUnixFileSystemEntry, Nullable<String>) Declaration public string Format(IUnixFileSystemEntry entry, string? name) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < String > name Returns Type Description String Implements IListFormatter"
  },
  "api/FubarDev.FtpServer.ServerCommands.CloseConnectionServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.CloseConnectionServerCommand.html",
    "title": "Class CloseConnectionServerCommand | FTP Server documentation",
    "keywords": "Class CloseConnectionServerCommand Command to close the connection. Inheritance Object CloseConnectionServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class CloseConnectionServerCommand : IServerCommand Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.ServerCommands.CloseDataConnectionServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.CloseDataConnectionServerCommand.html",
    "title": "Class CloseDataConnectionServerCommand | FTP Server documentation",
    "keywords": "Class CloseDataConnectionServerCommand Command to close the data connection. Inheritance Object CloseDataConnectionServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class CloseDataConnectionServerCommand : IServerCommand Constructors | Improve this Doc View Source CloseDataConnectionServerCommand(IFtpDataConnection) Initializes a new instance of the CloseDataConnectionServerCommand class. Declaration public CloseDataConnectionServerCommand(IFtpDataConnection dataConnection) Parameters Type Name Description IFtpDataConnection dataConnection The data connection to be closed. Properties | Improve this Doc View Source DataConnection Gets the data connection to be closed. Declaration public IFtpDataConnection DataConnection { get; } Property Value Type Description IFtpDataConnection Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.ServerCommands.DataConnectionServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.DataConnectionServerCommand.html",
    "title": "Class DataConnectionServerCommand | FTP Server documentation",
    "keywords": "Class DataConnectionServerCommand Command to be called when data gets send over FTP-DATA. Inheritance Object DataConnectionServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class DataConnectionServerCommand : IServerCommand Constructors | Improve this Doc View Source DataConnectionServerCommand(AsyncDataConnectionDelegate, FtpCommand) Initializes a new instance of the DataConnectionServerCommand class. Declaration public DataConnectionServerCommand(AsyncDataConnectionDelegate dataConnectionDelegate, FtpCommand command) Parameters Type Name Description AsyncDataConnectionDelegate dataConnectionDelegate The delegate to be called with the data connection. FtpCommand command The command initiation the data connection operation. Properties | Improve this Doc View Source Command Gets the command initiation the data connection operation. Declaration public FtpCommand Command { get; } Property Value Type Description FtpCommand | Improve this Doc View Source DataConnectionDelegate Gets the delegate to be called with the data connection. Declaration public AsyncDataConnectionDelegate DataConnectionDelegate { get; } Property Value Type Description AsyncDataConnectionDelegate Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.FileSystem.Error.FileNameNotAllowedException.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.FileNameNotAllowedException.html",
    "title": "Class FileNameNotAllowedException | FTP Server documentation",
    "keywords": "Class FileNameNotAllowedException Requested action not taken. File name not allowed. Inheritance Object Exception FileSystemException FileNameNotAllowedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.FileSystem.Error Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FileNameNotAllowedException : FileSystemException, ISerializable Constructors | Improve this Doc View Source FileNameNotAllowedException() Initializes a new instance of the FileNameNotAllowedException class. Declaration public FileNameNotAllowedException() | Improve this Doc View Source FileNameNotAllowedException(String) Initializes a new instance of the FileNameNotAllowedException class. Declaration public FileNameNotAllowedException(string message) Parameters Type Name Description String message The error message. | Improve this Doc View Source FileNameNotAllowedException(String, Exception) Initializes a new instance of the FileNameNotAllowedException class. Declaration public FileNameNotAllowedException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The underlying exception. Properties | Improve this Doc View Source FtpErrorCode Declaration public override int FtpErrorCode { get; } Property Value Type Description Int32 Overrides FileSystemException.FtpErrorCode | Improve this Doc View Source FtpErrorName Declaration public override string FtpErrorName { get; } Property Value Type Description String Overrides FileSystemException.FtpErrorName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FubarDev.FtpServer.GenericFeatureInfo.html": {
    "href": "api/FubarDev.FtpServer.GenericFeatureInfo.html",
    "title": "Class GenericFeatureInfo | FTP Server documentation",
    "keywords": "Class GenericFeatureInfo Generic feature information. Inheritance Object GenericFeatureInfo Implements IFeatureInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public class GenericFeatureInfo : IFeatureInfo Constructors | Improve this Doc View Source GenericFeatureInfo(String, Boolean, String[]) Initializes a new instance of the GenericFeatureInfo class. Declaration [Obsolete(\"Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public GenericFeatureInfo(string name, bool requiresAuthentication, params string[] additionalNames) Parameters Type Name Description String name The feature name. Boolean requiresAuthentication Indicates whether this extension requires an authenticated user. String [] additionalNames The additional feature names. | Improve this Doc View Source GenericFeatureInfo(String, Nullable<Func<IFtpConnection, String>>, Boolean, String[]) Initializes a new instance of the GenericFeatureInfo class. Declaration [Obsolete(\"Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public GenericFeatureInfo(string name, Func<IFtpConnection, string>? toString, bool requiresAuthentication, params string[] additionalNames) Parameters Type Name Description String name The feature name. Nullable < Func < IFtpConnection , String >> toString The function to use to create a FEAT string. Boolean requiresAuthentication Indicates whether this extension requires an authenticated user. String [] additionalNames The additional feature names. Properties | Improve this Doc View Source Names Declaration [Obsolete(\"Features don't have names. Use an attribute that implements IFeatureInfo, like - for example - FtpFeatureTextAttribute.\")] public ISet<string> Names { get; } Property Value Type Description ISet < String > | Improve this Doc View Source RequiresAuthentication Declaration [Obsolete(\"This requirement is automatically determined through the FTP command handler.\")] public bool RequiresAuthentication { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildInfo(IFtpConnection) Declaration [Obsolete(\"Use BuildInfo(object, IFtpConnection) instead.\")] public string BuildInfo(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection Returns Type Description String | Improve this Doc View Source BuildInfo(Type, IFtpConnection) Declaration public IEnumerable<string> BuildInfo(Type reference, IFtpConnection connection) Parameters Type Name Description Type reference IFtpConnection connection Returns Type Description IEnumerable < String > Implements IFeatureInfo"
  },
  "api/FubarDev.FtpServer.IFtpCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.IFtpCommandHandler.html",
    "title": "Interface IFtpCommandHandler | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandler Interface that an FTP command handler has to implement. Inherited Members IFtpCommandBase.Names IFtpCommandBase.Process(FtpCommand, CancellationToken) IFeatureHost.GetSupportedFeatures(IFtpConnection) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandler : IFtpCommandBase, IFeatureHost Properties | Improve this Doc View Source IsAbortable Gets a value indicating whether this command is abortable. Declaration [Obsolete(\"Information about an FTP command handler can be queried through the IFtpCommandHandlerProvider service.\")] bool IsAbortable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLoginRequired Gets a value indicating whether a login is required to execute this command. Declaration [Obsolete(\"Information about an FTP command handler can be queried through the IFtpCommandHandlerProvider service.\")] bool IsLoginRequired { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetExtensions() Gets a collection of command handler extensions provided by this command handler. Declaration [Obsolete(\"All IFtpCommandHandlerExtension implementations are now stand-alone.\", true)] IEnumerable<IFtpCommandHandlerExtension> GetExtensions() Returns Type Description IEnumerable < IFtpCommandHandlerExtension > A collection of command handler extensions provided by this command handler."
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.CreateFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.CreateFact.html",
    "title": "Class CreateFact | FTP Server documentation",
    "keywords": "Class CreateFact The create fact. Inheritance Object CreateFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class CreateFact : IFact Constructors | Improve this Doc View Source CreateFact(DateTimeOffset) Initializes a new instance of the CreateFact class. Declaration public CreateFact(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp The creation timestamp. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Timestamp Gets the creation time stamp. Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.CurrentDirectoryFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.CurrentDirectoryFact.html",
    "title": "Class CurrentDirectoryFact | FTP Server documentation",
    "keywords": "Class CurrentDirectoryFact The cdir fact. Inheritance Object TypeFact CurrentDirectoryFact Implements IFact Inherited Members TypeFact.Name TypeFact.Value Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class CurrentDirectoryFact : TypeFact, IFact Constructors | Improve this Doc View Source CurrentDirectoryFact() Initializes a new instance of the CurrentDirectoryFact class. Declaration public CurrentDirectoryFact() Implements IFact"
  },
  "api/FubarDev.FtpServer.IFtpCommandHandlerExtension.html": {
    "href": "api/FubarDev.FtpServer.IFtpCommandHandlerExtension.html",
    "title": "Interface IFtpCommandHandlerExtension | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtension Interface for command handler extensions. Inherited Members IFtpCommandBase.Names IFtpCommandBase.Process(FtpCommand, CancellationToken) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerExtension : IFtpCommandBase Properties | Improve this Doc View Source ExtensionFor Gets a name of the command this extension is for. Declaration [Obsolete(\"Use the FtpCommandHandlerExtensionAttribute together with an additional IFtpCommandHandlerExtensionScanner.\")] string ExtensionFor { get; } Property Value Type Description String | Improve this Doc View Source IsLoginRequired Gets a value indicating whether a login is required to execute this command. Declaration [Obsolete(\"Use the FtpCommandHandlerExtensionAttribute together with an additional IFtpCommandHandlerExtensionScanner.\")] bool? IsLoginRequired { get; } Property Value Type Description Nullable < Boolean > Methods | Improve this Doc View Source InitializeConnectionData() Called to initialize the connection data. Declaration void InitializeConnectionData()"
  },
  "api/FubarDev.FtpServer.IFtpConnection.html": {
    "href": "api/FubarDev.FtpServer.IFtpConnection.html",
    "title": "Interface IFtpConnection | FTP Server documentation",
    "keywords": "Interface IFtpConnection The interface for an FTP connection. Inherited Members IConnectionFeature.LocalEndPoint IConnectionFeature.RemoteEndPoint IConnectionFeature.RemoteAddress IDisposable.Dispose() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnection : IConnectionFeature, IDisposable Properties | Improve this Doc View Source ConnectionServices Gets the connection services. Declaration IServiceProvider ConnectionServices { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source Data Gets the FTP connection data. Declaration [Obsolete(\"Query the information using the Features property instead.\")] FtpConnectionData Data { get; } Property Value Type Description FtpConnectionData | Improve this Doc View Source Encoding Gets or sets the encoding for the LIST/NLST commands. Declaration [Obsolete(\"Query the information using the IEncodingFeature instead.\")] Encoding Encoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source Features Gets the feature collection. Declaration IFeatureCollection Features { get; } Property Value Type Description IFeatureCollection | Improve this Doc View Source IsSecure Gets a value indicating whether this is a secure connection. Declaration [Obsolete(\"Query the information using the ISecureConnectionFeature instead.\")] bool IsSecure { get; } Property Value Type Description Boolean | Improve this Doc View Source Log Gets the FTP connection logger. Declaration [Obsolete(\"Use your own logger instead of the one from the connection.\")] ILogger? Log { get; } Property Value Type Description Nullable < ILogger > | Improve this Doc View Source OriginalStream Gets the control connection stream. Declaration [Obsolete(\"Query the information using the ISecureConnectionFeature instead.\")] Stream OriginalStream { get; } Property Value Type Description Stream | Improve this Doc View Source SocketStream Gets or sets the control connection stream. Declaration [Obsolete(\"Query the information using the ISecureConnectionFeature instead.\")] Stream SocketStream { get; set; } Property Value Type Description Stream Methods | Improve this Doc View Source CreateEncryptedStream(Stream) Create an encrypted stream. Declaration [Obsolete(\"The data connection returned by OpenDataConnection is already encrypted.\")] Task<Stream> CreateEncryptedStream(Stream unencryptedStream) Parameters Type Name Description Stream unencryptedStream The stream to encrypt. Returns Type Description Task < Stream > The encrypted stream. | Improve this Doc View Source OpenDataConnectionAsync(Nullable<TimeSpan>, CancellationToken) Creates a response socket for e.g. LIST/NLST. Declaration Task<IFtpDataConnection> OpenDataConnectionAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < TimeSpan > timeout The timeout for establishing a data connection. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpDataConnection > The data connection. | Improve this Doc View Source StartAsync() Starts processing of messages for this connection. Declaration Task StartAsync() Returns Type Description Task The task. | Improve this Doc View Source StopAsync() Closes the connection. Declaration Task StopAsync() Returns Type Description Task The task. | Improve this Doc View Source WriteAsync(IFtpResponse, CancellationToken) Writes a FTP response to a client. Declaration [Obsolete(\"Use the FtpCommandHandler.CommandContext.ServerCommandWriter or FtpCommandHandlerExtension.CommandContext.ServerCommandWriter instead.\")] Task WriteAsync(IFtpResponse response, CancellationToken cancellationToken) Parameters Type Name Description IFtpResponse response The response to write to the client. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source WriteAsync(String, CancellationToken) Writes response to a client. Declaration [Obsolete(\"Use the FtpCommandHandler.CommandContext.ServerCommandWriter or FtpCommandHandlerExtension.CommandContext.ServerCommandWriter instead.\")] Task WriteAsync(string response, CancellationToken cancellationToken) Parameters Type Name Description String response The response to write to the client. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. Events | Improve this Doc View Source Closed Gets or sets the event handler that is triggered when the connection is closed. Declaration event EventHandler? Closed Event Type Type Description Nullable < EventHandler > Extension Methods ConnectionExtensions.ExecuteCommand(IFtpConnection, FtpCommand, Func<FtpCommand, CancellationToken, Task<Nullable<IFtpResponse>>>, Nullable<ILogger>, CancellationToken)"
  },
  "api/FubarDev.FtpServer.Commands.html": {
    "href": "api/FubarDev.FtpServer.Commands.html",
    "title": "Namespace FubarDev.FtpServer.Commands | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Commands Classes AssemblyFtpCommandHandlerScanner Scans the given assemblies for FTP command handlers. DefaultFeatureInfoProvider Default implementation of IFeatureInfoProvider . DefaultFtpCommandActivator Default implementation of the IFtpCommandActivator . DefaultFtpCommandDispatcher Default implementation of IFtpCommandDispatcher . DefaultFtpCommandHandlerProvider Default implementation of IFtpCommandHandlerProvider . FoundFeatureInfo Found feature information. FtpCommandHandlerAttribute Marks a class as being an FTP command handler. FtpCommandSelection Information about the selected FTP command handler. FtpExecutionContext A specialized context for the IFtpCommandMiddleware . ServiceFtpCommandHandlerScanner Uses DI to get the FTP command handlers. Interfaces IFeatureInfoProvider Provides feature information. IFtpCommandActivator Activator for an FTP command. IFtpCommandDispatcher Interface for a FTP command dispatcher. IFtpCommandHandlerInformation Information about an FTP command handler. IFtpCommandHandlerInstanceInformation Interface to get the instance for a command handler created through dependency injection. IFtpCommandHandlerProvider Provides information about all found FTP command handlers. IFtpCommandHandlerScanner Searches for FTP command handlers and returns information about it. IFtpCommandInformation Generic information about an FTP command. IFtpCommandMiddleware FTP command middleware. Delegates FtpCommandExecutionDelegate The delegate for the next middleware for the current FTP command execution step."
  },
  "api/FubarDev.FtpServer.Commands.ServiceFtpCommandHandlerScanner.html": {
    "href": "api/FubarDev.FtpServer.Commands.ServiceFtpCommandHandlerScanner.html",
    "title": "Class ServiceFtpCommandHandlerScanner | FTP Server documentation",
    "keywords": "Class ServiceFtpCommandHandlerScanner Uses DI to get the FTP command handlers. Inheritance Object ServiceFtpCommandHandlerScanner Implements IFtpCommandHandlerScanner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.dll Syntax [Obsolete] public class ServiceFtpCommandHandlerScanner : IFtpCommandHandlerScanner Constructors | Improve this Doc View Source ServiceFtpCommandHandlerScanner(IEnumerable<IFtpCommandHandler>, Nullable<ILogger<ServiceFtpCommandHandlerScanner>>) Initializes a new instance of the ServiceFtpCommandHandlerScanner class. Declaration public ServiceFtpCommandHandlerScanner(IEnumerable<IFtpCommandHandler> commandHandlers, ILogger<ServiceFtpCommandHandlerScanner>? logger = default(ILogger<ServiceFtpCommandHandlerScanner>? )) Parameters Type Name Description IEnumerable < IFtpCommandHandler > commandHandlers The FTP command handlers. Nullable < ILogger < ServiceFtpCommandHandlerScanner >> logger The logger. Methods | Improve this Doc View Source Search() Search for FTP command handlers. Declaration public IEnumerable<IFtpCommandHandlerInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerInformation > The information about the found FTP command handlers. Implements IFtpCommandHandlerScanner"
  },
  "api/FubarDev.FtpServer.Commands.FoundFeatureInfo.html": {
    "href": "api/FubarDev.FtpServer.Commands.FoundFeatureInfo.html",
    "title": "Class FoundFeatureInfo | FTP Server documentation",
    "keywords": "Class FoundFeatureInfo Found feature information. Inheritance Object FoundFeatureInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FoundFeatureInfo Constructors | Improve this Doc View Source FoundFeatureInfo(IAuthenticationMechanism, IFeatureInfo) Initializes a new instance of the FoundFeatureInfo class. Declaration public FoundFeatureInfo(IAuthenticationMechanism authMechanism, IFeatureInfo featureInfo) Parameters Type Name Description IAuthenticationMechanism authMechanism The authentication mechanism. IFeatureInfo featureInfo The feature information. | Improve this Doc View Source FoundFeatureInfo(IFtpCommandHandlerExtensionInformation, IFeatureInfo) Initializes a new instance of the FoundFeatureInfo class. Declaration public FoundFeatureInfo(IFtpCommandHandlerExtensionInformation extensionInfo, IFeatureInfo featureInfo) Parameters Type Name Description IFtpCommandHandlerExtensionInformation extensionInfo The FTP command handler extension information. IFeatureInfo featureInfo The feature information. | Improve this Doc View Source FoundFeatureInfo(IFtpCommandHandlerInformation, IFeatureInfo) Initializes a new instance of the FoundFeatureInfo class. Declaration public FoundFeatureInfo(IFtpCommandHandlerInformation commandHandlerInfo, IFeatureInfo featureInfo) Parameters Type Name Description IFtpCommandHandlerInformation commandHandlerInfo The FTP command handler information. IFeatureInfo featureInfo The feature information. Properties | Improve this Doc View Source AuthenticationMechanism Gets the authentication mechanism. Declaration public IAuthenticationMechanism AuthenticationMechanism { get; } Property Value Type Description IAuthenticationMechanism | Improve this Doc View Source CommandHandlerInfo Gets the FTP command handler information. Declaration public IFtpCommandHandlerInformation CommandHandlerInfo { get; } Property Value Type Description IFtpCommandHandlerInformation | Improve this Doc View Source ExtensionInfo Gets the FTP command handler extension information. Declaration public IFtpCommandHandlerExtensionInformation ExtensionInfo { get; } Property Value Type Description IFtpCommandHandlerExtensionInformation | Improve this Doc View Source FeatureInfo Gets the feature information. Declaration public IFeatureInfo FeatureInfo { get; } Property Value Type Description IFeatureInfo | Improve this Doc View Source IsAuthenticationMechanism Gets a value indicating whether AuthenticationMechanism is set. Declaration public bool IsAuthenticationMechanism { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCommandHandler Gets a value indicating whether CommandHandlerInfo is set. Declaration public bool IsCommandHandler { get; } Property Value Type Description Boolean | Improve this Doc View Source IsExtension Gets a value indicating whether ExtensionInfo is set. Declaration public bool IsExtension { get; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.Authorization.Actions.SetHomeDirectoryActionOptions.html": {
    "href": "api/FubarDev.FtpServer.Authorization.Actions.SetHomeDirectoryActionOptions.html",
    "title": "Class SetHomeDirectoryActionOptions | FTP Server documentation",
    "keywords": "Class SetHomeDirectoryActionOptions Options for the SetHomeDirectoryAction . Inheritance Object SetHomeDirectoryActionOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization.Actions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SetHomeDirectoryActionOptions Properties | Improve this Doc View Source CreateMissingDirectories Gets or sets a value indicating whether missing home directories should be created. Declaration public bool CreateMissingDirectories { get; set; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.SingleRootWithoutHomeAccountDirectoryQueryOptions.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.SingleRootWithoutHomeAccountDirectoryQueryOptions.html",
    "title": "Class SingleRootWithoutHomeAccountDirectoryQueryOptions | FTP Server documentation",
    "keywords": "Class SingleRootWithoutHomeAccountDirectoryQueryOptions Options for the SingleRootWithoutHomeAccountDirectoryQuery . Inheritance Object SingleRootWithoutHomeAccountDirectoryQueryOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SingleRootWithoutHomeAccountDirectoryQueryOptions Properties | Improve this Doc View Source RootPath Gets or sets the root path. Declaration public string? RootPath { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/FubarDev.FtpServer.TcpSocketClientAccessor.html": {
    "href": "api/FubarDev.FtpServer.TcpSocketClientAccessor.html",
    "title": "Class TcpSocketClientAccessor | FTP Server documentation",
    "keywords": "Class TcpSocketClientAccessor Accessor to set/get the current TcpClient . Inheritance Object TcpSocketClientAccessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class TcpSocketClientAccessor Properties | Improve this Doc View Source TcpSocketClient Gets or sets the current TcpClient . Declaration public TcpClient? TcpSocketClient { get; set; } Property Value Type Description Nullable < TcpClient > | Improve this Doc View Source TcpSocketStream Gets or sets the Stream to use. Declaration public Stream? TcpSocketStream { get; set; } Property Value Type Description Nullable < Stream >"
  },
  "api/FubarDev.FtpServer.SystCommandOptions.html": {
    "href": "api/FubarDev.FtpServer.SystCommandOptions.html",
    "title": "Class SystCommandOptions | FTP Server documentation",
    "keywords": "Class SystCommandOptions Options for the SYST command. Inheritance Object SystCommandOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Commands.dll Syntax public class SystCommandOptions Properties | Improve this Doc View Source OperatingSystem Gets or sets the operating system returned by the SYST command. Declaration public string OperatingSystem { get; set; } Property Value Type Description String"
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.DataConnectionServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.DataConnectionServerCommandHandler.html",
    "title": "Class DataConnectionServerCommandHandler | FTP Server documentation",
    "keywords": "Class DataConnectionServerCommandHandler Handler for the DataConnectionServerCommand . Inheritance Object DataConnectionServerCommandHandler Implements IServerCommandHandler < DataConnectionServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class DataConnectionServerCommandHandler : IServerCommandHandler<DataConnectionServerCommand> Constructors | Improve this Doc View Source DataConnectionServerCommandHandler(IFtpConnectionAccessor, Nullable<ILogger<DataConnectionServerCommandHandler>>) Initializes a new instance of the DataConnectionServerCommandHandler class. Declaration public DataConnectionServerCommandHandler(IFtpConnectionAccessor connectionAccessor, ILogger<DataConnectionServerCommandHandler>? logger = default(ILogger<DataConnectionServerCommandHandler>? )) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Nullable < ILogger < DataConnectionServerCommandHandler >> logger The logger. Methods | Improve this Doc View Source ExecuteAsync(DataConnectionServerCommand, CancellationToken) Declaration public Task ExecuteAsync(DataConnectionServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description DataConnectionServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.CloseDataConnectionServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.CloseDataConnectionServerCommandHandler.html",
    "title": "Class CloseDataConnectionServerCommandHandler | FTP Server documentation",
    "keywords": "Class CloseDataConnectionServerCommandHandler Handler for the CloseDataConnectionServerCommand . Inheritance Object CloseDataConnectionServerCommandHandler Implements IServerCommandHandler < CloseDataConnectionServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class CloseDataConnectionServerCommandHandler : IServerCommandHandler<CloseDataConnectionServerCommand> Methods | Improve this Doc View Source ExecuteAsync(CloseDataConnectionServerCommand, CancellationToken) Declaration public Task ExecuteAsync(CloseDataConnectionServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description CloseDataConnectionServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.FtpServiceStatus.html": {
    "href": "api/FubarDev.FtpServer.FtpServiceStatus.html",
    "title": "Enum FtpServiceStatus | FTP Server documentation",
    "keywords": "Enum FtpServiceStatus The current status of the IPausableFtpService . Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum FtpServiceStatus Fields Name Description Paused The service was paused. ReadyToRun The service is ready to run. Running The service is running. Stopped The service was stopped."
  },
  "api/FubarDev.FtpServer.FtpServerOptions.html": {
    "href": "api/FubarDev.FtpServer.FtpServerOptions.html",
    "title": "Class FtpServerOptions | FTP Server documentation",
    "keywords": "Class FtpServerOptions The FTP server options. Inheritance Object FtpServerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class FtpServerOptions Properties | Improve this Doc View Source ConnectionInactivityCheckInterval Gets or sets the interval between checks for inactive connections. Declaration public TimeSpan? ConnectionInactivityCheckInterval { get; set; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source MaxActiveConnections Gets or sets the max allows active connections. Declaration public int MaxActiveConnections { get; set; } Property Value Type Description Int32 Remarks This will cause connections to be refused if count is exceeded. 0 (default) means no control over connection count. | Improve this Doc View Source Port Gets or sets the server port. Declaration public int Port { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ServerAddress Gets or sets the address the server listens on. Leave empty to listen on all interfaces. Declaration public string? ServerAddress { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/FubarDev.FtpServer.DataConnection.IFtpDataConnectionValidator.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.IFtpDataConnectionValidator.html",
    "title": "Interface IFtpDataConnectionValidator | FTP Server documentation",
    "keywords": "Interface IFtpDataConnectionValidator Interface for FTP data connection validation. Namespace : FubarDev.FtpServer.DataConnection Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpDataConnectionValidator Methods | Improve this Doc View Source ValidateAsync(IFtpConnection, IFtpDataConnectionFeature, IFtpDataConnection, CancellationToken) Checks if the FTP data connection is valid. Declaration Task<ValidationResult? > ValidateAsync(IFtpConnection connection, IFtpDataConnectionFeature dataConnectionFeature, IFtpDataConnection dataConnection, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection The FTP connection that created the data connection. IFtpDataConnectionFeature dataConnectionFeature The FTP data connection feature that crated the data connection. IFtpDataConnection dataConnection The created data connection that needs to be validated. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < ValidationResult >> The task returning the validation result."
  },
  "api/FubarDev.FtpServer.DataConnection.ActiveDataConnectionFeatureFactory.html": {
    "href": "api/FubarDev.FtpServer.DataConnection.ActiveDataConnectionFeatureFactory.html",
    "title": "Class ActiveDataConnectionFeatureFactory | FTP Server documentation",
    "keywords": "Class ActiveDataConnectionFeatureFactory Creates an active FTP data connection. Inheritance Object ActiveDataConnectionFeatureFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.DataConnection Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ActiveDataConnectionFeatureFactory Constructors | Improve this Doc View Source ActiveDataConnectionFeatureFactory(IFtpConnectionAccessor, IEnumerable<IFtpDataConnectionValidator>) Initializes a new instance of the ActiveDataConnectionFeatureFactory class. Declaration public ActiveDataConnectionFeatureFactory(IFtpConnectionAccessor connectionAccessor, IEnumerable<IFtpDataConnectionValidator> validators) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. IEnumerable < IFtpDataConnectionValidator > validators An enumeration of FTP connection validators. Methods | Improve this Doc View Source CreateFeatureAsync(Nullable<FtpCommand>, Address, Nullable<Int32>) Creates a IFtpDataConnectionFeature implementation for an active FTP data connection. Declaration [Obsolete(\"Use the overload with IPEndPoint as address instead.\")] public Task<IFtpDataConnectionFeature> CreateFeatureAsync(FtpCommand? ftpCommand, Address portAddress, int? dataPort) Parameters Type Name Description Nullable < FtpCommand > ftpCommand The FTP command that initiated the creation of the feature. Address portAddress The address the client wants the FTP server to connect to. Nullable < Int32 > dataPort The source port the server should use to connect to the client. Returns Type Description Task < IFtpDataConnectionFeature > The task returning the new FTP data connection feature. | Improve this Doc View Source CreateFeatureAsync(Nullable<FtpCommand>, IPEndPoint, Nullable<Int32>) Creates a IFtpDataConnectionFeature implementation for an active FTP data connection. Declaration public Task<IFtpDataConnectionFeature> CreateFeatureAsync(FtpCommand? ftpCommand, IPEndPoint portEndPoint, int? dataPort) Parameters Type Name Description Nullable < FtpCommand > ftpCommand The FTP command that initiated the creation of the feature. IPEndPoint portEndPoint The address the client wants the FTP server to connect to. Nullable < Int32 > dataPort The source port the server should use to connect to the client. Returns Type Description Task < IFtpDataConnectionFeature > The task returning the new FTP data connection feature."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerScanner.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandHandlerScanner.html",
    "title": "Interface IFtpCommandHandlerScanner | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerScanner Searches for FTP command handlers and returns information about it. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerScanner Methods | Improve this Doc View Source Search() Search for FTP command handlers. Declaration IEnumerable<IFtpCommandHandlerInformation> Search() Returns Type Description IEnumerable < IFtpCommandHandlerInformation > The information about the found FTP command handlers."
  },
  "api/FubarDev.FtpServer.Commands.DefaultFtpCommandHandlerProvider.html": {
    "href": "api/FubarDev.FtpServer.Commands.DefaultFtpCommandHandlerProvider.html",
    "title": "Class DefaultFtpCommandHandlerProvider | FTP Server documentation",
    "keywords": "Class DefaultFtpCommandHandlerProvider Default implementation of IFtpCommandHandlerProvider . Inheritance Object DefaultFtpCommandHandlerProvider Implements IFtpCommandHandlerProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.dll Syntax public class DefaultFtpCommandHandlerProvider : IFtpCommandHandlerProvider Constructors | Improve this Doc View Source DefaultFtpCommandHandlerProvider(IEnumerable<IFtpCommandHandlerScanner>, Nullable<ILogger<DefaultFtpCommandHandlerProvider>>) Initializes a new instance of the DefaultFtpCommandHandlerProvider class. Declaration public DefaultFtpCommandHandlerProvider(IEnumerable<IFtpCommandHandlerScanner> scanners, ILogger<DefaultFtpCommandHandlerProvider>? logger = default(ILogger<DefaultFtpCommandHandlerProvider>? )) Parameters Type Name Description IEnumerable < IFtpCommandHandlerScanner > scanners The scanners to search for FTP command handlers. Nullable < ILogger < DefaultFtpCommandHandlerProvider >> logger The logger. Properties | Improve this Doc View Source CommandHandlers Gets the information for all command handlers. Declaration public IEnumerable<IFtpCommandHandlerInformation> CommandHandlers { get; } Property Value Type Description IEnumerable < IFtpCommandHandlerInformation > Implements IFtpCommandHandlerProvider"
  },
  "api/FubarDev.FtpServer.Authorization.IAuthorizationMechanism.html": {
    "href": "api/FubarDev.FtpServer.Authorization.IAuthorizationMechanism.html",
    "title": "Interface IAuthorizationMechanism | FTP Server documentation",
    "keywords": "Interface IAuthorizationMechanism Interface for all authorization mechanisms. Namespace : FubarDev.FtpServer.Authorization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAuthorizationMechanism Methods | Improve this Doc View Source HandleAcctAsync(String, CancellationToken) Handles the ACCT command. Declaration Task<IFtpResponse> HandleAcctAsync(string account, CancellationToken cancellationToken) Parameters Type Name Description String account The account to select. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The task returning the FTP response. | Improve this Doc View Source HandlePassAsync(String, CancellationToken) Handles the PASS command. Declaration Task<IFtpResponse> HandlePassAsync(string password, CancellationToken cancellationToken) Parameters Type Name Description String password The password. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The task returning the FTP response. | Improve this Doc View Source HandleUserAsync(String, CancellationToken) Handles the USER command. Declaration Task<IFtpResponse> HandleUserAsync(string userIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String userIdentifier The user identifier. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The task returning the FTP response. | Improve this Doc View Source Reset(Nullable<IAuthenticationMechanism>) Resets the authorization mechanism. Declaration void Reset(IAuthenticationMechanism? authenticationMechanism) Parameters Type Name Description Nullable < IAuthenticationMechanism > authenticationMechanism The previously selected authentication mechanism."
  },
  "api/FubarDev.FtpServer.PasvListenerOptions.html": {
    "href": "api/FubarDev.FtpServer.PasvListenerOptions.html",
    "title": "Class PasvListenerOptions | FTP Server documentation",
    "keywords": "Class PasvListenerOptions IP address and port range to be used by the PASV / EPSV commands. Inheritance Object PasvListenerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PasvListenerOptions Constructors | Improve this Doc View Source PasvListenerOptions(Int32, Int32, IPAddress) Initializes a new instance of the PasvListenerOptions class. Declaration public PasvListenerOptions(int minPort, int maxPort, IPAddress publicAddress) Parameters Type Name Description Int32 minPort The minimum port number. Int32 maxPort The maximum port number. IPAddress publicAddress The public IP address. Properties | Improve this Doc View Source HasPortRange Gets a value indicating whether the port range is configured. Declaration public bool HasPortRange { get; } Property Value Type Description Boolean | Improve this Doc View Source PasvMaxPort Gets the maximum port number to use for passive ftp. Declaration public int PasvMaxPort { get; } Property Value Type Description Int32 | Improve this Doc View Source PasvMinPort Gets the minimum port number to use for passive ftp. Declaration public int PasvMinPort { get; } Property Value Type Description Int32 Remarks Needs to be larger than 1023. | Improve this Doc View Source PublicAddress Gets the address published to clients for PASV connections. Declaration public IPAddress PublicAddress { get; } Property Value Type Description IPAddress"
  },
  "api/FubarDev.FtpServer.PasvListenerFactory.html": {
    "href": "api/FubarDev.FtpServer.PasvListenerFactory.html",
    "title": "Class PasvListenerFactory | FTP Server documentation",
    "keywords": "Class PasvListenerFactory Creates TcpListeners for use with PASV commands. Inheritance Object PasvListenerFactory Implements IPasvListenerFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class PasvListenerFactory : IPasvListenerFactory Constructors | Improve this Doc View Source PasvListenerFactory(IPasvAddressResolver, Nullable<ILogger<PasvListenerFactory>>) Initializes a new instance of the PasvListenerFactory class. Declaration public PasvListenerFactory(IPasvAddressResolver addressResolver, ILogger<PasvListenerFactory>? logger = default(ILogger<PasvListenerFactory>? )) Parameters Type Name Description IPasvAddressResolver addressResolver The address resolver for PASV / EPSV . Nullable < ILogger < PasvListenerFactory >> logger Logger instance. Methods | Improve this Doc View Source CreateTcpListenerAsync(IFtpConnection, Nullable<AddressFamily>, Int32, CancellationToken) Create a new TcpListener for the given connection. Declaration public Task<IPasvListener> CreateTcpListenerAsync(IFtpConnection connection, AddressFamily? addressFamily, int port, CancellationToken cancellationToken) Parameters Type Name Description IFtpConnection connection connection on which to create the tcp listener. Nullable < AddressFamily > addressFamily The address family for the address to be selected. Int32 port listen on the given port, or 0 for any port. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IPasvListener > A TcpListener. Exceptions Type Condition SocketException Network error, such as no free port. ArgumentOutOfRangeException The chosen port was not within the configured range of ports. Implements IPasvListenerFactory"
  },
  "api/FubarDev.FtpServer.PasvListener.html": {
    "href": "api/FubarDev.FtpServer.PasvListener.html",
    "title": "Class PasvListener | FTP Server documentation",
    "keywords": "Class PasvListener The default implementation of the IPasvListener interface. Inheritance Object PasvListener Implements IPasvListener IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.dll Syntax public class PasvListener : IPasvListener, IDisposable Constructors | Improve this Doc View Source PasvListener(IPAddress, Int32, IPAddress) Initializes a new instance of the PasvListener class. Declaration public PasvListener(IPAddress listenAddress, int port, IPAddress externalAddress) Parameters Type Name Description IPAddress listenAddress On which address to listen. Int32 port Port to listen on, or 0 for any. IPAddress externalAddress which external address should be advertised to clients. Use null to use the listener's address. Exceptions Type Condition ArgumentNullException listenAddress is null. ArgumentOutOfRangeException port is out of range. Properties | Improve this Doc View Source PasvEndPoint Gets the Endpoint under which the listener is reachable by clients. Declaration public IPEndPoint PasvEndPoint { get; } Property Value Type Description IPEndPoint Methods | Improve this Doc View Source AcceptPasvClientAsync() Accept a client from a PASV command. Declaration public Task<TcpClient> AcceptPasvClientAsync() Returns Type Description Task < TcpClient > A TcpClient with which to communicate with the client. Exceptions Type Condition SocketException Network error, see SocketError . ObjectDisposedException Listener was disposed of. | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IPasvListener System.IDisposable"
  },
  "api/FubarDev.FtpServer.PasvCommandOptions.html": {
    "href": "api/FubarDev.FtpServer.PasvCommandOptions.html",
    "title": "Class PasvCommandOptions | FTP Server documentation",
    "keywords": "Class PasvCommandOptions Options for the PASV and EPSV commands. Inheritance Object PasvCommandOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Commands.dll Syntax public class PasvCommandOptions Properties | Improve this Doc View Source PromiscuousPasv Gets or sets a value indicating whether to accept PASV connections from any source. Declaration public bool PromiscuousPasv { get; set; } Property Value Type Description Boolean Remarks If false (default), connections to a PASV port will only be accepted from the same IP that issued the respective PASV command."
  },
  "api/FubarDev.FtpServer.IFtpCommandBase.html": {
    "href": "api/FubarDev.FtpServer.IFtpCommandBase.html",
    "title": "Interface IFtpCommandBase | FTP Server documentation",
    "keywords": "Interface IFtpCommandBase The base interface for command handlers and extensions. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandBase Properties | Improve this Doc View Source Names Gets a collection of all command names for this command. Declaration [Obsolete(\"The mapping from name to command handler is created by using the FtpCommandHandlerAttribute.\")] IReadOnlyCollection<string> Names { get; } Property Value Type Description IReadOnlyCollection < String > Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Processes the command. Declaration Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command The command to process. CancellationToken cancellationToken The cancellation token to signal command abortion. Returns Type Description Task < Nullable < IFtpResponse >> The FTP response."
  },
  "api/FubarDev.FtpServer.FtpRequestDelegate.html": {
    "href": "api/FubarDev.FtpServer.FtpRequestDelegate.html",
    "title": "Delegate FtpRequestDelegate | FTP Server documentation",
    "keywords": "Delegate FtpRequestDelegate The delegate for the next middleware for the current request. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task FtpRequestDelegate(FtpContext context); Parameters Type Name Description FtpContext context The context of the current FTP command. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.FileSystem.FileSystemExtensions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.FileSystemExtensions.html",
    "title": "Class FileSystemExtensions | FTP Server documentation",
    "keywords": "Class FileSystemExtensions Extensions for the file system stuff. Inheritance Object FileSystemExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class FileSystemExtensions Methods | Improve this Doc View Source Clone(Stack<IUnixDirectoryEntry>) Clone the stack of directory entries. Declaration public static Stack<IUnixDirectoryEntry> Clone(this Stack<IUnixDirectoryEntry> path) Parameters Type Name Description Stack < IUnixDirectoryEntry > path The stack of directory entries to clone. Returns Type Description Stack < IUnixDirectoryEntry > the cloned path . | Improve this Doc View Source CombinePath(Nullable<String>, IEnumerable<String>) Appends parts to a path. Declaration public static string CombinePath(string? path, IEnumerable<string> parts) Parameters Type Name Description Nullable < String > path The path to append to. IEnumerable < String > parts The parts to append. Returns Type Description String The combined path. | Improve this Doc View Source CombinePath(Nullable<String>, String[]) Appends parts to a path. Declaration public static string CombinePath(string? path, params string[] parts) Parameters Type Name Description Nullable < String > path The path to append to. String [] parts The parts to append. Returns Type Description String The combined path. | Improve this Doc View Source GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) Get the directory for the given pathElements . Declaration public static Task<IUnixDirectoryEntry? > GetDirectoryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, IReadOnlyList<string> pathElements, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The file system to get the directory for. Stack < IUnixDirectoryEntry > currentPath The current path. IReadOnlyList < String > pathElements The (absolute or relative) path to get the directory for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IUnixDirectoryEntry >> The found IUnixDirectoryEntry or null . | Improve this Doc View Source GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) Get the directory for the given path . Declaration public static Task<IUnixDirectoryEntry? > GetDirectoryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The file system to get the directory for. Stack < IUnixDirectoryEntry > currentPath The current path. Nullable < String > path The (absolute or relative) path to get the directory for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IUnixDirectoryEntry >> The found IUnixDirectoryEntry or null . | Improve this Doc View Source GetFullPath(IEnumerable<IUnixDirectoryEntry>) Returns the path as string. Declaration public static string GetFullPath(this IEnumerable<IUnixDirectoryEntry> path) Parameters Type Name Description IEnumerable < IUnixDirectoryEntry > path The path to convert to string. Returns Type Description String The path as string. | Improve this Doc View Source GetFullPath(Stack<IUnixDirectoryEntry>) Returns the path as string. Declaration public static string GetFullPath(this Stack<IUnixDirectoryEntry> path) Parameters Type Name Description Stack < IUnixDirectoryEntry > path The path to convert to string. Returns Type Description String The path as string. | Improve this Doc View Source GetFullPath(Stack<IUnixDirectoryEntry>, Nullable<String>) Returns the path as string. Declaration public static string GetFullPath(this Stack<IUnixDirectoryEntry> path, string? fileName) Parameters Type Name Description Stack < IUnixDirectoryEntry > path The path to convert to string. Nullable < String > fileName The file name to append to the path . Returns Type Description String The combination of path and fileName as string. | Improve this Doc View Source GetParentPath(String) Returns the parent path of the path . Declaration public static string GetParentPath(this string path) Parameters Type Name Description String path The path to get the parent path from. Returns Type Description String The parent path. | Improve this Doc View Source IsChildOfOrSameAs(Stack<IUnixDirectoryEntry>, Stack<IUnixDirectoryEntry>, IUnixFileSystem) Determines whether the pathToTestAsChild is a child or the same path as pathToTestAsParent . Declaration public static bool IsChildOfOrSameAs(this Stack<IUnixDirectoryEntry> pathToTestAsChild, Stack<IUnixDirectoryEntry> pathToTestAsParent, IUnixFileSystem fileSystem) Parameters Type Name Description Stack < IUnixDirectoryEntry > pathToTestAsChild The path to test as child. Stack < IUnixDirectoryEntry > pathToTestAsParent The path to test as parent. IUnixFileSystem fileSystem The file system to use to compare the file names. Returns Type Description Boolean true if the pathToTestAsChild is a child or the same path as pathToTestAsParent . | Improve this Doc View Source SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) Searches for a IUnixDirectoryEntry by using the currentPath and pathElements . Declaration public static Task<SearchResult<IUnixDirectoryEntry>? > SearchDirectoryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, IReadOnlyList<string> pathElements, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. IReadOnlyList < String > pathElements The relative path elements to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixDirectoryEntry >>> The found IUnixDirectoryEntry . | Improve this Doc View Source SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) Searches for a IUnixDirectoryEntry by using the currentPath and path . Declaration public static Task<SearchResult<IUnixDirectoryEntry>? > SearchDirectoryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. Nullable < String > path The relative path to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixDirectoryEntry >>> The found IUnixDirectoryEntry . | Improve this Doc View Source SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) Searches for a IUnixFileSystemEntry by using the currentPath and pathElements . Declaration public static Task<SearchResult<IUnixFileSystemEntry>? > SearchEntryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, IReadOnlyList<string> pathElements, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. IReadOnlyList < String > pathElements The relative path elements to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixFileSystemEntry >>> The found IUnixFileSystemEntry . | Improve this Doc View Source SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) Searches for a IUnixFileSystemEntry by using the currentPath and path . Declaration public static Task<SearchResult<IUnixFileSystemEntry>? > SearchEntryAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. Nullable < String > path The relative path to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixFileSystemEntry >>> The found IUnixFileSystemEntry . | Improve this Doc View Source SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) Searches for a IUnixFileEntry by using the currentPath and pathElements . Declaration public static Task<SearchResult<IUnixFileEntry>? > SearchFileAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, IReadOnlyList<string> pathElements, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. IReadOnlyList < String > pathElements The relative path elements to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixFileEntry >>> The found IUnixDirectoryEntry . | Improve this Doc View Source SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) Searches for a IUnixFileEntry by using the currentPath and path . Declaration public static Task<SearchResult<IUnixFileEntry>? > SearchFileAsync(this IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> currentPath, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The underlying IUnixFileSystem . Stack < IUnixDirectoryEntry > currentPath The current path. Nullable < String > path The relative path to search for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < SearchResult < IUnixFileEntry >>> The found IUnixDirectoryEntry . | Improve this Doc View Source SplitPath(Nullable<String>) Split the path into parts. Declaration public static IReadOnlyList<string> SplitPath(string? path) Parameters Type Name Description Nullable < String > path The path to split. Returns Type Description IReadOnlyList < String > The parts of the path. | Improve this Doc View Source ToDisplayString(Stack<IUnixDirectoryEntry>) Returns the path as string like GetFullPath(Stack<IUnixDirectoryEntry>) , with the difference that it doesn't add the trailing / . Declaration public static string ToDisplayString(this Stack<IUnixDirectoryEntry> path) Parameters Type Name Description Stack < IUnixDirectoryEntry > path The path to convert to string. Returns Type Description String The path as string."
  },
  "api/FubarDev.FtpServer.FtpConnectionData.html": {
    "href": "api/FubarDev.FtpServer.FtpConnectionData.html",
    "title": "Class FtpConnectionData | FTP Server documentation",
    "keywords": "Class FtpConnectionData Common data for a IFtpConnection . Inheritance Object FtpConnectionData Implements ILocalizationFeature IFileSystemFeature IAuthorizationInformationFeature ITransferConfigurationFeature IMlstFactsFeature IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class FtpConnectionData : ILocalizationFeature, IFileSystemFeature, IAuthorizationInformationFeature, ITransferConfigurationFeature, IMlstFactsFeature, IDisposable Constructors | Improve this Doc View Source FtpConnectionData(Encoding, IFeatureCollection, IFtpCatalogLoader) Initializes a new instance of the FtpConnectionData class. Declaration public FtpConnectionData(Encoding defaultEncoding, IFeatureCollection featureCollection, IFtpCatalogLoader catalogLoader) Parameters Type Name Description Encoding defaultEncoding The default encoding. IFeatureCollection featureCollection The feature collection where all features get stored. IFtpCatalogLoader catalogLoader The catalog loader for the FTP server. Properties | Improve this Doc View Source ActiveMlstFacts Declaration [Obsolete(\"Query the information using the IMlstFactsFeature instead.\")] public ISet<string> ActiveMlstFacts { get; } Property Value Type Description ISet < String > | Improve this Doc View Source BackgroundCommandHandler Gets the IBackgroundCommandHandler that's required for the ABOR command. Declaration [Obsolete(\"Query IBackgroundTaskLifetimeFeature to get information about an active background task (if non-null).\")] public IBackgroundCommandHandler? BackgroundCommandHandler { get; } Property Value Type Description Nullable < IBackgroundCommandHandler > | Improve this Doc View Source Catalog Declaration [Obsolete(\"Query the information using the ILocalizationFeature instead.\")] public ICatalog Catalog { get; set; } Property Value Type Description NGettext.ICatalog | Improve this Doc View Source CreateEncryptedStream Gets or sets a delegate that allows the creation of an encrypted stream. Declaration [Obsolete(\"Query the information using the ISecureConnectionFeature instead.\")] public CreateEncryptedStreamDelegate? CreateEncryptedStream { get; set; } Property Value Type Description Nullable < CreateEncryptedStreamDelegate > | Improve this Doc View Source CurrentDirectory Declaration [Obsolete(\"Query the information using the IFileSystemFeature instead.\")] public IUnixDirectoryEntry CurrentDirectory { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source FileSystem Declaration [Obsolete(\"Query the information using the IFileSystemFeature instead.\")] public IUnixFileSystem FileSystem { get; set; } Property Value Type Description IUnixFileSystem | Improve this Doc View Source FtpUser Declaration [Obsolete(\"User the IAuthorizationInformationFeature services to get the current status.\")] public ClaimsPrincipal? FtpUser { get; set; } Property Value Type Description Nullable < ClaimsPrincipal > | Improve this Doc View Source IsAnonymous Gets or sets a value indicating whether the current user is anonymous. Declaration [Obsolete(\"An anonymous user object now implements IAnonymousFtpUser.\")] public bool IsAnonymous { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsLoggedIn Gets or sets a value indicating whether the user with the User . is logged in. Declaration [Obsolete(\"User the IFtpLoginStateMachine services to get the current status.\")] public bool IsLoggedIn { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Language Declaration [Obsolete(\"Query the information using the ILocalizationFeature instead.\")] public CultureInfo Language { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source NlstEncoding Gets or sets the Encoding for the NLST command. Declaration [Obsolete(\"Query the information using the IEncodingFeature instead.\")] public Encoding NlstEncoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source PassiveSocketClient Gets or sets the data connection for a passive data transfer. Declaration [Obsolete(\"This property is not used any more. Use IFtpDataConnectionFeature instead.\")] public TcpClient? PassiveSocketClient { get; set; } Property Value Type Description Nullable < TcpClient > | Improve this Doc View Source Path Declaration [Obsolete(\"Query the information using the IFileSystemFeature instead.\")] public Stack<IUnixDirectoryEntry> Path { get; set; } Property Value Type Description Stack < IUnixDirectoryEntry > | Improve this Doc View Source PortAddress Gets or sets the address to use for an active data connection. Declaration [Obsolete(\"This property is not used any more. Use IFtpDataConnectionFeature instead.\")] public Address? PortAddress { get; set; } Property Value Type Description Nullable < Address > | Improve this Doc View Source RenameFrom Gets or sets the IUnixFileEntry to use for a RNTO operation. Declaration [Obsolete(\"Query the information using the IRenameCommandFeature instead.\")] public SearchResult<IUnixFileSystemEntry>? RenameFrom { get; set; } Property Value Type Description Nullable < SearchResult < IUnixFileSystemEntry >> | Improve this Doc View Source RestartPosition Gets or sets the restart position for appending data to a file. Declaration [Obsolete(\"Query the information using the IRestCommandFeature instead.\")] public long? RestartPosition { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source TransferMode Declaration [Obsolete(\"Query the information using the ITransferConfigurationFeature instead.\")] public FtpTransferMode TransferMode { get; set; } Property Value Type Description FtpTransferMode | Improve this Doc View Source TransferTypeCommandUsed Gets or sets the last used transfer type command. Declaration [Obsolete(\"The restriction was lifted.\")] public string? TransferTypeCommandUsed { get; set; } Property Value Type Description Nullable < String > Remarks It's not allowed to use PASV when PORT was used previously - and vice versa. | Improve this Doc View Source User Declaration [Obsolete(\"User the IAuthorizationInformationFeature services to get the current status.\")] public IFtpUser? User { get; set; } Property Value Type Description Nullable < IFtpUser > | Improve this Doc View Source UserData Gets or sets user data as dynamic object. Declaration [Obsolete(\"Use IFtpConnection.Features to store custom information.\")] public dynamic UserData { get; set; } Property Value Type Description Object Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements ILocalizationFeature IFileSystemFeature IAuthorizationInformationFeature ITransferConfigurationFeature IMlstFactsFeature System.IDisposable"
  },
  "api/FubarDev.FtpServer.Authorization.Actions.SetHomeDirectoryAction.html": {
    "href": "api/FubarDev.FtpServer.Authorization.Actions.SetHomeDirectoryAction.html",
    "title": "Class SetHomeDirectoryAction | FTP Server documentation",
    "keywords": "Class SetHomeDirectoryAction Sets the home directory for the connection. Inheritance Object SetHomeDirectoryAction Implements IAuthorizationAction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization.Actions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SetHomeDirectoryAction : IAuthorizationAction Constructors | Improve this Doc View Source SetHomeDirectoryAction(IOptions<SetHomeDirectoryActionOptions>, IFtpConnectionAccessor, IAccountDirectoryQuery, Nullable<ILogger<SetHomeDirectoryAction>>) Initializes a new instance of the SetHomeDirectoryAction class. Declaration public SetHomeDirectoryAction(IOptions<SetHomeDirectoryActionOptions> options, IFtpConnectionAccessor ftpConnectionAccessor, IAccountDirectoryQuery accountDirectoryQuery, ILogger<SetHomeDirectoryAction>? logger = default(ILogger<SetHomeDirectoryAction>? )) Parameters Type Name Description IOptions < SetHomeDirectoryActionOptions > options The options for the SetHomeDirectoryAction . IFtpConnectionAccessor ftpConnectionAccessor The FTP connection accessor. IAccountDirectoryQuery accountDirectoryQuery Interface to query account directories. Nullable < ILogger < SetHomeDirectoryAction >> logger The logger. Properties | Improve this Doc View Source Level Declaration public int Level { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AuthorizedAsync(IAccountInformation, CancellationToken) Declaration public Task AuthorizedAsync(IAccountInformation accountInformation, CancellationToken cancellationToken) Parameters Type Name Description IAccountInformation accountInformation CancellationToken cancellationToken Returns Type Description Task Implements IAuthorizationAction"
  },
  "api/FubarDev.FtpServer.AccountManagement.AnonymousMembershipProvider.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.AnonymousMembershipProvider.html",
    "title": "Class AnonymousMembershipProvider | FTP Server documentation",
    "keywords": "Class AnonymousMembershipProvider Allow any anonymous login. Inheritance Object AnonymousMembershipProvider Implements IMembershipProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class AnonymousMembershipProvider : IMembershipProvider Constructors | Improve this Doc View Source AnonymousMembershipProvider() Initializes a new instance of the AnonymousMembershipProvider class. Declaration public AnonymousMembershipProvider() Remarks Anonymous logins must provide an email address that at least seems to be valid ( SimpleMailAddressValidation ). | Improve this Doc View Source AnonymousMembershipProvider(IAnonymousPasswordValidator) Initializes a new instance of the AnonymousMembershipProvider class. Declaration public AnonymousMembershipProvider(IAnonymousPasswordValidator anonymousPasswordValidator) Parameters Type Name Description IAnonymousPasswordValidator anonymousPasswordValidator Anonymous login validation. Methods | Improve this Doc View Source CreateAnonymousPrincipal(Nullable<String>) Create a claims principal for an anonymous (authenticated!) user. Declaration public static ClaimsPrincipal CreateAnonymousPrincipal(string? email) Parameters Type Name Description Nullable < String > email The anonymous users e-mail address. Returns Type Description ClaimsPrincipal The anonymous claims principal. | Improve this Doc View Source ValidateUserAsync(String, String) Declaration public Task<MemberValidationResult> ValidateUserAsync(string username, string password) Parameters Type Name Description String username String password Returns Type Description Task < MemberValidationResult > Implements IMembershipProvider"
  },
  "api/FubarDev.FtpServer.CommandHandlers.AlloCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.AlloCommandHandler.html",
    "title": "Class AlloCommandHandler | FTP Server documentation",
    "keywords": "Class AlloCommandHandler Implements the ALLO command. Inheritance Object FtpCommandHandler AlloCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"ALLO\", false, false)] public class AlloCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.MemoryTemporaryData.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.MemoryTemporaryData.html",
    "title": "Class MemoryTemporaryData | FTP Server documentation",
    "keywords": "Class MemoryTemporaryData Stores the temporary data in a memory stream. Inheritance Object MemoryTemporaryData Implements ITemporaryData IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class MemoryTemporaryData : ITemporaryData, IDisposable Remarks This is not recommended in a production environment. Properties | Improve this Doc View Source Size Declaration public long Size { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Dispose the object. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true when called from the Dispose() function. | Improve this Doc View Source FillAsync(Stream, CancellationToken) Copies the stream data into the temporary data store. Declaration public Task FillAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream The data to copy. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task. | Improve this Doc View Source OpenAsync() Declaration public Task<Stream> OpenAsync() Returns Type Description Task < Stream > Implements ITemporaryData System.IDisposable"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.TemporaryDataFactory.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.TemporaryDataFactory.html",
    "title": "Class TemporaryDataFactory | FTP Server documentation",
    "keywords": "Class TemporaryDataFactory Factory to create ITemporaryData objects. Inheritance Object TemporaryDataFactory Implements ITemporaryDataFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class TemporaryDataFactory : ITemporaryDataFactory Constructors | Improve this Doc View Source TemporaryDataFactory() Initializes a new instance of the TemporaryDataFactory class. Declaration public TemporaryDataFactory() Methods | Improve this Doc View Source AddCreator(Int64, TemporaryDataFactory.CreateAsyncDelegate) Adds a creator for the given minimum size. Declaration protected void AddCreator(long minimumSize, TemporaryDataFactory.CreateAsyncDelegate createAsyncDelegate) Parameters Type Name Description Int64 minimumSize The minimum size required to use the passed creation function. TemporaryDataFactory.CreateAsyncDelegate createAsyncDelegate The creation function when the expected size exceeds the minimum size. | Improve this Doc View Source CreateAsync(Stream, Nullable<Int64>, CancellationToken) Declaration public Task<ITemporaryData> CreateAsync(Stream input, long? expectedSize, CancellationToken cancellationToken) Parameters Type Name Description Stream input Nullable < Int64 > expectedSize CancellationToken cancellationToken Returns Type Description Task < ITemporaryData > Implements ITemporaryDataFactory"
  },
  "api/FubarDev.FtpServer.CommandExtensions.OptsMlstCommandExtension.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.OptsMlstCommandExtension.html",
    "title": "Class OptsMlstCommandExtension | FTP Server documentation",
    "keywords": "Class OptsMlstCommandExtension MLST extension for the OPTS command. Inheritance Object FtpCommandHandlerExtension OptsMlstCommandExtension Implements IFtpCommandHandlerExtension IFtpCommandBase Inherited Members FtpCommandHandlerExtension.Names FtpCommandHandlerExtension.IsLoginRequired FtpCommandHandlerExtension.ExtensionFor FtpCommandHandlerExtension.CommandContext FtpCommandHandlerExtension.FtpContext FtpCommandHandlerExtension.Connection FtpCommandHandlerExtension.Data FtpCommandHandlerExtension.T(String) FtpCommandHandlerExtension.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandlerExtension(\"MLST\", \"OPTS\")] public class OptsMlstCommandExtension : FtpCommandHandlerExtension, IFtpCommandHandlerExtension, IFtpCommandBase Remarks Don't announce this extension, because it gets already announced by the MLST command itself. Methods | Improve this Doc View Source InitializeConnectionData() Declaration public override void InitializeConnectionData() Overrides FtpCommandHandlerExtension.InitializeConnectionData() | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandlerExtension.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtension IFtpCommandBase"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | FTP Server documentation",
    "keywords": "API documentation This is the documentation for the current version of the FTP server. The most important parts of the API are: IFtpServer the FTP server itself FtpServerOptions for the FTP server transport configuration FtpConnectionOptions to configure the default control connection text encoding AuthTlsOptions for the FTPS configuration DotNetFileSystemOptions to configure the file system access"
  },
  "articles/authentication.html": {
    "href": "articles/authentication.html",
    "title": "Authentication | FTP Server documentation",
    "keywords": "Introduction The FTP server currently supports the following membership providers: AnonymousMembershipProvider is the only portable membership provider in the project PamMembershipProvider requres .NET Core 3.0 and a system with an installed libpam.so.0 How it works The FTP server queries all services implementing the IMembershipProvider interface and tries to authenticate the given login/password against all registered providers. The first provider that was able to authenticate the user is stored in the FTP connection data. Warning The order of the registration of the membership providers is important. Anonymous authentication The anonymous authentiation is implemented by the AnonymousMembershipProvider class and can be configured by adding a service for an IAnonymousPasswordValidator . Default anonymous password validators NoValidation : Take the password without validation NoTopLevelDomainValidation : The E-Mail-Address doesn't need to have a TLD SimpleMailAddressValidation : Simple E-Mail validation BlockAnonymousValidation : Block anonymous logins The SimpleMailAddressValidation is the default password validator."
  },
  "api/FubarDev.FtpServer.ServerCommands.PauseConnectionServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.PauseConnectionServerCommand.html",
    "title": "Class PauseConnectionServerCommand | FTP Server documentation",
    "keywords": "Class PauseConnectionServerCommand Pauses the connection (only RX). Inheritance Object PauseConnectionServerCommand Implements IServerCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.dll Syntax public class PauseConnectionServerCommand : IServerCommand Implements IServerCommand"
  },
  "api/FubarDev.FtpServer.ListFormatters.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.html",
    "title": "Namespace FubarDev.FtpServer.ListFormatters | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ListFormatters Classes FactsListFormatter A formatter for the MLST command. LongListFormatter The IListFormatter for the long directory listing format. ShortListFormatter The IListFormatter for the short directory listing format (name only)."
  },
  "api/FubarDev.FtpServer.HostInfo.html": {
    "href": "api/FubarDev.FtpServer.HostInfo.html",
    "title": "Class HostInfo | FTP Server documentation",
    "keywords": "Class HostInfo Record for a host name/address. Inheritance Object HostInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class HostInfo Constructors | Improve this Doc View Source HostInfo() Initializes a new instance of the HostInfo class. Declaration public HostInfo() | Improve this Doc View Source HostInfo(IPAddress) Initializes a new instance of the HostInfo class. Declaration public HostInfo(IPAddress address) Parameters Type Name Description IPAddress address The IP address. | Improve this Doc View Source HostInfo(String) Initializes a new instance of the HostInfo class. Declaration public HostInfo(string hostName) Parameters Type Name Description String hostName The host name. Properties | Improve this Doc View Source Address Gets the IP address. Declaration public IPAddress Address { get; } Property Value Type Description IPAddress | Improve this Doc View Source HostName Gets the host name. Declaration public string HostName { get; } Property Value Type Description String | Improve this Doc View Source IsAddress Gets a value indicating whether this object represents an IP address. Declaration public bool IsAddress { get; } Property Value Type Description Boolean | Improve this Doc View Source IsEmpty Gets a value indicating whether this host object is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source IsHostName Gets a value indicating whether this object represents an host name. Declaration public bool IsHostName { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/FubarDev.FtpServer.GoogleDriveFtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.GoogleDriveFtpServerBuilderExtensions.html",
    "title": "Class GoogleDriveFtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class GoogleDriveFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object GoogleDriveFtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.FileSystem.GoogleDrive.dll Syntax public static class GoogleDriveFtpServerBuilderExtensions Methods | Improve this Doc View Source UseGoogleDrive(IFtpServerBuilder, IConfigurableHttpClientInitializer, String) Uses Google Drive as file system. Declaration public static IFtpServerBuilder UseGoogleDrive(this IFtpServerBuilder builder, IConfigurableHttpClientInitializer httpClientInitializer, string applicationName = \"FTP Server\") Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Google.Apis.Http.IConfigurableHttpClientInitializer httpClientInitializer The HTTP client initializer. String applicationName The application name. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server. | Improve this Doc View Source UseGoogleDrive(IFtpServerBuilder, Func<IServiceProvider, DriveService>) Uses Google Drive as file system. Declaration public static IFtpServerBuilder UseGoogleDrive(this IFtpServerBuilder builder, Func<IServiceProvider, DriveService> createDriveService) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Func < IServiceProvider , Google.Apis.Drive.v3.DriveService > createDriveService Create the Google.Apis.Drive.v3.DriveService to be used to access the Google Drive API. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.FtpCommand.html": {
    "href": "api/FubarDev.FtpServer.FtpCommand.html",
    "title": "Class FtpCommand | FTP Server documentation",
    "keywords": "Class FtpCommand FTP command with argument. Inheritance Object FtpCommand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class FtpCommand Constructors | Improve this Doc View Source FtpCommand(String, Nullable<String>) Initializes a new instance of the FtpCommand class. Declaration public FtpCommand(string commandName, string? commandArgument) Parameters Type Name Description String commandName The command name. Nullable < String > commandArgument The command argument. Properties | Improve this Doc View Source Argument Gets the command argument. Declaration public string Argument { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the command name. Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String) Splits the command into the name and its arguments. Declaration public static FtpCommand Parse(string command) Parameters Type Name Description String command The command to split into name and arguments. Returns Type Description FtpCommand The created FtpCommand . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/FubarDev.FtpServer.FileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem Classes EmptyUnixFileSystem An empty file system to be used when the user isn't logged in yet. FileSystemExtensions Extensions for the file system stuff. MemoryTemporaryData Stores the temporary data in a memory stream. PathEnumerator Enumerates the parts of a path. PathNormalizer Path normalization by removing its . and .. segments and replacing \\ with / . PathSelectionResult The result of a SelectAsync(IUnixFileSystem, Nullable<String>, CancellationToken) operation. PathSelector Selects a path in a file system. SearchResult<T> The result of a file system search operation. Interfaces IAccessMode A unix style access mode interface. IAccountDirectories Well-known directories for a given account. IAccountDirectoryQuery Queries directories for a given account. IFileSystemClassFactory This factory interface is used to create a IUnixFileSystem implementation for a given user ID. IUnixDirectoryEntry A unix directory entry. IUnixFileEntry A unix file entry. IUnixFileSystem The unix file system abstraction used by the FTP server. IUnixFileSystemEntry The file system entry information that is shared between a IUnixDirectoryEntry and a IUnixFileEntry . IUnixOwner Defines the owning user and group of an item. IUnixPermissions Unix file system entry permissions. Enums PathSelectionResultType The status of a path selection result."
  },
  "api/FubarDev.FtpServer.Commands.IFtpCommandActivator.html": {
    "href": "api/FubarDev.FtpServer.Commands.IFtpCommandActivator.html",
    "title": "Interface IFtpCommandActivator | FTP Server documentation",
    "keywords": "Interface IFtpCommandActivator Activator for an FTP command. Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandActivator Methods | Improve this Doc View Source Create(FtpCommandHandlerContext) Gets information about the FTP command to be executed. Declaration FtpCommandSelection? Create(FtpCommandHandlerContext context) Parameters Type Name Description FtpCommandHandlerContext context The FTP command execution context. Returns Type Description Nullable < FtpCommandSelection > Information about the FTP command to be executed."
  },
  "api/FubarDev.FtpServer.FileSystem.Error.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.html",
    "title": "Namespace FubarDev.FtpServer.FileSystem.Error | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.FileSystem.Error Classes BadParameterException Command not implemented for that parameter. FileNameNotAllowedException Requested action not taken. File name not allowed. FileSystemException Represents an error condition the underlying file system wants to communicate to the client. FileUnavailableException Requested action not taken. File unavailable (e.g., file not found, no access). StorageExceededException Requested file action aborted. Exceeded storage allocation (for current directory or dataset)."
  },
  "api/FubarDev.FtpServer.Features.IFtpDataConnectionConfigurationFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IFtpDataConnectionConfigurationFeature.html",
    "title": "Interface IFtpDataConnectionConfigurationFeature | FTP Server documentation",
    "keywords": "Interface IFtpDataConnectionConfigurationFeature Feature that provides information about the data connections. Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Commands.dll Syntax public interface IFtpDataConnectionConfigurationFeature Properties | Improve this Doc View Source LimitToEpsv Gets or sets a value indicating whether the data connection mode is limited to EPSV. Declaration bool LimitToEpsv { get; set; } Property Value Type Description Boolean"
  },
  "api/FubarDev.FtpServer.ConnectionChecks.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.html",
    "title": "Namespace FubarDev.FtpServer.ConnectionChecks | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ConnectionChecks Classes FtpConnectionCheckContext The context of the FTP connection check. FtpConnectionCheckResult Result object for a connection usability check. FtpConnectionEstablishedCheck Checks if the TCP connection itself is still established. FtpConnectionIdleCheck An activity-based keep-alive detection. Interfaces IFtpConnectionCheck Check if the connection is usable/connected/not idle. IFtpConnectionStatusCheck Interface to check if the connection is still alive and kicking."
  },
  "api/FubarDev.FtpServer.ConnectionChecks.IFtpConnectionStatusCheck.html": {
    "href": "api/FubarDev.FtpServer.ConnectionChecks.IFtpConnectionStatusCheck.html",
    "title": "Interface IFtpConnectionStatusCheck | FTP Server documentation",
    "keywords": "Interface IFtpConnectionStatusCheck Interface to check if the connection is still alive and kicking. Namespace : FubarDev.FtpServer.ConnectionChecks Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnectionStatusCheck Methods | Improve this Doc View Source CheckIfAlive() Check if the connection is still alive. Declaration bool CheckIfAlive() Returns Type Description Boolean true when the connection is still alive."
  },
  "api/FubarDev.FtpServer.ClaimsPrincipalExtensions.html": {
    "href": "api/FubarDev.FtpServer.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | FTP Server documentation",
    "keywords": "Class ClaimsPrincipalExtensions Extension methods for ClaimsPrincipal . Inheritance Object ClaimsPrincipalExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class ClaimsPrincipalExtensions Methods | Improve this Doc View Source IsAnonymous(ClaimsPrincipal) Checks if the principal represents an anonymous user. Declaration public static bool IsAnonymous(this ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The principal to check. Returns Type Description Boolean true when the principal contains an anonymous identity. | Improve this Doc View Source IsUnixUser(ClaimsPrincipal) Checks if the principal represents an unix user. Declaration public static bool IsUnixUser(this ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The principal to check. Returns Type Description Boolean true when the principal contains an unix identity."
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundTransferInfo.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundTransferInfo.html",
    "title": "Class BackgroundTransferInfo | FTP Server documentation",
    "keywords": "Class BackgroundTransferInfo Information about a background transfer. Inheritance Object BackgroundTransferInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public sealed class BackgroundTransferInfo Constructors | Improve this Doc View Source BackgroundTransferInfo(BackgroundTransferStatus, String, Nullable<Int64>) Initializes a new instance of the BackgroundTransferInfo class. Declaration public BackgroundTransferInfo(BackgroundTransferStatus status, string fileName, long? transferred) Parameters Type Name Description BackgroundTransferStatus status The status of the transfer. String fileName The full target file name. Nullable < Int64 > transferred The number of transferred bytes. Properties | Improve this Doc View Source FileName Gets the target file name (with path). Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source Status Gets the status of the transfer. Declaration public BackgroundTransferStatus Status { get; } Property Value Type Description BackgroundTransferStatus | Improve this Doc View Source Transferred Gets the number of transferred bytes. Declaration public long? Transferred { get; } Property Value Type Description Nullable < Int64 >"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.RootPerUser.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement.Directories.RootPerUser | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement.Directories.RootPerUser Classes RootPerUserAccountDirectoryQuery A single root directory per user. RootPerUserAccountDirectoryQueryOptions Options for the RootPerUserAccountDirectoryQuery ."
  },
  "api/FubarDev.FtpServer.ServerCommands.AsyncDataConnectionDelegate.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.AsyncDataConnectionDelegate.html",
    "title": "Delegate AsyncDataConnectionDelegate | FTP Server documentation",
    "keywords": "Delegate AsyncDataConnectionDelegate Delegate for sending or receivung data over a data connection. Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public delegate Task<IFtpResponse? > AsyncDataConnectionDelegate(IFtpDataConnection dataConnection, CancellationToken cancellationToken); Parameters Type Name Description IFtpDataConnection dataConnection The data connection used to send or receive the data over. CancellationToken cancellationToken The cancellation token to signal command abortion. Returns Type Description Task < Nullable < IFtpResponse >> The task with an FTP response if it should be different than the default one."
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.html",
    "title": "Namespace FubarDev.FtpServer.ServerCommandHandlers | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ServerCommandHandlers Classes CloseConnectionServerCommandHandler Handler for the CloseConnectionServerCommand . CloseDataConnectionServerCommandHandler Handler for the CloseDataConnectionServerCommand . DataConnectionServerCommandHandler Handler for the DataConnectionServerCommand . PauseConnectionServerCommandHandler Handler for the PauseConnectionServerCommand . ResumeConnectionServerCommandHandler Handler for the ResumeConnectionServerCommand . SendResponseServerCommandHandler Command handler for the SendResponseServerCommand . TlsEnableServerCommandHandler Handler for the TlsEnableServerCommand ."
  },
  "api/FubarDev.FtpServer.IFtpResponse.html": {
    "href": "api/FubarDev.FtpServer.IFtpResponse.html",
    "title": "Interface IFtpResponse | FTP Server documentation",
    "keywords": "Interface IFtpResponse Base interface to get the response for an FTP command. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpResponse Properties | Improve this Doc View Source AfterWriteAction Gets the async action to execute after sending the response to the client. Declaration [Obsolete(\"Use a custom server command.\")] FtpResponseAfterWriteAsyncDelegate? AfterWriteAction { get; } Property Value Type Description Nullable < FtpResponseAfterWriteAsyncDelegate > | Improve this Doc View Source Code Gets the response code. Declaration int Code { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetNextLineAsync(Nullable<Object>, CancellationToken) Tries to get the the next line. Declaration Task<FtpResponseLine> GetNextLineAsync(object? token, CancellationToken cancellationToken) Parameters Type Name Description Nullable < Object > token Token that saves the current position. Must be null at the beginning. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < FtpResponseLine > true when a new line is available to send."
  },
  "api/FubarDev.FtpServer.FtpResponseAfterWriteAsyncDelegate.html": {
    "href": "api/FubarDev.FtpServer.FtpResponseAfterWriteAsyncDelegate.html",
    "title": "Delegate FtpResponseAfterWriteAsyncDelegate | FTP Server documentation",
    "keywords": "Delegate FtpResponseAfterWriteAsyncDelegate Delegate to be called after a response was written. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use a custom server command.\")] public delegate Task<IFtpResponse? > FtpResponseAfterWriteAsyncDelegate(IFtpConnection connection, CancellationToken cancellationToken); Parameters Type Name Description IFtpConnection connection The FTP connection. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IFtpResponse >> The task."
  },
  "api/FubarDev.FtpServer.FileSystem.PathSelector.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.PathSelector.html",
    "title": "Class PathSelector | FTP Server documentation",
    "keywords": "Class PathSelector Selects a path in a file system. Inheritance Object PathSelector Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class PathSelector Methods | Improve this Doc View Source SelectAsync(IUnixFileSystem, IEnumerable<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) Tries to select the given path . Declaration public static Task<PathSelectionResult> SelectAsync(this IUnixFileSystem fileSystem, IEnumerable<IUnixDirectoryEntry> pathEntries, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The file system. IEnumerable < IUnixDirectoryEntry > pathEntries The current path (entries). Nullable < String > path The path to select. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < PathSelectionResult > The result of the selection. | Improve this Doc View Source SelectAsync(IUnixFileSystem, Nullable<String>, CancellationToken) Tries to select the given path . Declaration public static Task<PathSelectionResult> SelectAsync(this IUnixFileSystem fileSystem, string? path, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystem fileSystem The file system. Nullable < String > path The path to select. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < PathSelectionResult > The result of the selection."
  },
  "api/FubarDev.FtpServer.FileSystem.PathSelectionResultType.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.PathSelectionResultType.html",
    "title": "Enum PathSelectionResultType | FTP Server documentation",
    "keywords": "Enum PathSelectionResultType The status of a path selection result. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum PathSelectionResultType Fields Name Description FoundDirectory A directory was found FoundFile A file was found. MissingDirectory A directory was missing MissingFileOrDirectory A file or directory was missing"
  },
  "api/FubarDev.FtpServer.Events.IFtpConnectionEventHost.html": {
    "href": "api/FubarDev.FtpServer.Events.IFtpConnectionEventHost.html",
    "title": "Interface IFtpConnectionEventHost | FTP Server documentation",
    "keywords": "Interface IFtpConnectionEventHost The event host. Namespace : FubarDev.FtpServer.Events Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnectionEventHost Methods | Improve this Doc View Source PublishEvent(IFtpConnectionEvent) Publish the event. Declaration void PublishEvent(IFtpConnectionEvent evt) Parameters Type Name Description IFtpConnectionEvent evt The event to publish."
  },
  "api/FubarDev.FtpServer.Events.IFtpConnectionEvent.html": {
    "href": "api/FubarDev.FtpServer.Events.IFtpConnectionEvent.html",
    "title": "Interface IFtpConnectionEvent | FTP Server documentation",
    "keywords": "Interface IFtpConnectionEvent Base interface for an FTP connection event. Namespace : FubarDev.FtpServer.Events Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpConnectionEvent"
  },
  "api/FubarDev.FtpServer.CommandHandlers.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.html",
    "title": "Namespace FubarDev.FtpServer.CommandHandlers | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.CommandHandlers Classes AborCommandHandler Implements the ABOR command. AcctCommandHandler Implements the ACCT command. AdatCommandHandler The ADAT command handler. AlloCommandHandler Implements the ALLO command. AppeCommandHandler Implements the APPE command. AuthCommandHandler The AUTH command handler. CdUpCommandHandler Implements the CDUP command. CwdCommandHandler Implements the CWD command. DeleCommandHandler Implements the DELE command. FeatCommandHandler Implements the FEAT command. FtpCommandHandler The base class for all FTP command handlers. HelpCommandHandler The HELP command handler. HostCommandHandler Implementation of the HOST command. LangCommandHandler Implements the LANG command. ListCommandHandler Implements the LIST and NLST commands. MdtmCommandHandler Implements the MDTM command. MfctCommandHandler Implements the MFCT command. MffCommandHandler Implements the MFF command. MfmtCommandHandler Implements the MFMT command. MkdCommandHandler Implements the MKD command. MlstCommandHandler The implementation of the MLST and MLSD commands. ModeCommandHandler Implements the MODE command. NoOpCommandHandler Implements the NOOP command. OptsCommandHandler Implements the OPTS command. PassCommandHandler Implements the PASS command. PasvCommandHandler The command handler for the PASV (4.1.2.) and EPSV commands. PbszCommandHandler The PBSZ command handler. PortCommandHandler Implements the PORT and EPRT commands. ProtCommandHandler The PROT command handler. PwdCommandHandler Implements the PWD command. QuitCommandHandler Implements the QUIT command. ReinCommandHandler Implementation of the REIN command. RestCommandHandler Implements the REST command. RetrCommandHandler Implements the RETR command. RmdCommandHandler Implements the RMD command. RnfrCommandHandler Implements the RNFR command. RntoCommandHandler Implements the RNTO command. SiteCommandHandler The SITE command handler. SizeCommandHandler Implements the SIZE command. StatCommandHandler The STAT command handler. StorCommandHandler This class implements the STOR command (4.1.3.). StruCommandHandler Implements the STRU command. SystCommandHandler Implements the SYST command. TypeCommandHandler Implements the TYPE command. UserCommandHandler Implements the USER command. XcwdCommandHandler Implements the XCWD command. XmkdCommandHandler Implements the XMKD command. XrmdCommandHandler Implements the XRMD command. Interfaces IFtpCommandHandlerExtensionHost Interface indicating that a command handler can act as an extension host."
  },
  "api/FubarDev.FtpServer.Authentication.html": {
    "href": "api/FubarDev.FtpServer.Authentication.html",
    "title": "Namespace FubarDev.FtpServer.Authentication | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Authentication Classes AuthenticationMechanism The base class for an authentication mechanism. DefaultSslStreamWrapperFactory The default implementation of the ISslStreamWrapperFactory interface. TlsAuthenticationMechanism Implementation for the AUTH TLS command. Interfaces IAuthenticationMechanism The interface for an authentication mechanism. ISslStreamWrapperFactory Interface to wrap an unencrypted stream in an SslStream."
  },
  "api/FubarDev.FtpServer.AccountManagement.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.html",
    "title": "Namespace FubarDev.FtpServer.AccountManagement | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.AccountManagement Classes AnonymousFtpUser An anonymous FTP user. AnonymousMembershipProvider Allow any anonymous login. FtpClaimTypes Claim types for the FTP server. MemberValidationResult Result for a member validation. Interfaces IAnonymousFtpUser The anonymous FTP interface. IFtpUser A basic FTP user interface. IMembershipProvider Membership provider interface. IUnixUser Interface for unix user specific information. Enums MemberValidationStatus Validation result for a IMembershipProvider ."
  },
  "api/FubarDev.FtpServer.AccountManagement.Anonymous.IAnonymousPasswordValidator.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Anonymous.IAnonymousPasswordValidator.html",
    "title": "Interface IAnonymousPasswordValidator | FTP Server documentation",
    "keywords": "Interface IAnonymousPasswordValidator This interface validates the password for an anonymous login. Namespace : FubarDev.FtpServer.AccountManagement.Anonymous Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAnonymousPasswordValidator Methods | Improve this Doc View Source IsValid(String) Determines whether this password is valid for an anonymous login. Declaration bool IsValid(string password) Parameters Type Name Description String password The password to validate. Returns Type Description Boolean true when the password is valid for this kind of anonymous authentication."
  },
  "api/FubarDev.FtpServer.UnixFsFtpServerBuilderExtensions.html": {
    "href": "api/FubarDev.FtpServer.UnixFsFtpServerBuilderExtensions.html",
    "title": "Class UnixFsFtpServerBuilderExtensions | FTP Server documentation",
    "keywords": "Class UnixFsFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Inheritance Object UnixFsFtpServerBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.FileSystem.Unix.dll Syntax public static class UnixFsFtpServerBuilderExtensions Methods | Improve this Doc View Source UseUnixFileSystem(IFtpServerBuilder) Uses the Unix file system API. Declaration public static IFtpServerBuilder UseUnixFileSystem(this IFtpServerBuilder builder) Parameters Type Name Description IFtpServerBuilder builder The server builder used to configure the FTP server. Returns Type Description IFtpServerBuilder the server builder used to configure the FTP server."
  },
  "api/FubarDev.FtpServer.CommandHandlers.OptsCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.OptsCommandHandler.html",
    "title": "Class OptsCommandHandler | FTP Server documentation",
    "keywords": "Class OptsCommandHandler Implements the OPTS command. Inheritance Object FtpCommandHandler OptsCommandHandler Implements IFtpCommandHandlerExtensionHost IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"OPTS\", false, true)] public class OptsCommandHandler : FtpCommandHandler, IFtpCommandHandlerExtensionHost, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Properties | Improve this Doc View Source Extensions Declaration public IDictionary<string, IFtpCommandHandlerExtension> Extensions { get; set; } Property Value Type Description IDictionary < String , IFtpCommandHandlerExtension > Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandlerExtensionHost IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.RnfrCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.RnfrCommandHandler.html",
    "title": "Class RnfrCommandHandler | FTP Server documentation",
    "keywords": "Class RnfrCommandHandler Implements the RNFR command. Inheritance Object FtpCommandHandler RnfrCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"RNFR\", true, true)] public class RnfrCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.CwdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.CwdCommandHandler.html",
    "title": "Class CwdCommandHandler | FTP Server documentation",
    "keywords": "Class CwdCommandHandler Implements the CWD command. Inheritance Object FtpCommandHandler CwdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"CWD\", false, true)] public class CwdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Features.IFtpDataConnectionFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.IFtpDataConnectionFeature.html",
    "title": "Interface IFtpDataConnectionFeature | FTP Server documentation",
    "keywords": "Interface IFtpDataConnectionFeature Feature for an FTP data connection. Inherited Members IDisposable.Dispose() Namespace : FubarDev.FtpServer.Features Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpDataConnectionFeature : IDisposable Properties | Improve this Doc View Source Command Gets the FTP command that initiated the creation of the feature. Declaration FtpCommand? Command { get; } Property Value Type Description Nullable < FtpCommand > | Improve this Doc View Source LocalEndPoint Gets the local end point. Declaration IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint Remarks This value is unreliable in case of an active data connection. Methods | Improve this Doc View Source GetDataConnectionAsync(TimeSpan, CancellationToken) Gets a new FTP data connection. Declaration Task<IFtpDataConnection> GetDataConnectionAsync(TimeSpan timeout, CancellationToken cancellationToken) Parameters Type Name Description TimeSpan timeout The timeout for establishing the FTP data connection. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpDataConnection > The task."
  },
  "api/FubarDev.FtpServer.AccountManagement.AnonymousFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.AnonymousFtpUser.html",
    "title": "Class AnonymousFtpUser | FTP Server documentation",
    "keywords": "Class AnonymousFtpUser An anonymous FTP user. Inheritance Object AnonymousFtpUser Implements IAnonymousFtpUser IFtpUser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use ClaimsPrincipal\")] public class AnonymousFtpUser : IAnonymousFtpUser, IFtpUser Constructors | Improve this Doc View Source AnonymousFtpUser(Nullable<String>) Initializes a new instance of the AnonymousFtpUser class. Declaration public AnonymousFtpUser(string? email) Parameters Type Name Description Nullable < String > email The anonymous users email address. Properties | Improve this Doc View Source Email Gets the anonymous users email address. Declaration public string? Email { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source IsInGroup(String) Declaration public bool IsInGroup(string groupName) Parameters Type Name Description String groupName Returns Type Description Boolean Implements IAnonymousFtpUser IFtpUser Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.IPasvListener.html": {
    "href": "api/FubarDev.FtpServer.IPasvListener.html",
    "title": "Interface IPasvListener | FTP Server documentation",
    "keywords": "Interface IPasvListener Wraps a TCPListener so we can easily use it in our commands that require a passive data connection. Inherited Members IDisposable.Dispose() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IPasvListener : IDisposable Properties | Improve this Doc View Source PasvEndPoint Gets the Endpoint under which the listener is reachable by clients. Declaration IPEndPoint PasvEndPoint { get; } Property Value Type Description IPEndPoint Methods | Improve this Doc View Source AcceptPasvClientAsync() Accept a client from a PASV command. Declaration Task<TcpClient> AcceptPasvClientAsync() Returns Type Description Task < TcpClient > A TcpClient with which to communicate with the client. Exceptions Type Condition SocketException Network error, see SocketError . ObjectDisposedException Listener was disposed of."
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.TypeFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.TypeFact.html",
    "title": "Class TypeFact | FTP Server documentation",
    "keywords": "Class TypeFact The type fact. Inheritance Object TypeFact CurrentDirectoryFact ParentDirectoryFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class TypeFact : IFact Constructors | Improve this Doc View Source TypeFact(IUnixFileSystemEntry) Initializes a new instance of the TypeFact class. Declaration public TypeFact(IUnixFileSystemEntry entry) Parameters Type Name Description IUnixFileSystemEntry entry The file system entry to get the type fact for. | Improve this Doc View Source TypeFact(String) Initializes a new instance of the TypeFact class. Declaration protected TypeFact(string type) Parameters Type Name Description String type The value of this fact (usually file or dir ). Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.FtpStateMachine-1.html": {
    "href": "api/FubarDev.FtpServer.FtpStateMachine-1.html",
    "title": "Class FtpStateMachine<TStatus> | FTP Server documentation",
    "keywords": "Class FtpStateMachine<TStatus> A base class for a state machine that's triggered by FTP commands. Inheritance Object FtpStateMachine<TStatus> FtpLoginStateMachine Implements IFtpStateMachine <TStatus> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class FtpStateMachine<TStatus> : IFtpStateMachine<TStatus> where TStatus : Enum Type Parameters Name Description TStatus The status type. Constructors | Improve this Doc View Source FtpStateMachine(IFtpConnection, IEnumerable<FtpStateMachine<TStatus>.Transition>, TStatus) Initializes a new instance of the FtpStateMachine<TStatus> class. Declaration protected FtpStateMachine(IFtpConnection connection, IEnumerable<FtpStateMachine<TStatus>.Transition> transitions, TStatus initialStatus) Parameters Type Name Description IFtpConnection connection The FTP connection. IEnumerable < FtpStateMachine.Transition <>> transitions The supported transitions. TStatus initialStatus The initial status. Properties | Improve this Doc View Source Connection Gets the connection this state machine belongs to. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection | Improve this Doc View Source Status Gets the current status. Declaration public TStatus Status { get; } Property Value Type Description TStatus Methods | Improve this Doc View Source ExecuteAsync(FtpCommand, CancellationToken) Executes the given FTP command. Declaration public Task<IFtpResponse? > ExecuteAsync(FtpCommand ftpCommand, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FtpCommand ftpCommand The FTP command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IFtpResponse >> The task returning the response. | Improve this Doc View Source ExecuteCommandAsync(FtpCommand, CancellationToken) Execute the command. All status checks are already done. Declaration protected abstract Task<IFtpResponse? > ExecuteCommandAsync(FtpCommand ftpCommand, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FtpCommand ftpCommand The FTP command to execute. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IFtpResponse >> The task returning the response. | Improve this Doc View Source GetPossibleTransitions(TStatus) Get all possible transitions for a given status. Declaration protected IReadOnlyCollection<FtpStateMachine<TStatus>.Transition> GetPossibleTransitions(TStatus status) Parameters Type Name Description TStatus status The status value to get the transitions for. Returns Type Description IReadOnlyCollection < FtpStateMachine.Transition <>> The possible transitions for the given status. | Improve this Doc View Source OnStatusChanged(TStatus, TStatus) Called when the status was updated. Declaration protected virtual void OnStatusChanged(TStatus from, TStatus to) Parameters Type Name Description TStatus from The previous status. TStatus to The new status. | Improve this Doc View Source Reset() Resets the state machine to the initial status. Declaration public virtual void Reset() | Improve this Doc View Source SetStatus(TStatus) Sets the status to a new value. Declaration protected void SetStatus(TStatus status) Parameters Type Name Description TStatus status The new status value. | Improve this Doc View Source T(String) Translates a message using the current catalog of the active connection. Declaration protected string T(string message) Parameters Type Name Description String message The message to translate. Returns Type Description String The translated message. | Improve this Doc View Source T(String, Object[]) Translates a message using the current catalog of the active connection. Declaration [StringFormatMethod(\"message\")] protected string T(string message, params object[] args) Parameters Type Name Description String message The message to translate. Object [] args The format arguments. Returns Type Description String The translated message. Implements IFtpStateMachine<TStatus>"
  },
  "api/FubarDev.FtpServer.CommandHandlers.PortCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.PortCommandHandler.html",
    "title": "Class PortCommandHandler | FTP Server documentation",
    "keywords": "Class PortCommandHandler Implements the PORT and EPRT commands. Inheritance Object FtpCommandHandler PortCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"PORT\", false, true)] [FtpCommandHandler(\"EPRT\", false, true)] [FtpFeatureText(\"EPRT\")] public class PortCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source PortCommandHandler(ActiveDataConnectionFeatureFactory, IOptions<PortCommandOptions>) Initializes a new instance of the PortCommandHandler class. Declaration public PortCommandHandler(ActiveDataConnectionFeatureFactory dataConnectionFeatureFactory, IOptions<PortCommandOptions> options) Parameters Type Name Description ActiveDataConnectionFeatureFactory dataConnectionFeatureFactory The factory to create a data connection feature for active connections. IOptions < PortCommandOptions > options The options for this command. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.StatCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.StatCommandHandler.html",
    "title": "Class StatCommandHandler | FTP Server documentation",
    "keywords": "Class StatCommandHandler The STAT command handler. Inheritance Object FtpCommandHandler StatCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"STAT\", false, true)] public class StatCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source StatCommandHandler(IFtpServer, IBackgroundTransferWorker) Initializes a new instance of the StatCommandHandler class. Declaration public StatCommandHandler(IFtpServer server, IBackgroundTransferWorker backgroundTransferWorker) Parameters Type Name Description IFtpServer server The FTP server. IBackgroundTransferWorker backgroundTransferWorker The background transfer worker service. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.StorCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.StorCommandHandler.html",
    "title": "Class StorCommandHandler | FTP Server documentation",
    "keywords": "Class StorCommandHandler This class implements the STOR command (4.1.3.). Inheritance Object FtpCommandHandler StorCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"STOR\", true, true)] public class StorCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source StorCommandHandler(IBackgroundTransferWorker, Nullable<ILogger<StorCommandHandler>>) Initializes a new instance of the StorCommandHandler class. Declaration public StorCommandHandler(IBackgroundTransferWorker backgroundTransferWorker, ILogger<StorCommandHandler>? logger = default(ILogger<StorCommandHandler>? )) Parameters Type Name Description IBackgroundTransferWorker backgroundTransferWorker The background transfer worker service. Nullable < ILogger < StorCommandHandler >> logger The logger. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Authorization.AuthorizationMechanism.html": {
    "href": "api/FubarDev.FtpServer.Authorization.AuthorizationMechanism.html",
    "title": "Class AuthorizationMechanism | FTP Server documentation",
    "keywords": "Class AuthorizationMechanism The base class for an authorization mechanism. Inheritance Object AuthorizationMechanism PasswordAuthorization Implements IAuthorizationMechanism Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class AuthorizationMechanism : IAuthorizationMechanism Constructors | Improve this Doc View Source AuthorizationMechanism(IFtpConnection) Initializes a new instance of the AuthorizationMechanism class. Declaration protected AuthorizationMechanism(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The required FTP connection. Properties | Improve this Doc View Source Connection Gets the FTP connection. Declaration public IFtpConnection Connection { get; } Property Value Type Description IFtpConnection Methods | Improve this Doc View Source HandleAcctAsync(String, CancellationToken) Declaration public abstract Task<IFtpResponse> HandleAcctAsync(string account, CancellationToken cancellationToken) Parameters Type Name Description String account CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source HandlePassAsync(String, CancellationToken) Declaration public abstract Task<IFtpResponse> HandlePassAsync(string password, CancellationToken cancellationToken) Parameters Type Name Description String password CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source HandleUserAsync(String, CancellationToken) Declaration public abstract Task<IFtpResponse> HandleUserAsync(string userIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String userIdentifier CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > | Improve this Doc View Source Reset(Nullable<IAuthenticationMechanism>) Declaration public abstract void Reset(IAuthenticationMechanism? authenticationMechanism) Parameters Type Name Description Nullable < IAuthenticationMechanism > authenticationMechanism | Improve this Doc View Source T(String) Translates a message using the current catalog of the active connection. Declaration protected string T(string message) Parameters Type Name Description String message The message to translate. Returns Type Description String The translated message. | Improve this Doc View Source T(String, Object[]) Translates a message using the current catalog of the active connection. Declaration [StringFormatMethod(\"message\")] protected string T(string message, params object[] args) Parameters Type Name Description String message The message to translate. Object [] args The format arguments. Returns Type Description String The translated message. Implements IAuthorizationMechanism"
  },
  "api/FubarDev.FtpServer.ServerCommands.IServerCommand.html": {
    "href": "api/FubarDev.FtpServer.ServerCommands.IServerCommand.html",
    "title": "Interface IServerCommand | FTP Server documentation",
    "keywords": "Interface IServerCommand Base interface for all server commands. Namespace : FubarDev.FtpServer.ServerCommands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IServerCommand"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.html",
    "title": "Namespace FubarDev.FtpServer.ListFormatters.Facts | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.ListFormatters.Facts Classes CreateFact The create fact. CurrentDirectoryFact The cdir fact. GenericFact A generic fact to be used when no predefined exists. ModifyFact The modify fact. ParentDirectoryFact The pdir fact. PermissionsFact The perm fact. SizeFact The size fact. TypeFact The type fact. Interfaces IFact The basic interface for a fact ( MLST )."
  },
  "api/FubarDev.FtpServer.IFtpDataConnection.html": {
    "href": "api/FubarDev.FtpServer.IFtpDataConnection.html",
    "title": "Interface IFtpDataConnection | FTP Server documentation",
    "keywords": "Interface IFtpDataConnection An FTP data connection. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpDataConnection Properties | Improve this Doc View Source LocalAddress Gets the local IP end point. Declaration IPEndPoint LocalAddress { get; } Property Value Type Description IPEndPoint | Improve this Doc View Source RemoteAddress Gets the remote IP end point. Declaration IPEndPoint RemoteAddress { get; } Property Value Type Description IPEndPoint | Improve this Doc View Source Stream Gets the stream for this data connection. Declaration Stream Stream { get; } Property Value Type Description Stream Methods | Improve this Doc View Source CloseAsync(CancellationToken) Closes the connection (and the stream). Declaration Task CloseAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task."
  },
  "api/FubarDev.FtpServer.IFtpControlStreamAdapter.html": {
    "href": "api/FubarDev.FtpServer.IFtpControlStreamAdapter.html",
    "title": "Interface IFtpControlStreamAdapter | FTP Server documentation",
    "keywords": "Interface IFtpControlStreamAdapter Adapter for the control stream. Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpControlStreamAdapter Methods | Improve this Doc View Source WrapAsync(Stream, CancellationToken) Wraps the control stream. Declaration Task<Stream> WrapAsync(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream The stream to wrap. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Stream > The task returning the new stream."
  },
  "api/FubarDev.FtpServer.FtpFileTypeInterpreterMode.html": {
    "href": "api/FubarDev.FtpServer.FtpFileTypeInterpreterMode.html",
    "title": "Enum FtpFileTypeInterpreterMode | FTP Server documentation",
    "keywords": "Enum FtpFileTypeInterpreterMode Format control (RFC 959 chapter 3.1.1.5). Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum FtpFileTypeInterpreterMode Fields Name Description AsaCarriageControl Carriage Control (ASA, 3.1.1.5.3). NonPrint Default format (3.1.1.5.1). Telnet Telnet format controls (3.1.1.5.2)."
  },
  "api/FubarDev.FtpServer.FtpFileType.html": {
    "href": "api/FubarDev.FtpServer.FtpFileType.html",
    "title": "Enum FtpFileType | FTP Server documentation",
    "keywords": "Enum FtpFileType FTP data type (3.1.1). Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum FtpFileType Fields Name Description Ascii ASCII data type (3.1.1.1.). Ebcdic EBCDIC data type (3.1.1.2.). Image IMAGE data type (3.1.1.3.). Local LOCAL data type (3.1.1.4.)."
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixFileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixFileSystem.html",
    "title": "Interface IUnixFileSystem | FTP Server documentation",
    "keywords": "Interface IUnixFileSystem The unix file system abstraction used by the FTP server. Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixFileSystem Properties | Improve this Doc View Source FileSystemEntryComparer Gets a string comparer for file system entry names. Declaration StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer Remarks Required to support case insensitive file systems. | Improve this Doc View Source Root Gets the root directory entry. Declaration IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Gets a value indicating whether this file system supports appending to a file. Declaration bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Gets a value indicating whether this file system supports deletion of non-empty directories. Declaration bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Appends data to a file. Declaration Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry The IUnixFileEntry to append data to. Nullable < Int64 > startPosition The start position - when it is null, the data is appended. Stream data The data stream to read from. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IBackgroundTransfer >> an optional IBackgroundTransfer when the transfer needs to happen in the background. | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Creates a file with the given fileName and data . Declaration Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory The directory to create the file in. String fileName The name of the new file. Stream data The Stream used to read the data for the new file. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IBackgroundTransfer >> an optional IBackgroundTransfer when the transfer needs to happen in the background. | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Creates a sub directory with the name directoryName in targetDirectory . Declaration Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory The directory to create the sub directory in. String directoryName The name of the new sub directory. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IUnixDirectoryEntry > The new IUnixDirectoryEntry . | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Gets a list of IUnixFileSystemEntry objects for a given directoryEntry . Declaration Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry The IUnixDirectoryEntry to get the file system entries for. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> The list of IUnixFileSystemEntry objects for a given directoryEntry . | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Gets a file system entry by name. Declaration Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry The IUnixDirectoryEntry to get the file system entry for. String name The name of the file system entry to search. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IUnixFileSystemEntry >> Returns the found IUnixFileSystemEntry . | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Moves a file system entry from parent to target . Declaration Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent The IUnixDirectoryEntry of source . IUnixFileSystemEntry source The IUnixFileSystemEntry to move. IUnixDirectoryEntry target The destination IUnixDirectoryEntry where source gets moved to. String fileName The new name of source . CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IUnixFileSystemEntry > Returns the new IUnixFileSystemEntry . | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Opens a file for reading. Declaration Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry The IUnixFileEntry to read from. Int64 startPosition The start position to read from. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Stream > The Stream to be used for reading. | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Replaces the contents of a file. Declaration Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry The IUnixFileEntry to replace the data for. Stream data The data to be written to the given fileEntry . CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Nullable < IBackgroundTransfer >> an optional IBackgroundTransfer when the transfer needs to happen in the background. | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Sets the modify/access/create timestamp of a file system item. Declaration Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry The IUnixFileSystemEntry to change the timestamp for. Nullable < DateTimeOffset > modify The modification timestamp. Nullable < DateTimeOffset > access The access timestamp. Nullable < DateTimeOffset > create The creation timestamp. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IUnixFileSystemEntry > The modified IUnixFileSystemEntry . | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Deletes a IUnixFileSystemEntry . Declaration Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry The IUnixFileSystemEntry to delete. CancellationToken cancellationToken The cancellation token. Returns Type Description Task The task where the underlying action is performed on. Remarks An implementation might decide to move the entry into the trash instead of deleting it. Extension Methods FileSystemExtensions.GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.GetDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchDirectoryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchFileAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) FileSystemExtensions.SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, Nullable<String>, CancellationToken) FileSystemExtensions.SearchEntryAsync(IUnixFileSystem, Stack<IUnixDirectoryEntry>, IReadOnlyList<String>, CancellationToken) PathSelector.SelectAsync(IUnixFileSystem, Nullable<String>, CancellationToken) PathSelector.SelectAsync(IUnixFileSystem, IEnumerable<IUnixDirectoryEntry>, Nullable<String>, CancellationToken)"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetFileSystemOptions.html",
    "title": "Class DotNetFileSystemOptions | FTP Server documentation",
    "keywords": "Class DotNetFileSystemOptions Options for the .NET API based file system access. Inheritance Object DotNetFileSystemOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public class DotNetFileSystemOptions Properties | Improve this Doc View Source AllowNonEmptyDirectoryDelete Gets or sets a value indicating whether deletion of non-empty directories is allowed. Declaration public bool AllowNonEmptyDirectoryDelete { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RootPath Gets or sets the root path for all users. Declaration public string? RootPath { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source StreamBufferSize Gets or sets the buffer size to be used in async IO methods. Declaration public int? StreamBufferSize { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundTransferStatus.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.BackgroundTransferStatus.html",
    "title": "Enum BackgroundTransferStatus | FTP Server documentation",
    "keywords": "Enum BackgroundTransferStatus The status of a single IBackgroundTransfer . Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public enum BackgroundTransferStatus Fields Name Description Enqueued Added to transfer queue. Finished Transfer finished. Transferring Transferring the data."
  },
  "api/FubarDev.FtpServer.Authentication.IAuthenticationMechanism.html": {
    "href": "api/FubarDev.FtpServer.Authentication.IAuthenticationMechanism.html",
    "title": "Interface IAuthenticationMechanism | FTP Server documentation",
    "keywords": "Interface IAuthenticationMechanism The interface for an authentication mechanism. Namespace : FubarDev.FtpServer.Authentication Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IAuthenticationMechanism Methods | Improve this Doc View Source CanHandle(String) Returns a value indicating whether a mechanism with the given methodIdentifier is supported by this implementor. Declaration bool CanHandle(string methodIdentifier) Parameters Type Name Description String methodIdentifier The method identifier. Returns Type Description Boolean true when the given methodIdentifier is supported by this implementor. | Improve this Doc View Source HandleAdatAsync(Byte[], CancellationToken) Processes the ADAT command. Declaration Task<IFtpResponse> HandleAdatAsync(byte[] data, CancellationToken cancellationToken) Parameters Type Name Description Byte [] data The data passed to the ADAT command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The response to return. | Improve this Doc View Source HandleAuthAsync(String, CancellationToken) Processes the AUTH command. Declaration Task<IFtpResponse> HandleAuthAsync(string methodIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String methodIdentifier The method identifier. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The response to return. Remarks If this handler doesn't support the passed methodIdentifier , then it should respond with either 502 or 504. | Improve this Doc View Source HandlePbszAsync(Int64, CancellationToken) Processes the PBSZ command. Declaration Task<IFtpResponse> HandlePbszAsync(long size, CancellationToken cancellationToken) Parameters Type Name Description Int64 size The protected buffer size passed to the PBSZ command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The response to return. | Improve this Doc View Source HandleProtAsync(String, CancellationToken) Processes the PROT command. Declaration Task<IFtpResponse> HandleProtAsync(string protCode, CancellationToken cancellationToken) Parameters Type Name Description String protCode The code passed to the PROT command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The response to return. | Improve this Doc View Source Reset() Resets the authentication mechanism. Declaration void Reset()"
  },
  "api/FubarDev.FtpServer.AccountManagement.FtpClaimTypes.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.FtpClaimTypes.html",
    "title": "Class FtpClaimTypes | FTP Server documentation",
    "keywords": "Class FtpClaimTypes Claim types for the FTP server. Inheritance Object FtpClaimTypes Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public static class FtpClaimTypes Fields | Improve this Doc View Source GroupId The URI for a claim that specifies the users Unix main group ID. Declaration public static readonly string GroupId Field Value Type Description String | Improve this Doc View Source HomePath The URI for a claim that specifies the users home path. Declaration public static readonly string HomePath Field Value Type Description String | Improve this Doc View Source UserId The URI for a claim that specifies the users Unix ID. Declaration public static readonly string UserId Field Value Type Description String"
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.FtpUserExtensions.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.FtpUserExtensions.html",
    "title": "Class FtpUserExtensions | FTP Server documentation",
    "keywords": "Class FtpUserExtensions Extension methods for IFtpUser . Inheritance Object FtpUserExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Compatibility Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Will only be used for compatibility purposes.\")] public static class FtpUserExtensions Methods | Improve this Doc View Source CreateClaimsPrincipal(IFtpUser) Create a claims principal for an IFtpUser . Declaration [Obsolete] public static ClaimsPrincipal CreateClaimsPrincipal(this IFtpUser user) Parameters Type Name Description IFtpUser user The user to create the claims principal for. Returns Type Description ClaimsPrincipal The new claims principal."
  },
  "api/FubarDev.FtpServer.Utilities.html": {
    "href": "api/FubarDev.FtpServer.Utilities.html",
    "title": "Namespace FubarDev.FtpServer.Utilities | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer.Utilities Classes DirectoryListingEnumerator Helps to enumerate a directory with virtual . and .. entries."
  },
  "api/FubarDev.FtpServer.Utilities.DirectoryListingEnumerator.html": {
    "href": "api/FubarDev.FtpServer.Utilities.DirectoryListingEnumerator.html",
    "title": "Class DirectoryListingEnumerator | FTP Server documentation",
    "keywords": "Class DirectoryListingEnumerator Helps to enumerate a directory with virtual . and .. entries. Inheritance Object DirectoryListingEnumerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Utilities Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class DirectoryListingEnumerator Constructors | Improve this Doc View Source DirectoryListingEnumerator(IEnumerable<IUnixFileSystemEntry>, IUnixFileSystem, Stack<IUnixDirectoryEntry>, Boolean) Initializes a new instance of the DirectoryListingEnumerator class. Declaration public DirectoryListingEnumerator(IEnumerable<IUnixFileSystemEntry> entries, IUnixFileSystem fileSystem, Stack<IUnixDirectoryEntry> pathEntries, bool returnDotEntries) Parameters Type Name Description IEnumerable < IUnixFileSystemEntry > entries The file system entries to enumerate. IUnixFileSystem fileSystem The file system of the file system entries. Stack < IUnixDirectoryEntry > pathEntries The path entries of the current directory. Boolean returnDotEntries true when this enumerator should return the dot entries. Properties | Improve this Doc View Source CurrentDirectory Gets the current directory. Declaration public IUnixDirectoryEntry CurrentDirectory { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source Entry Gets the file system entry. Declaration public IUnixFileSystemEntry Entry { get; } Property Value Type Description IUnixFileSystemEntry | Improve this Doc View Source FileSystem Gets the file system of the entries to be enumerated. Declaration public IUnixFileSystem FileSystem { get; } Property Value Type Description IUnixFileSystem | Improve this Doc View Source GrandParentDirectory Gets the grand parent directory. Declaration public IUnixDirectoryEntry? GrandParentDirectory { get; } Property Value Type Description Nullable < IUnixDirectoryEntry > | Improve this Doc View Source IsDotEntry Gets a value indicating whether the current entry is either the . or .. entry. Declaration public bool IsDotEntry { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets the name of the entry which might be different from the original entries name. Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source ParentDirectory Gets the parent directory. Declaration public IUnixDirectoryEntry? ParentDirectory { get; } Property Value Type Description Nullable < IUnixDirectoryEntry > Methods | Improve this Doc View Source GetFullPath(String) Gets the full path for a given name. Declaration public string GetFullPath(string name) Parameters Type Name Description String name The name to get the full path for. Returns Type Description String The full path. | Improve this Doc View Source MoveNext() Called to enumerate the next directory listing entry. Declaration public bool MoveNext() Returns Type Description Boolean true when there is a value for Entry and Name ."
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.ResumeConnectionServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.ResumeConnectionServerCommandHandler.html",
    "title": "Class ResumeConnectionServerCommandHandler | FTP Server documentation",
    "keywords": "Class ResumeConnectionServerCommandHandler Handler for the ResumeConnectionServerCommand . Inheritance Object ResumeConnectionServerCommandHandler Implements IServerCommandHandler < ResumeConnectionServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class ResumeConnectionServerCommandHandler : IServerCommandHandler<ResumeConnectionServerCommand> Constructors | Improve this Doc View Source ResumeConnectionServerCommandHandler(IFtpConnectionAccessor, Nullable<ILogger<ResumeConnectionServerCommandHandler>>) Initializes a new instance of the ResumeConnectionServerCommandHandler class. Declaration public ResumeConnectionServerCommandHandler(IFtpConnectionAccessor connectionAccessor, ILogger<ResumeConnectionServerCommandHandler>? logger = default(ILogger<ResumeConnectionServerCommandHandler>? )) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Nullable < ILogger < ResumeConnectionServerCommandHandler >> logger The logger. Methods | Improve this Doc View Source ExecuteAsync(ResumeConnectionServerCommand, CancellationToken) Declaration public Task ExecuteAsync(ResumeConnectionServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description ResumeConnectionServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.ServerCommandHandlers.PauseConnectionServerCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.ServerCommandHandlers.PauseConnectionServerCommandHandler.html",
    "title": "Class PauseConnectionServerCommandHandler | FTP Server documentation",
    "keywords": "Class PauseConnectionServerCommandHandler Handler for the PauseConnectionServerCommand . Inheritance Object PauseConnectionServerCommandHandler Implements IServerCommandHandler < PauseConnectionServerCommand > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ServerCommandHandlers Assembly : FubarDev.FtpServer.dll Syntax public class PauseConnectionServerCommandHandler : IServerCommandHandler<PauseConnectionServerCommand> Constructors | Improve this Doc View Source PauseConnectionServerCommandHandler(IFtpConnectionAccessor, Nullable<ILogger<PauseConnectionServerCommandHandler>>) Initializes a new instance of the PauseConnectionServerCommandHandler class. Declaration public PauseConnectionServerCommandHandler(IFtpConnectionAccessor connectionAccessor, ILogger<PauseConnectionServerCommandHandler>? logger = default(ILogger<PauseConnectionServerCommandHandler>? )) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Nullable < ILogger < PauseConnectionServerCommandHandler >> logger The logger. Methods | Improve this Doc View Source ExecuteAsync(PauseConnectionServerCommand, CancellationToken) Declaration public Task ExecuteAsync(PauseConnectionServerCommand command, CancellationToken cancellationToken) Parameters Type Name Description PauseConnectionServerCommand command CancellationToken cancellationToken Returns Type Description Task Implements IServerCommandHandler<TCommand>"
  },
  "api/FubarDev.FtpServer.FileSystem.S3.S3FileSystem.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.S3.S3FileSystem.html",
    "title": "Class S3FileSystem | FTP Server documentation",
    "keywords": "Class S3FileSystem The S3-based file system implementation. Inheritance Object S3FileSystem Implements IUnixFileSystem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.S3 Assembly : FubarDev.FtpServer.FileSystem.S3.dll Syntax public sealed class S3FileSystem : IUnixFileSystem Constructors | Improve this Doc View Source S3FileSystem(S3FileSystemOptions, String) Initializes a new instance of the S3FileSystem class. Declaration public S3FileSystem(S3FileSystemOptions options, string rootDirectory) Parameters Type Name Description S3FileSystemOptions options The provider options. String rootDirectory The root directory for the current user. Properties | Improve this Doc View Source FileSystemEntryComparer Declaration public StringComparer FileSystemEntryComparer { get; } Property Value Type Description StringComparer | Improve this Doc View Source Root Declaration public IUnixDirectoryEntry Root { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source SupportsAppend Declaration public bool SupportsAppend { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsNonEmptyDirectoryDelete Declaration public bool SupportsNonEmptyDirectoryDelete { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendAsync(IUnixFileEntry, Nullable<Int64>, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > AppendAsync(IUnixFileEntry fileEntry, long? startPosition, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Nullable < Int64 > startPosition Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateAsync(IUnixDirectoryEntry, String, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > CreateAsync(IUnixDirectoryEntry targetDirectory, string fileName, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String fileName Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source CreateDirectoryAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixDirectoryEntry> CreateDirectoryAsync(IUnixDirectoryEntry targetDirectory, string directoryName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry targetDirectory String directoryName CancellationToken cancellationToken Returns Type Description Task < IUnixDirectoryEntry > | Improve this Doc View Source GetEntriesAsync(IUnixDirectoryEntry, CancellationToken) Declaration public Task<IReadOnlyList<IUnixFileSystemEntry>> GetEntriesAsync(IUnixDirectoryEntry directoryEntry, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IUnixFileSystemEntry >> | Improve this Doc View Source GetEntryByNameAsync(IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry? > GetEntryByNameAsync(IUnixDirectoryEntry directoryEntry, string name, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry directoryEntry String name CancellationToken cancellationToken Returns Type Description Task < Nullable < IUnixFileSystemEntry >> | Improve this Doc View Source MoveAsync(IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixDirectoryEntry, String, CancellationToken) Declaration public Task<IUnixFileSystemEntry> MoveAsync(IUnixDirectoryEntry parent, IUnixFileSystemEntry source, IUnixDirectoryEntry target, string fileName, CancellationToken cancellationToken) Parameters Type Name Description IUnixDirectoryEntry parent IUnixFileSystemEntry source IUnixDirectoryEntry target String fileName CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source OpenReadAsync(IUnixFileEntry, Int64, CancellationToken) Declaration public Task<Stream> OpenReadAsync(IUnixFileEntry fileEntry, long startPosition, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Int64 startPosition CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source ReplaceAsync(IUnixFileEntry, Stream, CancellationToken) Declaration public Task<IBackgroundTransfer? > ReplaceAsync(IUnixFileEntry fileEntry, Stream data, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileEntry fileEntry Stream data CancellationToken cancellationToken Returns Type Description Task < Nullable < IBackgroundTransfer >> | Improve this Doc View Source SetMacTimeAsync(IUnixFileSystemEntry, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, CancellationToken) Declaration public Task<IUnixFileSystemEntry> SetMacTimeAsync(IUnixFileSystemEntry entry, DateTimeOffset? modify, DateTimeOffset? access, DateTimeOffset? create, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry Nullable < DateTimeOffset > modify Nullable < DateTimeOffset > access Nullable < DateTimeOffset > create CancellationToken cancellationToken Returns Type Description Task < IUnixFileSystemEntry > | Improve this Doc View Source UnlinkAsync(IUnixFileSystemEntry, CancellationToken) Declaration public Task UnlinkAsync(IUnixFileSystemEntry entry, CancellationToken cancellationToken) Parameters Type Name Description IUnixFileSystemEntry entry CancellationToken cancellationToken Returns Type Description Task Implements IUnixFileSystem"
  },
  "api/FubarDev.FtpServer.CommandHandlers.HelpCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.HelpCommandHandler.html",
    "title": "Class HelpCommandHandler | FTP Server documentation",
    "keywords": "Class HelpCommandHandler The HELP command handler. Inheritance Object FtpCommandHandler HelpCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"HELP\", false, false)] public class HelpCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.XrmdCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.XrmdCommandHandler.html",
    "title": "Class XrmdCommandHandler | FTP Server documentation",
    "keywords": "Class XrmdCommandHandler Implements the XRMD command. Inheritance Object FtpCommandHandler XrmdCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"XRMD\", false, true)] public class XrmdCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.FileSystem.PathEnumerator.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.PathEnumerator.html",
    "title": "Class PathEnumerator | FTP Server documentation",
    "keywords": "Class PathEnumerator Enumerates the parts of a path. Inheritance Object PathEnumerator Implements IEnumerable < String > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PathEnumerator : IEnumerable<string>, IEnumerable Constructors | Improve this Doc View Source PathEnumerator(Nullable<String>) Initializes a new instance of the PathEnumerator class. Declaration public PathEnumerator(string? path) Parameters Type Name Description Nullable < String > path The path to enumerate. Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < String > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods PathNormalizer.NormalizePath(IEnumerable<String>, Nullable<IEnumerable<String>>)"
  },
  "api/FubarDev.FtpServer.FtpLoginStateMachine.html": {
    "href": "api/FubarDev.FtpServer.FtpLoginStateMachine.html",
    "title": "Class FtpLoginStateMachine | FTP Server documentation",
    "keywords": "Class FtpLoginStateMachine A state machine for FTP logins. Inheritance Object FtpStateMachine < SecurityStatus > FtpLoginStateMachine Implements IFtpLoginStateMachine IFtpStateMachine < SecurityStatus > Inherited Members FtpStateMachine<SecurityStatus>.Status FtpStateMachine<SecurityStatus>.Connection FtpStateMachine<SecurityStatus>.ExecuteAsync(FtpCommand, CancellationToken) FtpStateMachine<SecurityStatus>.SetStatus(SecurityStatus) FtpStateMachine<SecurityStatus>.GetPossibleTransitions(SecurityStatus) FtpStateMachine<SecurityStatus>.T(String) FtpStateMachine<SecurityStatus>.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpLoginStateMachine : FtpStateMachine<SecurityStatus>, IFtpLoginStateMachine, IFtpStateMachine<SecurityStatus> Constructors | Improve this Doc View Source FtpLoginStateMachine(IFtpConnection, IFtpHostSelector) Initializes a new instance of the FtpLoginStateMachine class. Declaration public FtpLoginStateMachine(IFtpConnection connection, IFtpHostSelector hostSelector) Parameters Type Name Description IFtpConnection connection The FTP connection. IFtpHostSelector hostSelector The FTP host selector. Properties | Improve this Doc View Source SelectedAuthenticationMechanism Declaration public IAuthenticationMechanism? SelectedAuthenticationMechanism { get; } Property Value Type Description Nullable < IAuthenticationMechanism > | Improve this Doc View Source SelectedAuthorizationMechanism Declaration public IAuthorizationMechanism? SelectedAuthorizationMechanism { get; } Property Value Type Description Nullable < IAuthorizationMechanism > | Improve this Doc View Source SelectedHost Gets the selected host. Declaration public IFtpHost SelectedHost { get; } Property Value Type Description IFtpHost Methods | Improve this Doc View Source Activate(IAuthenticationMechanism) Declaration public void Activate(IAuthenticationMechanism authenticationMechanism) Parameters Type Name Description IAuthenticationMechanism authenticationMechanism | Improve this Doc View Source ExecuteCommandAsync(FtpCommand, CancellationToken) Declaration protected override Task<IFtpResponse? > ExecuteCommandAsync(FtpCommand ftpCommand, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FtpCommand ftpCommand CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FubarDev.FtpServer.FtpStateMachine<FubarDev.FtpServer.SecurityStatus>.ExecuteCommandAsync(FubarDev.FtpServer.FtpCommand, System.Threading.CancellationToken) | Improve this Doc View Source OnStatusChanged(SecurityStatus, SecurityStatus) Declaration protected override void OnStatusChanged(SecurityStatus from, SecurityStatus to) Parameters Type Name Description SecurityStatus from SecurityStatus to Overrides FubarDev.FtpServer.FtpStateMachine<FubarDev.FtpServer.SecurityStatus>.OnStatusChanged(FubarDev.FtpServer.SecurityStatus, FubarDev.FtpServer.SecurityStatus) | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides FubarDev.FtpServer.FtpStateMachine<FubarDev.FtpServer.SecurityStatus>.Reset() | Improve this Doc View Source UnhandledCommandAsync(FtpCommand, CancellationToken) Called when the command couldn't be handled. Declaration protected virtual Task<IFtpResponse> UnhandledCommandAsync(FtpCommand ftpCommand, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand ftpCommand The FTP command causing the problem. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IFtpResponse > The FTP response to be returned. Implements IFtpLoginStateMachine IFtpStateMachine<TStatus>"
  },
  "api/FubarDev.FtpServer.html": {
    "href": "api/FubarDev.FtpServer.html",
    "title": "Namespace FubarDev.FtpServer | FTP Server documentation",
    "keywords": "Namespace FubarDev.FtpServer Classes Address Abstraction for an IP address. AuthTlsOptions Options for SSL/TLS connections. ClaimsIdentityExtensions Extension methods for ClaimsIdentity . ClaimsPrincipalExtensions Extension methods for ClaimsPrincipal . ConnectionEventArgs Event arguments for a connection event. ConnectionExtensions Extension methods for IFtpConnection . DotNetFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . FtpCommand FTP command with argument. FtpCommandCollector Collects FTP commands using the current Encoding . FtpCommandHandlerContext The context in which an FTP command gets executed. FtpConnection This class represents a FTP connection. FtpConnectionAccessor Accessor for the active FTP connection. FtpConnectionContext The FTP connection context. FtpConnectionData Common data for a IFtpConnection . FtpConnectionOptions Options for the FTP connection. FtpContext The context in which the command gets executed. FtpFeatureFunctionAttribute Selects a function to be used to create the FEAT text. FtpFeatureTextAttribute Defines a text to be sent by the FEAT command. FtpLoginStateMachine A state machine for FTP logins. FtpResponse FTP response. FtpResponseLine Information about a line to be sent to the client. FtpResponseList An FTP response for lists. FtpResponseList<TStatus> Base class for FTP response lists. FtpResponseTextBlock An implementation of IFtpResponse that is usable for the FTP servers banner message. FtpServer The portable FTP server. FtpServerBuilderExtensions Extension methods for IFtpServerBuilder . FtpServerBuilderExtensionsForChecks Extension methods for IFtpServerBuilder . FtpServerHost Simple IFtpServerHost implementation. FtpServerOptions The FTP server options. FtpStateMachine<TStatus> A base class for a state machine that's triggered by FTP commands. FtpStateMachine<TStatus>.Transition A class representing a transition. FtpTransferMode FTP transfer mode (RFC 959, 3.4.). GenericFeatureInfo Generic feature information. GoogleDriveFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . HostInfo Record for a host name/address. InMemoryFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . ListenerStartedEventArgs Event arguments for a started listener. MultiBindingTcpListener Allows binding to a host name, which in turn may resolve to multiple IP addresses. PasvCommandOptions Options for the PASV and EPSV commands. PasvListener The default implementation of the IPasvListener interface. PasvListenerFactory Creates TcpListeners for use with PASV commands. PasvListenerOptions IP address and port range to be used by the PASV / EPSV commands. PermissionsExtensions Extension methods for IUnixPermissions . PortCommandOptions Options for the PORT command. S3FtpServerBuilderExtensions Extension methods for IFtpServerBuilder . SimplePasvAddressResolver The default implementation of the SimplePasvAddressResolver . SimplePasvOptions Options for the SimplePasvAddressResolver . SingleFtpHostSelector A simple implementation of the IFtpHostSelector interface. SystCommandOptions Options for the SYST command. TcpSocketClientAccessor Accessor to set/get the current TcpClient . TelnetInputParser<T> Filters the TELNET commands usually sent before an ABOR command. UnixFsFtpServerBuilderExtensions Extension methods for IFtpServerBuilder . Interfaces IAccountInformation Information about the account associated to a connection. IBackgroundCommandHandler Interface for asynchronous processing of an FTP command. IFeatureHost Interface for something that may host FTP features. IFeatureInfo Defines a feature and its handler. IFtpCommandBase The base interface for command handlers and extensions. IFtpCommandHandler Interface that an FTP command handler has to implement. IFtpCommandHandlerExtension Interface for command handler extensions. IFtpConnection The interface for an FTP connection. IFtpConnectionAccessor Accessor to get/set the current (scoped) FTP connection. IFtpConnectionKeepAlive Interface to ensure that a connection keeps alive. IFtpControlStreamAdapter Adapter for the control stream. IFtpDataConnection An FTP data connection. IFtpHost Information about an FTP host. IFtpHostSelector Interface to select an FTP host or get the selected FTP host. IFtpLoginStateMachine Interface for a FTP login state machine. IFtpMiddleware FTP middleware. IFtpResponse Base interface to get the response for an FTP command. IFtpServer The interface that must be implemented by the FTP server. IFtpServerBuilder Base interface for FubarDev.FtpServer configuration. IFtpServerHost Interface for a simple FTP server host. IFtpServerStatistics Statistics about the FTP server. IFtpService Defines methods for services required to run the FTP server. IFtpStateMachine<TStatus> Interface for a state machine for the FTP server. IListFormatter Interface that provides the text to output for the LIST and NLST commands. IPasvAddressResolver Interface to get the options for the PASV / EPSV commands. IPasvListener Wraps a TCPListener so we can easily use it in our commands that require a passive data connection. IPasvListenerFactory Creates correctly configured IPasvListener . IPausableFtpService Interface for an FTP service that can be paused. Enums ConnectionStatus The status of the current connection. FtpFileType FTP data type (3.1.1). FtpFileTypeInterpreterMode Format control (RFC 959 chapter 3.1.1.5). FtpServiceStatus The current status of the IPausableFtpService . SecurityActionResult Default status codes for the FTP security extensions according to RFC 2228. SecurityStatus The states of the FTP login state machine. Delegates CloseEncryptedStreamDelegate Closes an encrypted stream. ConnectionInitAsyncDelegate Async delegate to initialize a connection. CreateEncryptedStreamDelegate A delegate that's used to create an encrypted stream ( CreateEncryptedStream ). FtpRequestDelegate The delegate for the next middleware for the current request. FtpResponseAfterWriteAsyncDelegate Delegate to be called after a response was written."
  },
  "api/FubarDev.FtpServer.AccountManagement.Compatibility.AnonymousClaimsFtpUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Compatibility.AnonymousClaimsFtpUser.html",
    "title": "Class AnonymousClaimsFtpUser | FTP Server documentation",
    "keywords": "Class AnonymousClaimsFtpUser Implementation of IAnonymousFtpUser which uses ClaimsPrincipal under the hoods. Inheritance Object ClaimsFtpUser AnonymousClaimsFtpUser Implements IAnonymousFtpUser IFtpUser Inherited Members ClaimsFtpUser.Name ClaimsFtpUser.IsInGroup(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Compatibility Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Will only be used for compatibility purposes.\")] public class AnonymousClaimsFtpUser : ClaimsFtpUser, IAnonymousFtpUser, IFtpUser Constructors | Improve this Doc View Source AnonymousClaimsFtpUser(ClaimsPrincipal) Initializes a new instance of the AnonymousClaimsFtpUser class. Declaration public AnonymousClaimsFtpUser(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The underlying claims principal. Properties | Improve this Doc View Source Email Declaration public string? Email { get; } Property Value Type Description Nullable < String > Implements IAnonymousFtpUser IFtpUser Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.SingleRootWithoutHomeAccountDirectoryQuery.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome.SingleRootWithoutHomeAccountDirectoryQuery.html",
    "title": "Class SingleRootWithoutHomeAccountDirectoryQuery | FTP Server documentation",
    "keywords": "Class SingleRootWithoutHomeAccountDirectoryQuery All users share the same root and none has a home directory. Inheritance Object SingleRootWithoutHomeAccountDirectoryQuery Implements IAccountDirectoryQuery Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.AccountManagement.Directories.SingleRootWithoutHome Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SingleRootWithoutHomeAccountDirectoryQuery : IAccountDirectoryQuery Constructors | Improve this Doc View Source SingleRootWithoutHomeAccountDirectoryQuery(IOptions<SingleRootWithoutHomeAccountDirectoryQueryOptions>) Initializes a new instance of the SingleRootWithoutHomeAccountDirectoryQuery class. Declaration public SingleRootWithoutHomeAccountDirectoryQuery(IOptions<SingleRootWithoutHomeAccountDirectoryQueryOptions> options) Parameters Type Name Description IOptions < SingleRootWithoutHomeAccountDirectoryQueryOptions > options The options. Methods | Improve this Doc View Source GetDirectories(IAccountInformation) Declaration public IAccountDirectories GetDirectories(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description IAccountDirectories Implements IAccountDirectoryQuery"
  },
  "api/FubarDev.FtpServer.FileSystem.SearchResult-1.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.SearchResult-1.html",
    "title": "Class SearchResult<T> | FTP Server documentation",
    "keywords": "Class SearchResult<T> The result of a file system search operation. Inheritance Object SearchResult<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SearchResult<T> where T : class, IUnixFileSystemEntry Type Parameters Name Description T The type of the found file system entry. Constructors | Improve this Doc View Source SearchResult(IUnixDirectoryEntry, Nullable<T>, Nullable<String>) Initializes a new instance of the SearchResult<T> class. Declaration public SearchResult(IUnixDirectoryEntry directoryEntry, T? fileEntry, string? fileName) Parameters Type Name Description IUnixDirectoryEntry directoryEntry The directory entry of the found fileEntry . Nullable <T> fileEntry The found IUnixFileSystemEntry . Nullable < String > fileName The name of the IUnixFileSystemEntry to be searched for within the directoryEntry . Properties | Improve this Doc View Source Directory Gets the IUnixDirectoryEntry where the FileName was searched. Declaration public IUnixDirectoryEntry Directory { get; } Property Value Type Description IUnixDirectoryEntry | Improve this Doc View Source Entry Gets the found IUnixFileSystemEntry . Declaration public T? Entry { get; } Property Value Type Description Nullable <T> Remarks null when the target entry could not be found. | Improve this Doc View Source FileName Gets the name of the Entry . Declaration public string? FileName { get; } Property Value Type Description Nullable < String > Remarks null when the found entry is a ROOT entry."
  },
  "api/FubarDev.FtpServer.FtpResponseList.html": {
    "href": "api/FubarDev.FtpServer.FtpResponseList.html",
    "title": "Class FtpResponseList | FTP Server documentation",
    "keywords": "Class FtpResponseList An FTP response for lists. Inheritance Object FtpResponseList < IEnumerator < String >> FtpResponseList Implements IFtpResponse Inherited Members FtpResponseList<IEnumerator<String>>.Code FtpResponseList<IEnumerator<String>>.AfterWriteAction FtpResponseList<IEnumerator<String>>.StartMessage FtpResponseList<IEnumerator<String>>.EndMessage FtpResponseList<IEnumerator<String>>.ToString() FtpResponseList<IEnumerator<String>>.GetNextLineAsync(Nullable<Object>, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpResponseList : FtpResponseList<IEnumerator<string>>, IFtpResponse Constructors | Improve this Doc View Source FtpResponseList(Int32, String, String, IEnumerable<String>) Initializes a new instance of the FtpResponseList class. Declaration public FtpResponseList(int code, string startMessage, string endMessage, IEnumerable<string> lines) Parameters Type Name Description Int32 code The status code. String startMessage The message in the start line. String endMessage The message in the end line. IEnumerable < String > lines The lines in between (without whitespace at the beginning). Methods | Improve this Doc View Source CreateInitialStatusAsync(CancellationToken) Declaration protected override Task<IEnumerator<string>> CreateInitialStatusAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerator < String >> Overrides FubarDev.FtpServer.FtpResponseList<System.Collections.Generic.IEnumerator<System.String>>.CreateInitialStatusAsync(System.Threading.CancellationToken) | Improve this Doc View Source GetNextLineAsync(IEnumerator<String>, CancellationToken) Declaration protected override Task<string? > GetNextLineAsync(IEnumerator<string> status, CancellationToken cancellationToken) Parameters Type Name Description IEnumerator < String > status CancellationToken cancellationToken Returns Type Description Task < Nullable < String >> Overrides FubarDev.FtpServer.FtpResponseList<System.Collections.Generic.IEnumerator<System.String>>.GetNextLineAsync(System.Collections.Generic.IEnumerator<System.String>, System.Threading.CancellationToken) Implements IFtpResponse"
  },
  "api/FubarDev.FtpServer.FileSystem.Error.FileSystemException.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.FileSystemException.html",
    "title": "Class FileSystemException | FTP Server documentation",
    "keywords": "Class FileSystemException Represents an error condition the underlying file system wants to communicate to the client. Inheritance Object Exception FileSystemException BadParameterException FileNameNotAllowedException FileUnavailableException StorageExceededException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.FileSystem.Error Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public abstract class FileSystemException : Exception, ISerializable Constructors | Improve this Doc View Source FileSystemException() Initializes a new instance of the FileSystemException class. Declaration protected FileSystemException() | Improve this Doc View Source FileSystemException(String) Initializes a new instance of the FileSystemException class. Declaration protected FileSystemException(string message) Parameters Type Name Description String message The error message. | Improve this Doc View Source FileSystemException(String, Exception) Initializes a new instance of the FileSystemException class. Declaration protected FileSystemException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The underlying exception. Properties | Improve this Doc View Source FtpErrorCode Gets the FTP error code. Declaration public abstract int FtpErrorCode { get; } Property Value Type Description Int32 | Improve this Doc View Source FtpErrorName Gets a human-readable generic error description. Declaration public abstract string FtpErrorName { get; } Property Value Type Description String Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FubarDev.FtpServer.BackgroundTransfer.ITemporaryData.html": {
    "href": "api/FubarDev.FtpServer.BackgroundTransfer.ITemporaryData.html",
    "title": "Interface ITemporaryData | FTP Server documentation",
    "keywords": "Interface ITemporaryData Temporary data holder. Inherited Members IDisposable.Dispose() Namespace : FubarDev.FtpServer.BackgroundTransfer Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface ITemporaryData : IDisposable Remarks Temporary data gets removed from the system when it's disposed. Properties | Improve this Doc View Source Size Gets the size of the temporary data. Declaration long Size { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source OpenAsync() Opens the temporary data and returns a stream. Declaration Task<Stream> OpenAsync() Returns Type Description Task < Stream > The stream containig the temporary data."
  },
  "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionInformation.html": {
    "href": "api/FubarDev.FtpServer.CommandExtensions.IFtpCommandHandlerExtensionInformation.html",
    "title": "Interface IFtpCommandHandlerExtensionInformation | FTP Server documentation",
    "keywords": "Interface IFtpCommandHandlerExtensionInformation Interface for an FTP command handler extension. Inherited Members IFtpCommandInformation.Name IFtpCommandInformation.IsLoginRequired IFtpCommandInformation.IsAbortable Namespace : FubarDev.FtpServer.CommandExtensions Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IFtpCommandHandlerExtensionInformation : IFtpCommandInformation Properties | Improve this Doc View Source ExtensionOf Gets the FTP command handler that this one is an extension of. Declaration IFtpCommandHandlerInformation ExtensionOf { get; } Property Value Type Description IFtpCommandHandlerInformation | Improve this Doc View Source Type Gets the type of the FTP command handler. Declaration Type Type { get; } Property Value Type Description Type"
  },
  "api/FubarDev.FtpServer.CommandHandlers.FeatCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.FeatCommandHandler.html",
    "title": "Class FeatCommandHandler | FTP Server documentation",
    "keywords": "Class FeatCommandHandler Implements the FEAT command. Inheritance Object FtpCommandHandler FeatCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"FEAT\", false, false)] public class FeatCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source FeatCommandHandler(IFeatureInfoProvider, IFtpCommandHandlerProvider) Initializes a new instance of the FeatCommandHandler class. Declaration public FeatCommandHandler(IFeatureInfoProvider featureInfoProvider, IFtpCommandHandlerProvider commandHandlerProvider) Parameters Type Name Description IFeatureInfoProvider featureInfoProvider Provider for feature information. IFtpCommandHandlerProvider commandHandlerProvider The FTP command handler provider. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.MlstCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.MlstCommandHandler.html",
    "title": "Class MlstCommandHandler | FTP Server documentation",
    "keywords": "Class MlstCommandHandler The implementation of the MLST and MLSD commands. Inheritance Object FtpCommandHandler MlstCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"MLST\", false, true)] [FtpCommandHandler(\"MLSD\", false, true)] [FtpFeatureFunction(\"FeatureStatus\")] public class MlstCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source MlstCommandHandler(Nullable<ILogger<MlstCommandHandler>>) Initializes a new instance of the MlstCommandHandler class. Declaration public MlstCommandHandler(ILogger<MlstCommandHandler>? logger = default(ILogger<MlstCommandHandler>? )) Parameters Type Name Description Nullable < ILogger < MlstCommandHandler >> logger The logger. Methods | Improve this Doc View Source FeatureStatus(IFtpConnection) Gets the feature string for the MFF command. Declaration public static string FeatureStatus(IFtpConnection connection) Parameters Type Name Description IFtpConnection connection The connection. Returns Type Description String The feature string. | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.CommandHandlers.UserCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.UserCommandHandler.html",
    "title": "Class UserCommandHandler | FTP Server documentation",
    "keywords": "Class UserCommandHandler Implements the USER command. Inheritance Object FtpCommandHandler UserCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"USER\", false, false)] public class UserCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.Features.Impl.BackgroundTaskLifetimeFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.Impl.BackgroundTaskLifetimeFeature.html",
    "title": "Class BackgroundTaskLifetimeFeature | FTP Server documentation",
    "keywords": "Class BackgroundTaskLifetimeFeature Default implementation of IBackgroundTaskLifetimeFeature . Inheritance Object BackgroundTaskLifetimeFeature Implements IBackgroundTaskLifetimeFeature Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Features.Impl Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class BackgroundTaskLifetimeFeature : IBackgroundTaskLifetimeFeature Constructors | Improve this Doc View Source BackgroundTaskLifetimeFeature(IFtpCommandBase, FtpCommand, Func<CancellationToken, Task>, CancellationToken) Initializes a new instance of the BackgroundTaskLifetimeFeature class. Declaration public BackgroundTaskLifetimeFeature(IFtpCommandBase commandHandler, FtpCommand command, Func<CancellationToken, Task> backgroundTask, CancellationToken cancellationToken) Parameters Type Name Description IFtpCommandBase commandHandler The FTP command handler. FtpCommand command The FTP command to be run in the background. Func < CancellationToken , Task > backgroundTask The task that gets run in the background. CancellationToken cancellationToken The cancellation token. Properties | Improve this Doc View Source Command Declaration public FtpCommand Command { get; } Property Value Type Description FtpCommand | Improve this Doc View Source Handler Declaration public IFtpCommandBase Handler { get; } Property Value Type Description IFtpCommandBase | Improve this Doc View Source Task Declaration public Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source Abort() Declaration public void Abort() Implements IBackgroundTaskLifetimeFeature"
  },
  "api/FubarDev.FtpServer.Features.Impl.ServerCommandFeature.html": {
    "href": "api/FubarDev.FtpServer.Features.Impl.ServerCommandFeature.html",
    "title": "Class ServerCommandFeature | FTP Server documentation",
    "keywords": "Class ServerCommandFeature Default implementation of the IServerCommandFeature . Inheritance Object ServerCommandFeature Implements IServerCommandFeature Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Features.Impl Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ServerCommandFeature : IServerCommandFeature Constructors | Improve this Doc View Source ServerCommandFeature(ChannelWriter<IServerCommand>) Initializes a new instance of the ServerCommandFeature class. Declaration public ServerCommandFeature(ChannelWriter<IServerCommand> serverCommandWriter) Parameters Type Name Description ChannelWriter < IServerCommand > serverCommandWriter The channel for sending the server commands. Properties | Improve this Doc View Source ServerCommandWriter Declaration public ChannelWriter<IServerCommand> ServerCommandWriter { get; } Property Value Type Description ChannelWriter < IServerCommand > Implements IServerCommandFeature"
  },
  "api/FubarDev.FtpServer.FileSystem.IUnixFileEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.IUnixFileEntry.html",
    "title": "Interface IUnixFileEntry | FTP Server documentation",
    "keywords": "Interface IUnixFileEntry A unix file entry. Inherited Members IUnixFileSystemEntry.Name IUnixFileSystemEntry.Permissions IUnixFileSystemEntry.LastWriteTime IUnixFileSystemEntry.CreatedTime IUnixFileSystemEntry.NumberOfLinks IUnixOwner.Owner IUnixOwner.Group Namespace : FubarDev.FtpServer.FileSystem Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public interface IUnixFileEntry : IUnixFileSystemEntry, IUnixOwner Properties | Improve this Doc View Source Size Gets the size of the file. Declaration long Size { get; } Property Value Type Description Int64"
  },
  "api/FubarDev.FtpServer.AccountManagement.IUnixUser.html": {
    "href": "api/FubarDev.FtpServer.AccountManagement.IUnixUser.html",
    "title": "Interface IUnixUser | FTP Server documentation",
    "keywords": "Interface IUnixUser Interface for unix user specific information. Inherited Members IFtpUser.Name IFtpUser.IsInGroup(String) Namespace : FubarDev.FtpServer.AccountManagement Assembly : FubarDev.FtpServer.Abstractions.dll Syntax [Obsolete(\"Use ClaimsPrincipal\")] public interface IUnixUser : IFtpUser Properties | Improve this Doc View Source GroupId Gets the group identifier. Declaration long GroupId { get; } Property Value Type Description Int64 | Improve this Doc View Source HomePath Gets the home path. Declaration string? HomePath { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source UserId Gets the user identifier. Declaration long UserId { get; } Property Value Type Description Int64 Extension Methods FtpUserExtensions.CreateClaimsPrincipal(IFtpUser)"
  },
  "api/FubarDev.FtpServer.Authorization.PasswordAuthorization.html": {
    "href": "api/FubarDev.FtpServer.Authorization.PasswordAuthorization.html",
    "title": "Class PasswordAuthorization | FTP Server documentation",
    "keywords": "Class PasswordAuthorization The default password authentication mechanism. Inheritance Object AuthorizationMechanism PasswordAuthorization Implements IAuthorizationMechanism Inherited Members AuthorizationMechanism.Connection AuthorizationMechanism.T(String) AuthorizationMechanism.T(String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Authorization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PasswordAuthorization : AuthorizationMechanism, IAuthorizationMechanism Constructors | Improve this Doc View Source PasswordAuthorization(IFtpConnection, IEnumerable<IMembershipProvider>, IEnumerable<IAuthorizationAction>, IFtpServerMessages) Initializes a new instance of the PasswordAuthorization class. Declaration public PasswordAuthorization(IFtpConnection connection, IEnumerable<IMembershipProvider> membershipProviders, IEnumerable<IAuthorizationAction> authorizationActions, IFtpServerMessages serverMessages) Parameters Type Name Description IFtpConnection connection The required FTP connection. IEnumerable < IMembershipProvider > membershipProviders The membership providers for password authorization. IEnumerable < IAuthorizationAction > authorizationActions Actions to be executed upon authorization. IFtpServerMessages serverMessages The FTP server messages. Methods | Improve this Doc View Source HandleAcctAsync(String, CancellationToken) Declaration public override Task<IFtpResponse> HandleAcctAsync(string account, CancellationToken cancellationToken) Parameters Type Name Description String account CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthorizationMechanism.HandleAcctAsync(String, CancellationToken) | Improve this Doc View Source HandlePassAsync(String, CancellationToken) Declaration public override Task<IFtpResponse> HandlePassAsync(string password, CancellationToken cancellationToken) Parameters Type Name Description String password CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthorizationMechanism.HandlePassAsync(String, CancellationToken) | Improve this Doc View Source HandleUserAsync(String, CancellationToken) Declaration public override Task<IFtpResponse> HandleUserAsync(string userIdentifier, CancellationToken cancellationToken) Parameters Type Name Description String userIdentifier CancellationToken cancellationToken Returns Type Description Task < IFtpResponse > Overrides AuthorizationMechanism.HandleUserAsync(String, CancellationToken) | Improve this Doc View Source Reset(Nullable<IAuthenticationMechanism>) Declaration public override void Reset(IAuthenticationMechanism? authenticationMechanism) Parameters Type Name Description Nullable < IAuthenticationMechanism > authenticationMechanism Overrides AuthorizationMechanism.Reset(Nullable<IAuthenticationMechanism>) Implements IAuthorizationMechanism"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.ModifyFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.ModifyFact.html",
    "title": "Class ModifyFact | FTP Server documentation",
    "keywords": "Class ModifyFact The modify fact. Inheritance Object ModifyFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ModifyFact : IFact Constructors | Improve this Doc View Source ModifyFact(DateTimeOffset) Initializes a new instance of the ModifyFact class. Declaration public ModifyFact(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp The modification time stamp. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Timestamp Gets the modification time stamp. Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.ParentDirectoryFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.ParentDirectoryFact.html",
    "title": "Class ParentDirectoryFact | FTP Server documentation",
    "keywords": "Class ParentDirectoryFact The pdir fact. Inheritance Object TypeFact ParentDirectoryFact Implements IFact Inherited Members TypeFact.Name TypeFact.Value Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class ParentDirectoryFact : TypeFact, IFact Constructors | Improve this Doc View Source ParentDirectoryFact() Initializes a new instance of the ParentDirectoryFact class. Declaration public ParentDirectoryFact() Implements IFact"
  },
  "api/FubarDev.FtpServer.CommandHandlers.DeleCommandHandler.html": {
    "href": "api/FubarDev.FtpServer.CommandHandlers.DeleCommandHandler.html",
    "title": "Class DeleCommandHandler | FTP Server documentation",
    "keywords": "Class DeleCommandHandler Implements the DELE command. Inheritance Object FtpCommandHandler DeleCommandHandler Implements IFtpCommandHandler IFtpCommandBase IFeatureHost Inherited Members FtpCommandHandler.Names FtpCommandHandler.IsLoginRequired FtpCommandHandler.IsAbortable FtpCommandHandler.CommandContext FtpCommandHandler.FtpContext FtpCommandHandler.Connection FtpCommandHandler.Data FtpCommandHandler.ServerMessages FtpCommandHandler.GetSupportedFeatures(IFtpConnection) FtpCommandHandler.GetExtensions() FtpCommandHandler.T(String) FtpCommandHandler.T(String, Nullable<Object>[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.CommandHandlers Assembly : FubarDev.FtpServer.Commands.dll Syntax [FtpCommandHandler(\"DELE\", false, true)] public class DeleCommandHandler : FtpCommandHandler, IFtpCommandHandler, IFtpCommandBase, IFeatureHost Constructors | Improve this Doc View Source DeleCommandHandler(Nullable<ILogger<DeleCommandHandler>>) Initializes a new instance of the DeleCommandHandler class. Declaration public DeleCommandHandler(ILogger<DeleCommandHandler>? logger = default(ILogger<DeleCommandHandler>? )) Parameters Type Name Description Nullable < ILogger < DeleCommandHandler >> logger The logger. Methods | Improve this Doc View Source Process(FtpCommand, CancellationToken) Declaration public override Task<IFtpResponse? > Process(FtpCommand command, CancellationToken cancellationToken) Parameters Type Name Description FtpCommand command CancellationToken cancellationToken Returns Type Description Task < Nullable < IFtpResponse >> Overrides FtpCommandHandler.Process(FtpCommand, CancellationToken) Implements IFtpCommandHandler IFtpCommandBase IFeatureHost"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.PermissionsFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.PermissionsFact.html",
    "title": "Class PermissionsFact | FTP Server documentation",
    "keywords": "Class PermissionsFact The perm fact. Inheritance Object PermissionsFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class PermissionsFact : IFact Constructors | Improve this Doc View Source PermissionsFact(IFtpUser, IUnixFileSystem, IUnixDirectoryEntry, IUnixFileEntry) Initializes a new instance of the PermissionsFact class. Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public PermissionsFact(IFtpUser user, IUnixFileSystem fileSystem, IUnixDirectoryEntry dir, IUnixFileEntry entry) Parameters Type Name Description IFtpUser user The current user. IUnixFileSystem fileSystem The current file system of the given entry . IUnixDirectoryEntry dir The current directory. IUnixFileEntry entry The file to create the permissions for. | Improve this Doc View Source PermissionsFact(IFtpUser, Nullable<IUnixDirectoryEntry>, IUnixDirectoryEntry) Initializes a new instance of the PermissionsFact class. Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public PermissionsFact(IFtpUser user, IUnixDirectoryEntry? dir, IUnixDirectoryEntry entry) Parameters Type Name Description IFtpUser user The current user. Nullable < IUnixDirectoryEntry > dir The current directory. IUnixDirectoryEntry entry The directory entry to get the permissions for. | Improve this Doc View Source PermissionsFact(ClaimsPrincipal, IUnixFileSystem, IUnixDirectoryEntry, IUnixFileEntry) Initializes a new instance of the PermissionsFact class. Declaration public PermissionsFact(ClaimsPrincipal user, IUnixFileSystem fileSystem, IUnixDirectoryEntry dir, IUnixFileEntry entry) Parameters Type Name Description ClaimsPrincipal user The current user. IUnixFileSystem fileSystem The current file system of the given entry . IUnixDirectoryEntry dir The current directory. IUnixFileEntry entry The file to create the permissions for. | Improve this Doc View Source PermissionsFact(ClaimsPrincipal, Nullable<IUnixDirectoryEntry>, IUnixDirectoryEntry) Initializes a new instance of the PermissionsFact class. Declaration public PermissionsFact(ClaimsPrincipal user, IUnixDirectoryEntry? dir, IUnixDirectoryEntry entry) Parameters Type Name Description ClaimsPrincipal user The current user. Nullable < IUnixDirectoryEntry > dir The current directory. IUnixDirectoryEntry entry The directory entry to get the permissions for. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.ListFormatters.Facts.SizeFact.html": {
    "href": "api/FubarDev.FtpServer.ListFormatters.Facts.SizeFact.html",
    "title": "Class SizeFact | FTP Server documentation",
    "keywords": "Class SizeFact The size fact. Inheritance Object SizeFact Implements IFact Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.ListFormatters.Facts Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class SizeFact : IFact Constructors | Improve this Doc View Source SizeFact(Int64) Initializes a new instance of the SizeFact class. Declaration public SizeFact(long size) Parameters Type Name Description Int64 size The file system entry size. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements IFact"
  },
  "api/FubarDev.FtpServer.Localization.DefaultFtpServerMessages.html": {
    "href": "api/FubarDev.FtpServer.Localization.DefaultFtpServerMessages.html",
    "title": "Class DefaultFtpServerMessages | FTP Server documentation",
    "keywords": "Class DefaultFtpServerMessages The default implementation of IFtpServerMessages . Inheritance Object DefaultFtpServerMessages Implements IFtpServerMessages Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Localization Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class DefaultFtpServerMessages : IFtpServerMessages Constructors | Improve this Doc View Source DefaultFtpServerMessages(IFtpConnectionAccessor) Initializes a new instance of the DefaultFtpServerMessages class. Declaration public DefaultFtpServerMessages(IFtpConnectionAccessor connectionAccessor) Parameters Type Name Description IFtpConnectionAccessor connectionAccessor The FTP connection accessor. Methods | Improve this Doc View Source GetBannerMessage() Declaration public IEnumerable<string> GetBannerMessage() Returns Type Description IEnumerable < String > | Improve this Doc View Source GetDirectoryChangedMessage(Stack<IUnixDirectoryEntry>) Declaration public IEnumerable<string> GetDirectoryChangedMessage(Stack<IUnixDirectoryEntry> path) Parameters Type Name Description Stack < IUnixDirectoryEntry > path Returns Type Description IEnumerable < String > | Improve this Doc View Source GetPasswordAuthorizationSuccessfulMessage(IAccountInformation) Declaration public IEnumerable<string> GetPasswordAuthorizationSuccessfulMessage(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description IEnumerable < String > Implements IFtpServerMessages"
  },
  "api/FubarDev.FtpServer.FileSystem.Error.BadParameterException.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.Error.BadParameterException.html",
    "title": "Class BadParameterException | FTP Server documentation",
    "keywords": "Class BadParameterException Command not implemented for that parameter. Inheritance Object Exception FileSystemException BadParameterException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : FubarDev.FtpServer.FileSystem.Error Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class BadParameterException : FileSystemException, ISerializable Constructors | Improve this Doc View Source BadParameterException() Initializes a new instance of the BadParameterException class. Declaration public BadParameterException() | Improve this Doc View Source BadParameterException(String) Initializes a new instance of the BadParameterException class. Declaration public BadParameterException(string message) Parameters Type Name Description String message The error message. | Improve this Doc View Source BadParameterException(String, Exception) Initializes a new instance of the BadParameterException class. Declaration public BadParameterException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The inner exception. Properties | Improve this Doc View Source FtpErrorCode Declaration public override int FtpErrorCode { get; } Property Value Type Description Int32 Overrides FileSystemException.FtpErrorCode | Improve this Doc View Source FtpErrorName Declaration public override string FtpErrorName { get; } Property Value Type Description String Overrides FileSystemException.FtpErrorName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemProvider.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemProvider.html",
    "title": "Class InMemoryFileSystemProvider | FTP Server documentation",
    "keywords": "Class InMemoryFileSystemProvider An implementation of an in-memory file system. Inheritance Object InMemoryFileSystemProvider Implements IFileSystemClassFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public class InMemoryFileSystemProvider : IFileSystemClassFactory Constructors | Improve this Doc View Source InMemoryFileSystemProvider(IOptions<InMemoryFileSystemOptions>, IAccountDirectoryQuery) Initializes a new instance of the InMemoryFileSystemProvider class. Declaration public InMemoryFileSystemProvider(IOptions<InMemoryFileSystemOptions> options, IAccountDirectoryQuery accountDirectoryQuery) Parameters Type Name Description IOptions < InMemoryFileSystemOptions > options The provider options. IAccountDirectoryQuery accountDirectoryQuery Interface to query account directories. Methods | Improve this Doc View Source Create(IAccountInformation) Declaration public Task<IUnixFileSystem> Create(IAccountInformation accountInformation) Parameters Type Name Description IAccountInformation accountInformation Returns Type Description Task < IUnixFileSystem > Implements IFileSystemClassFactory"
  },
  "api/FubarDev.FtpServer.Commands.FtpExecutionContext.html": {
    "href": "api/FubarDev.FtpServer.Commands.FtpExecutionContext.html",
    "title": "Class FtpExecutionContext | FTP Server documentation",
    "keywords": "Class FtpExecutionContext A specialized context for the IFtpCommandMiddleware . Inheritance Object FtpContext FtpExecutionContext Inherited Members FtpContext.Command FtpContext.Connection FtpContext.ServerCommandWriter Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.Commands Assembly : FubarDev.FtpServer.Abstractions.dll Syntax public class FtpExecutionContext : FtpContext Constructors | Improve this Doc View Source FtpExecutionContext(FtpContext, IFtpCommandBase, CancellationToken) Initializes a new instance of the FtpExecutionContext class. Declaration public FtpExecutionContext(FtpContext ftpContext, IFtpCommandBase commandHandler, CancellationToken commandAborted) Parameters Type Name Description FtpContext ftpContext The FTP context. IFtpCommandBase commandHandler The FTP command handler. CancellationToken commandAborted The cancellation token signalling an aborted command. Properties | Improve this Doc View Source CommandAborted Gets the cancellation token for an aborted command. Declaration public CancellationToken CommandAborted { get; } Property Value Type Description CancellationToken | Improve this Doc View Source CommandHandler Gets the selected command handler. Declaration public IFtpCommandBase CommandHandler { get; } Property Value Type Description IFtpCommandBase"
  },
  "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.DotNet.DotNetDirectoryEntry.html",
    "title": "Class DotNetDirectoryEntry | FTP Server documentation",
    "keywords": "Class DotNetDirectoryEntry A IUnixDirectoryEntry implementation for the standard .NET file system functionality. Inheritance Object DotNetFileSystemEntry DotNetDirectoryEntry Implements IUnixDirectoryEntry IUnixFileSystemEntry IUnixOwner Inherited Members DotNetFileSystemEntry.Info DotNetFileSystemEntry.Name DotNetFileSystemEntry.Permissions DotNetFileSystemEntry.LastWriteTime DotNetFileSystemEntry.CreatedTime DotNetFileSystemEntry.NumberOfLinks DotNetFileSystemEntry.Owner DotNetFileSystemEntry.Group Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.DotNet Assembly : FubarDev.FtpServer.FileSystem.DotNet.dll Syntax public class DotNetDirectoryEntry : DotNetFileSystemEntry, IUnixDirectoryEntry, IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source DotNetDirectoryEntry(DirectoryInfo, Boolean, Boolean) Initializes a new instance of the DotNetDirectoryEntry class. Declaration public DotNetDirectoryEntry(DirectoryInfo dirInfo, bool isRoot, bool allowDeleteIfNotEmpty) Parameters Type Name Description DirectoryInfo dirInfo The DirectoryInfo to extract the information from. Boolean isRoot Defines whether this the root directory. Boolean allowDeleteIfNotEmpty Is deletion of this directory allowed if it's not empty. Properties | Improve this Doc View Source DirectoryInfo Gets the directory information. Declaration public DirectoryInfo DirectoryInfo { get; } Property Value Type Description DirectoryInfo | Improve this Doc View Source IsDeletable Declaration public bool IsDeletable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRoot Declaration public bool IsRoot { get; } Property Value Type Description Boolean Implements IUnixDirectoryEntry IUnixFileSystemEntry IUnixOwner"
  },
  "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemEntry.html": {
    "href": "api/FubarDev.FtpServer.FileSystem.InMemory.InMemoryFileSystemEntry.html",
    "title": "Class InMemoryFileSystemEntry | FTP Server documentation",
    "keywords": "Class InMemoryFileSystemEntry The base class for all in-memory file system entries. Inheritance Object InMemoryFileSystemEntry InMemoryDirectoryEntry InMemoryFileEntry Implements IUnixFileSystemEntry IUnixOwner Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : FubarDev.FtpServer.FileSystem.InMemory Assembly : FubarDev.FtpServer.FileSystem.InMemory.dll Syntax public abstract class InMemoryFileSystemEntry : IUnixFileSystemEntry, IUnixOwner Constructors | Improve this Doc View Source InMemoryFileSystemEntry(Nullable<InMemoryDirectoryEntry>, String, IUnixPermissions) Initializes a new instance of the InMemoryFileSystemEntry class. Declaration protected InMemoryFileSystemEntry(InMemoryDirectoryEntry? parent, string name, IUnixPermissions permissions) Parameters Type Name Description Nullable < InMemoryDirectoryEntry > parent The parent entry. String name The name of this entry. IUnixPermissions permissions The permissions of this entry. Properties | Improve this Doc View Source CreatedTime Declaration public DateTimeOffset? CreatedTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Group Declaration public string Group { get; } Property Value Type Description String | Improve this Doc View Source LastWriteTime Declaration public DateTimeOffset? LastWriteTime { get; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source NumberOfLinks Declaration public long NumberOfLinks { get; } Property Value Type Description Int64 | Improve this Doc View Source Owner Declaration public string Owner { get; } Property Value Type Description String | Improve this Doc View Source Parent Gets or sets the parent entry. Declaration public InMemoryDirectoryEntry? Parent { get; set; } Property Value Type Description Nullable < InMemoryDirectoryEntry > | Improve this Doc View Source Permissions Declaration public IUnixPermissions Permissions { get; } Property Value Type Description IUnixPermissions Methods | Improve this Doc View Source SetCreateTime(DateTimeOffset) Sets the creation time. Declaration public InMemoryFileSystemEntry SetCreateTime(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp The new value of the creation time. Returns Type Description InMemoryFileSystemEntry The changed file system entry. | Improve this Doc View Source SetLastWriteTime(DateTimeOffset) Sets the last write time. Declaration public InMemoryFileSystemEntry SetLastWriteTime(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp The new value of the last write time. Returns Type Description InMemoryFileSystemEntry The changed file system entry. | Improve this Doc View Source WithOwner(IFtpUser) Configure directory entry as owned by given user . Declaration [Obsolete(\"Use the overload with ClaimsPrincipal.\")] public InMemoryFileSystemEntry WithOwner(IFtpUser user) Parameters Type Name Description IFtpUser user The user that becomes the new owner of this directory entry. Returns Type Description InMemoryFileSystemEntry The changed file system entry. | Improve this Doc View Source WithOwner(ClaimsPrincipal) Configure directory entry as owned by given user . Declaration public InMemoryFileSystemEntry WithOwner(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user The user that becomes the new owner of this directory entry. Returns Type Description InMemoryFileSystemEntry The changed file system entry. Implements IUnixFileSystemEntry IUnixOwner"
  },
  "articles/custom-authentication.html": {
    "href": "articles/custom-authentication.html",
    "title": "Custom Account Management Development | FTP Server documentation",
    "keywords": "Warning This guide is under construction! Overview This article will show you how to develop your own account management. Warning This is a very advanced topic requiring solid knowledge of .NET. Interfaces The following interface must be implemented: IMembershipProvider is used to authorize the user"
  },
  "articles/ftps.html": {
    "href": "articles/ftps.html",
    "title": "FTP over SSL/TLS | FTP Server documentation",
    "keywords": "Introduction The FTPS support enables encrypted communication with the server. How to use FTPS FTPS is automatically enabled as soon as you have set an X509 certificate with private key (read: the X509Certificate2 from a .pfx / .pkcs12 file) in the AuthTlsOptions . Example var cert = new X509Certificate2(\"my.pfx\", \"my-super-strong-password-that-nobody-knows\"); services.Configure<AuthTlsOptions>(cfg => cfg.ServerCertificate = cert); Epilogue You can test this - like many other things - using the sample application in the repository."
  },
  "articles/configuration.html": {
    "href": "articles/configuration.html",
    "title": "FTP Server Configuration | FTP Server documentation",
    "keywords": "Introduction The configuration is split into several parts: Services IFtpServerBuilder is the FTP Server configuration builder FtpServerOptions for the FTP server transport configuration FtpConnectionOptions to configure the default control connection text encoding AuthTlsOptions for the FTPS configuration DotNetFileSystemOptions to configure the file system access SystCommandOptions to specify the behavior of the SYST command Services You use a ServiceCollection and add your services to, e.g.: var services = new ServiceCollection() .AddFtpServer(builder => builder .EnableAnonymousAuthentication() .UseDotNetFileSystem()); This is also the absolute minimum configuration for the FTP server. IFtpServerBuilder This is the place where other services are configured that will be used by the FTP server. This are the options currently available: builder.EnableAnonymousAuthentication() : Enables anonymous authentication builder.UseDotNetFileSystem() : Uses a System.IO-based file systme builder.UseGoogleDrive(...) : Uses Google Drive as virtual file system FtpServerOptions This configures the address/host/port used by the server to listen for connections. The default value is localhost as address (IPv4 and IPv6 - if available) and 21 as port. FtpConnectionOptions This may be used to configure a different default character encoding. The default value is ASCII. AuthTlsOptions This configuration option allows the specification of an X509Certificate2 (with private key) that will be used to initiate encrypted connections. DotNetFileSystemOptions Used to configure the behavior of the System.IO-based file system access, like: The path to the root directory Usage of the user ID as subdirectory Is deletion of non-empty directories allowed? SystCommandOptions Here you can specify the operating system to be returned by the SYST command."
  },
  "articles/custom-file-system.html": {
    "href": "articles/custom-file-system.html",
    "title": "Custom File System Development | FTP Server documentation",
    "keywords": "Warning This guide is under construction! Overview This article will show you how to develop your own file system. Warning This is a very advanced topic requiring solid knowledge of .NET. Interfaces The following interfaces must be implemented: IFileSystemClassFactory is used to get user-specific file system access IUnixFileSystem provides the main file system operations IUnixDirectoryEntry represents a directory entry IUnixFileEntry represents a file entry"
  },
  "articles/file-systems.html": {
    "href": "articles/file-systems.html",
    "title": "File Systems | FTP Server documentation",
    "keywords": "Overview The FTP server provides two file systems by default: System.IO -based file system Google Drive-based file system The System.IO -based file system is usually what you want and the Google Drive-based file system is a proof-of-concept. System.IO -based file system This file system just uses the operating systems underlying file system and serves it to the user. Configuration Here is an example of a configuration: services.Configure<DotNetFileSystemOptions>(cfg => { cfg.RootPath = \"/your/root/path\"; }); You can also configure the following: Usage of the user ID as subdirectory Is deletion of non-empty directories allowed? Google Drive-based file system This topic is explained in a separate article . Your own file system This topic is explained in a separate article ."
  },
  "articles/google-drive.html": {
    "href": "articles/google-drive.html",
    "title": "Gooogle Drive-based virtual file system | FTP Server documentation",
    "keywords": "Introduction This is an example of a virtual file system that uses Google Drive as backend. Important It is a basic requirement that you know how to use the Google developer console to register your application and get the necessary credentials/information. The Google Drive support uses Googles .NET API which is an advantage for people already familiar with it. Adding the package to your project dotnet add package FubarDev.FtpServer.FileSystem.GoogleDrive Using a users drive This is what other applications do when they want to access your Google Drive and the easiest to configure/use. Getting the client secret Open the Google Developer Console Create a project Allow the project to use the Google Drive API Create an OAuth 2.0 client (Other) Download the client secrets file The client secrets file should look like this: { \"installed\": { \"client_id\": \"redacted.apps.googleusercontent.com\", \"project_id\": \"your-project-id-123456\", \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\", \"token_uri\": \"https://accounts.google.com/o/oauth2/token\", \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\", \"client_secret\": \"redacted\", \"redirect_uris\": [ \"urn:ietf:wg:oauth:2.0:oob\", \"http://localhost\" ] } } Configuring Google Drive as virtual file system // Configuration var userName = \"your-user-name@gmail.com\"; var clientSecretsFile = \"client_secret_redacted.apps.googleusercontent.com.json\"; // Loading the credentials UserCredential credential; using (var secretsSource = new System.IO.FileStream(clientSecretsFile, FileMode.Open)) { var secrets = GoogleClientSecrets.Load(secretsSource); credential = await GoogleWebAuthorizationBroker.AuthorizeAsync( secrets.Secrets, new[] { DriveService.Scope.DriveFile, DriveService.Scope.Drive }, userName, CancellationToken.None); } // Adding the FTP server using Google Drive services .AddFtpServer(sb => sb .UseGoogleDrive(credential) .EnableAnonymousAuthentication()); Starting the server Upon start, the FTP server loads the credentials and - if not already authenticated - opens the web page to authenticate your server to access the users Google Drive."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Install from NuGet.org | FTP Server documentation",
    "keywords": "Install from NuGet.org The project is split into multiple packages: Package Description FubarDev.FtpServer The FTP server implementation FubarDev.FtpServer.Abstractions The base classes/interfaces; Reference this to implement custom commands, file systems, authentication FubarDev.FtpServer.Commands The FTP commands implemented for this FTP server FubarDev.FtpServer.FileSystem.DotNet The System.IO-based file system access FubarDev.FtpServer.FileSystem.GoogleDrive Google Drive as virtual file system Getting Started Check out the tour of FluentMigrator in our Quickstart Basic topics Configuration Logging Authentication File Systems Advanced topics Logging FTPS Google Drive Custom File System Development Custom Account Management"
  },
  "articles/quickstart-aspnetcore-host.html": {
    "href": "articles/quickstart-aspnetcore-host.html",
    "title": "Your first FTP server | FTP Server documentation",
    "keywords": "Creating a project mkdir TestAspNetCoreHost cd TestAspNetCoreHost dotnet new web --no-https Adding the NuGet packages # For the main FTP server dotnet add package FubarDev.FtpServer # For the System.IO-based file system access dotnet add package FubarDev.FtpServer.FileSystem.DotNet Create an IHostedService implementation Important This is only required for version 3.0, because the FTP server will provide a much tighter ASP.NET Core integration in a future release. Create a new file named HostedFtpService.cs , which contains the following code: using System.Threading; using System.Threading.Tasks; using FubarDev.FtpServer; using Microsoft.Extensions.Hosting; namespace TestAspNetCoreHost { internal class HostedFtpService : IHostedService { private readonly IFtpServerHost _ftpServerHost; /// <summary> /// Initializes a new instance of the <see cref=\"HostedFtpService\"/> class. /// </summary> /// <param name=\"ftpServerHost\">The FTP server host that gets wrapped as a hosted service.</param> public HostedFtpService( IFtpServerHost ftpServerHost) { _ftpServerHost = ftpServerHost; } /// <inheritdoc /> public Task StartAsync(CancellationToken cancellationToken) { return _ftpServerHost.StartAsync(cancellationToken); } /// <inheritdoc /> public Task StopAsync(CancellationToken cancellationToken) { return _ftpServerHost.StopAsync(cancellationToken); } } } Using the FTP server Change your Program.cs to the following code: using System.IO; using FubarDev.FtpServer; using FubarDev.FtpServer.FileSystem.DotNet; using Microsoft.AspNetCore.Hosting; using Microsoft.Extensions.DependencyInjection; using Microsoft.Extensions.Hosting; namespace TestAspNetCoreHost { public class Program { public static void Main(string[] args) { CreateHostBuilder(args).Build().Run(); } public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureServices( services => { // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services .AddFtpServer( builder => builder .UseDotNetFileSystem() .EnableAnonymousAuthentication()); // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"*\"); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add the FTP server as hosted service services .AddHostedService<HostedFtpService>(); }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); } } Starting the FTP server dotnet run Now your FTP server should be accessible at 127.0.0.1:21 ."
  },
  "articles/project-structure.html": {
    "href": "articles/project-structure.html",
    "title": "FTP Server Project Structure | FTP Server documentation",
    "keywords": "Introduction The FTP server consists of the following parts: Account management Membership providers (e.g. for anonymous users, PAM, etc...) Member information (e.g. home directories, etc...) Authentication Authentication mechanisms (e.g. AUTH TLS ) Authorization Authorization mechanisms (e.g. password) Authorization actions (e.g. for setting the home directory) Commands (e.g. LIST ) File systems .NET I/O Google Drive Unix In-memory Account management The account management is centered around the following interfaces: IMembershipProvider for username/password authentication IAccountDirectoryQuery to get the users root and home directories The IMembershipProvider is only useful for password-based authorization mechanisms. Authentication There is currently only one authentication mechanism implemented: TLS . Authorization Only one authorization mechanism is implemented: PasswordAuthorization . Every authorization mechanism is centered around three commands: USER : Provides the user name PASS : Provides the password ACCT : Provides additional information The full state machine for an authentication/authorization can be found in RFC 2228. Commands All commands are implemented as thread-safe singletons. This is a requirement due to the fact that commands can provide extensions that will show up during a FEAT request. There are two kinds of extensions: FEAT -Extensions (provided by a FTP command handler) Extensions hosted by an FTP command, like OPTS or SITE The FEAT extensions are only there to tell the client that some commands support special features. Extensions can also be attached to a command that is also an extension host, like OPTS or SITE . Those extensions are reported to the FEAT command through the extension hosts. File systems File systems are discussed here"
  },
  "articles/quickstart-generic-host.html": {
    "href": "articles/quickstart-generic-host.html",
    "title": "Your first FTP server | FTP Server documentation",
    "keywords": "Creating a project mkdir TestGenericHost cd TestGenericHost dotnet new console Adding the NuGet packages # For dependency injection support (required) dotnet add package Microsoft.Extensions.DependencyInjection # For the main FTP server dotnet add package FubarDev.FtpServer # For the System.IO-based file system access dotnet add package FubarDev.FtpServer.FileSystem.DotNet Create an IHostedService implementation Important This is only required for version 3.0, because the FTP server will provide a much tighter ASP.NET Core integration in a future release. Create a new file named HostedFtpService.cs , which contains the following code: using System.Threading; using System.Threading.Tasks; using FubarDev.FtpServer; using Microsoft.Extensions.Hosting; namespace TestGenericHost { internal class HostedFtpService : IHostedService { private readonly IFtpServerHost _ftpServerHost; /// <summary> /// Initializes a new instance of the <see cref=\"HostedFtpService\"/> class. /// </summary> /// <param name=\"ftpServerHost\">The FTP server host that gets wrapped as a hosted service.</param> public HostedFtpService( IFtpServerHost ftpServerHost) { _ftpServerHost = ftpServerHost; } /// <inheritdoc /> public Task StartAsync(CancellationToken cancellationToken) { return _ftpServerHost.StartAsync(cancellationToken); } /// <inheritdoc /> public Task StopAsync(CancellationToken cancellationToken) { return _ftpServerHost.StopAsync(cancellationToken); } } } Using the FTP server Change your Program.cs to the following code: using System; using System.IO; using System.Threading.Tasks; using FubarDev.FtpServer; using FubarDev.FtpServer.FileSystem.DotNet; using Microsoft.Extensions.DependencyInjection; using Microsoft.Extensions.Hosting; namespace TestGenericHost { class Program { static Task Main() { var hostBuilder = new HostBuilder() .UseConsoleLifetime() .ConfigureServices( (hostContext, services) => { // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services .AddFtpServer(builder => builder .UseDotNetFileSystem() .EnableAnonymousAuthentication()); // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"127.0.0.1\"); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add the FTP server as hosted service services .AddHostedService<HostedFtpService>(); }); var host = hostBuilder.Build(); return host.RunAsync(); } } } Starting the FTP server dotnet run Now your FTP server should be accessible at 127.0.0.1:21 ."
  },
  "index.html": {
    "href": "index.html",
    "title": "FTP server | FTP Server documentation",
    "keywords": "FTP server This FTP Server is a pure .NET implementation with the following goals: Easy to use Extensible Virtual file system support User-defined authentication Getting started There is a quickstart tutorial available. What does it look like? // Setup dependency injection var services = new ServiceCollection(); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services.AddFtpServer(builder => builder .UseDotNetFileSystem() // Use the .NET file system functionality .EnableAnonymousAuthentication()); // allow anonymous logins // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"127.0.0.1\"); // Build the service provider using (var serviceProvider = services.BuildServiceProvider()) { // Initialize the FTP server var ftpServerHost = serviceProvider.GetRequiredService<IFtpServerHost>(); // Start the FTP server await ftpServerHost.StartAsync(); Console.WriteLine(\"Press ENTER/RETURN to close the test application.\"); Console.ReadLine(); // Stop the FTP server await ftpServerHost.StopAsync(); } ASP.NET Core integration You can also add the FTP server to your ASP.NET Core application by following the instructions in this quickstart tutorial for ASP.NET Core . Further information You find more information on the articles overview ."
  },
  "articles/logging.html": {
    "href": "articles/logging.html",
    "title": "FTP Server logging | FTP Server documentation",
    "keywords": "Introduction The FTP server utilizes Microsoft.Extensions.Logging which provides an interface to many logging frameworks (e.g. NLog ). Example: Using SeriLog Adding SeriLog to the project Go to the quickstart project created during the Quickstart tutorial and add the following NuGet packages: # Serilog.Extensions.Logging dotnet add package Serilog.Extensions.Logging # Serilog.Sinks.Console dotnet add package Serilog.Sinks.Console Configure serilog in Program.cs Add the highlighted lines to your Program.cs: using System; using System.IO; using FubarDev.FtpServer; using FubarDev.FtpServer.FileSystem.DotNet; using Microsoft.Extensions.DependencyInjection; using Serilog; namespace QuickStart { class Program { static async Task Main(string[] args) { // Configure Serilog Log.Logger = new LoggerConfiguration() .MinimumLevel.Verbose() .Enrich.FromLogContext() .WriteTo.Console() .CreateLogger(); // Setup dependency injection var services = new ServiceCollection(); // Add Serilog as logger provider services.AddLogging(lb => lb.AddSerilog()); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services.AddFtpServer(builder => builder .UseDotNetFileSystem() // Use the .NET file system functionality .EnableAnonymousAuthentication()); // allow anonymous logins // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"127.0.0.1\"); // Build the service provider using (var serviceProvider = services.BuildServiceProvider()) { // Initialize the FTP server var ftpServerHost = serviceProvider.GetRequiredService<IFtpServerHost>(); // Start the FTP server await ftpServerHost.StartAsync(); Console.WriteLine(\"Press ENTER/RETURN to close the test application.\"); Console.ReadLine(); // Stop the FTP server await ftpServerHost.StopAsync(); } } } } Now you can see all the log messages from the FTP server. Example: Using NLog Adding NLog to the project Go to the quickstart project created during the Quickstart tutorial and add the following NuGet package: # Add NLog dotnet add package NLog.Extensions.Logging Add the NLog configuration Now add a file called nlog.config with the following contents: <?xml version=\"1.0\" encoding=\"utf-8\" ?> <nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd\" autoReload=\"true\" throwExceptions=\"false\"> <targets> <target xsi:type=\"ColoredConsole\" name=\"console\" layout=\"${longdate} ${uppercase:${level}} ${mdlc:item=RemoteAddress} ${message} ${exception:format=tostring}\"/> </targets> <rules> <logger name=\"*\" minlevel=\"Trace\" writeTo=\"console\" /> </rules> </nlog> Add the configuration to the project Change the csproj file by adding the following lines: <Project Sdk=\"Microsoft.NET.Sdk\"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>netcoreapp2.2</TargetFramework> <RootNamespace>QuickStart</RootNamespace> </PropertyGroup> <ItemGroup> <ProjectReference Include=\"..\\..\\..\\src\\FubarDev.FtpServer\\FubarDev.FtpServer.csproj\" /> <ProjectReference Include=\"..\\..\\..\\src\\FubarDev.FtpServer.FileSystem.DotNet\\FubarDev.FtpServer.FileSystem.DotNet.csproj\" /> </ItemGroup> <ItemGroup> <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.1.0\" /> <PackageReference Include=\"NLog.Extensions.Logging\" Version=\"1.1.0\" /> </ItemGroup> <ItemGroup> <Content Include=\"nlog.config\"> <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory> </Content> </ItemGroup> </Project> This ensures that the nlog.config file gets copied into the build output folder and is available for the application. Registering NLog in Program.cs using System; using System.IO; using FubarDev.FtpServer; using FubarDev.FtpServer.FileSystem.DotNet; using Microsoft.Extensions.DependencyInjection; using Microsoft.Extensions.Logging; using NLog.Extensions.Logging; namespace QuickStart { class Program { static void Main(string[] args) { // Setup dependency injection var services = new ServiceCollection(); // Add logging services.AddLogging(lb => lb.SetMinimumLevel(LogLevel.Trace)); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services.AddFtpServer(builder => builder .UseDotNetFileSystem() // Use the .NET file system functionality .EnableAnonymousAuthentication()); // allow anonymous logins // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"127.0.0.1\"); // Build the service provider using (var serviceProvider = services.BuildServiceProvider()) { var loggerFactory = serviceProvider.GetRequiredService<ILoggerFactory>(); //configure NLog loggerFactory.AddNLog(new NLogProviderOptions { CaptureMessageTemplates = true, CaptureMessageProperties = true }); NLog.LogManager.LoadConfiguration(\"nlog.config\"); // Initialize the FTP server var ftpServerHost = serviceProvider.GetRequiredService<IFtpServerHost>(); // Start the FTP server ftpServerHost.StartAsync().Wait(); Console.WriteLine(\"Press ENTER/RETURN to close the test application.\"); Console.ReadLine(); // Stop the FTP server ftpServerHost.StopAsync().Wait(); } } } } Now you can see all the log messages from the FTP server."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Your first FTP server | FTP Server documentation",
    "keywords": "Creating a project mkdir ftpserver cd ftpserver dotnet new console Adding the NuGet packages # For dependency injection support (required) dotnet add package Microsoft.Extensions.DependencyInjection # For the main FTP server dotnet add package FubarDev.FtpServer # For the System.IO-based file system access dotnet add package FubarDev.FtpServer.FileSystem.DotNet Using the FTP server Change your Program.cs to the following code: using System; using System.IO; using System.Threading; using System.Threading.Tasks; using FubarDev.FtpServer; using FubarDev.FtpServer.FileSystem.DotNet; using Microsoft.Extensions.DependencyInjection; namespace QuickStart { class Program { static async Task Main(string[] args) { // Setup dependency injection var services = new ServiceCollection(); // use %TEMP%/TestFtpServer as root folder services.Configure<DotNetFileSystemOptions>(opt => opt .RootPath = Path.Combine(Path.GetTempPath(), \"TestFtpServer\")); // Add FTP server services // DotNetFileSystemProvider = Use the .NET file system functionality // AnonymousMembershipProvider = allow only anonymous logins services.AddFtpServer(builder => builder .UseDotNetFileSystem() // Use the .NET file system functionality .EnableAnonymousAuthentication()); // allow anonymous logins // Configure the FTP server services.Configure<FtpServerOptions>(opt => opt.ServerAddress = \"127.0.0.1\"); // Build the service provider using (var serviceProvider = services.BuildServiceProvider()) { // Initialize the FTP server var ftpServerHost = serviceProvider.GetRequiredService<IFtpServerHost>(); // Start the FTP server await ftpServerHost.StartAsync(); Console.WriteLine(\"Press ENTER/RETURN to close the test application.\"); Console.ReadLine(); // Stop the FTP server await ftpServerHost.StopAsync(); } } } } Starting the FTP server dotnet run Now your FTP server should be accessible at 127.0.0.1:21 ."
  }
}